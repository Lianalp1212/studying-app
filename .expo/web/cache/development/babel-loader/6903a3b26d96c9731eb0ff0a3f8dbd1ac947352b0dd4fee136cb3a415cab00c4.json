{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text, ButtonGroup } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport { useEffect, useState, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref5 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar QUESTION1_SCREEN = \"Question1\";\nvar QUESTION2_SCREEN = \"Question2\";\nvar QUESTION3_SCREEN = \"Question3\";\nvar SUMMARY_SCREEN = \"Summary\";\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentQuestionIndex = _useState2[0],\n    setCurrentQuestionIndex = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    answeredCount = _useState4[0],\n    setAnsweredCount = _useState4[1];\n  var questions = [{\n    \"prompt\": \"Q1: Select the best answer: Who are you?\",\n    \"type\": \"multiple-choice\",\n    \"index\": 0,\n    \"key\": \"0\",\n    \"choices\": [\"It's just me, myself and I\", \"거울 속 비친 넌 누구인가\", \"기대 안에 기대 이 길의 뒤에\", \"All of the above\"],\n    \"correct\": 3\n  }, {\n    \"prompt\": \"Q2: Fill in the blank: Happy ______ day\",\n    \"type\": \"multiple-answer\",\n    \"index\": 1,\n    \"key\": \"1\",\n    \"choices\": [\"Birthday\", \"Death\", \"Best\", \"Worst\"],\n    \"correct\": [1, 3]\n  }, {\n    \"prompt\": \"Q3: Is the following statment true or false?\\n\\n        Stray Kids, STAY or none, we're gonna cross the finish line\",\n    \"type\": \"true-false\",\n    \"index\": 2,\n    \"key\": \"2\",\n    \"choices\": [\"True\", \"False\"],\n    \"correct\": 0\n  }];\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: QUESTION1_SCREEN,\n      children: [_jsx(Stack.Screen, {\n        name: \"Question1\",\n        component: Question1Screen,\n        initialParams: {\n          questions: questions,\n          currentQuestionIndex: currentQuestionIndex,\n          answeredCount: answeredCount\n        },\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Question2\",\n        component: Question2Screen,\n        initialParams: {\n          questions: questions,\n          currentQuestionIndex: currentQuestionIndex,\n          answeredCount: answeredCount\n        },\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Question3\",\n        component: Question3Screen,\n        initialParams: {\n          questions: questions,\n          currentQuestionIndex: currentQuestionIndex,\n          answeredCount: answeredCount\n        },\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Summary\",\n        component: SummaryScreen,\n        initialParams: {\n          questions: questions,\n          currentQuestionIndex: currentQuestionIndex,\n          answeredCount: answeredCount\n        },\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nfunction Question1Screen(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _route$params = route.params,\n    questions = _route$params.questions,\n    currentQuestionIndex = _route$params.currentQuestionIndex,\n    answeredCount = _route$params.answeredCount;\n  var currentQuestion = questions[currentQuestionIndex];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectChoice = _useState6[0],\n    setSelectChoice = _useState6[1];\n  var prevAnsweredCount = React.useRef;\n  function checkAnswer() {\n    if (selectChoice === currentQuestion.correct) {\n      prevAnsweredCount + 1, _readOnlyError(\"answeredCount\");\n    } else {\n      prevAnsweredCount, _readOnlyError(\"answeredCount\");\n    }\n  }\n  var handleSelectChoice = function handleSelectChoice(value) {\n    setSelectChoice(value);\n  };\n  var handleNextQuestion = function handleNextQuestion() {\n    setSelectChoice(function (prevSelectChoice) {\n      return [].concat(_toConsumableArray(prevSelectChoice), [selectChoice]);\n    });\n    setSelectChoice(null);\n    if (currentQuestionIndex + 1 < questions.length) {\n      navigation.push(QUESTION2_SCREEN, {\n        questions: questions,\n        currentQuestionIndex: currentQuestionIndex + 1\n      });\n    }\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Quiz\"\n      }), _jsx(Text, {\n        style: styles.subheading,\n        children: currentQuestion.prompt\n      }), _jsx(ButtonGroup, {\n        buttons: currentQuestion.choices,\n        selectChoice: selectChoice,\n        onPress: function onPress(value) {\n          setSelectChoice(value);\n        },\n        containerStyle: {\n          marginBottom: 20\n        },\n        vertical: true\n      }), _jsx(Button, {\n        title: \"Next Question\",\n        testID: \"next-question\",\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.push(QUESTION2_SCREEN, {\n            questions: questions,\n            currentQuestionIndex: currentQuestionIndex + 1\n          });\n        }\n      })]\n    })\n  });\n}\nfunction Question2Screen(_ref2) {\n  var route = _ref2.route,\n    navigation = _ref2.navigation;\n  var _route$params2 = route.params,\n    questions = _route$params2.questions,\n    currentQuestionIndex = _route$params2.currentQuestionIndex;\n  var currentQuestion = questions[currentQuestionIndex];\n  var _useState7 = useState([0, 1, 2, 3]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedChoices = _useState8[0],\n    setSelectedChoices = _useState8[1];\n  var handleSelectedChoices = function handleSelectedChoices(value) {\n    setSelectedChoices(value);\n  };\n  var handleNextQuestion = function handleNextQuestion() {\n    setSelectedChoices(function (prevSelectedChoices) {\n      return [].concat(_toConsumableArray(prevSelectedChoices), [selectedChoices]);\n    });\n    setSelectedChoices(null);\n    if (currentQuestionIndex + 1 < questions.length) {\n      navigation.push(QUESTION3_SCREEN, {\n        questions: questions,\n        currentQuestionIndex: currentQuestionIndex + 1,\n        selectedChoices: selectedChoices\n      });\n    }\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Quiz\"\n      }), _jsx(Text, {\n        style: styles.subheading,\n        children: currentQuestion.prompt\n      }), _jsx(ButtonGroup, {\n        buttons: currentQuestion.choices,\n        selectMultiple: true,\n        selectChoice: selectedChoices,\n        onPress: function onPress(value) {\n          setSelectedChoices(value);\n        },\n        containerStyle: {\n          marginBottom: 20\n        }\n      }), _jsx(Button, {\n        title: \"Next Question\",\n        testID: \"next-question\",\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.push(QUESTION3_SCREEN, {\n            questions: questions,\n            currentQuestionIndex: currentQuestionIndex + 1\n          });\n        }\n      })]\n    })\n  });\n}\nfunction Question3Screen(_ref3) {\n  var route = _ref3.route,\n    navigation = _ref3.navigation;\n  var _route$params3 = route.params,\n    questions = _route$params3.questions,\n    currentQuestionIndex = _route$params3.currentQuestionIndex;\n  var currentQuestion = questions[currentQuestionIndex];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    selectChoice = _useState10[0],\n    setSelectChoice = _useState10[1];\n  var _useState11 = useState([0, 1, 2, 3]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    selectedChoices = _useState12[0],\n    setSelectedChoices = _useState12[1];\n  var handleSelectChoice = function handleSelectChoice(value) {\n    setSelectChoice(value);\n  };\n  var handleNextQuestion = function handleNextQuestion() {\n    setSelectChoice(function (prevSelectChoice) {\n      return [].concat(_toConsumableArray(prevSelectChoice), [selectChoice]);\n    });\n    setSelectChoice(null);\n    if (currentQuestionIndex + 1 < questions.length) {\n      navigation.push(SUMMARY_SCREEN, {\n        questions: questions\n      });\n    }\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Quiz\"\n      }), _jsx(Text, {\n        style: styles.subheading,\n        children: currentQuestion.prompt\n      }), _jsx(ButtonGroup, {\n        buttons: currentQuestion.choices,\n        selectChoice: selectChoice,\n        onPress: function onPress(value) {\n          setSelectChoice(value);\n        },\n        containerStyle: {\n          marginBottom: 20\n        }\n      }), _jsx(Button, {\n        title: \"Finish\",\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.push(SUMMARY_SCREEN, {\n            questions: questions\n          });\n        }\n      })]\n    })\n  });\n}\nfunction SummaryScreen(_ref4) {\n  var route = _ref4.route,\n    navigation = _ref4.navigation;\n  var questions = route.params.questions;\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Summary\"\n    }), _jsx(Text, {\n      testID: \"total\",\n      children: \"Quiz Score:\"\n    }), _jsx(Button, {\n      title: \"Restart\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.push(QUESTION1_SCREEN, {\n          questions: questions\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  buttonGroup: {\n    backgroundColor: \"#2089dc\",\n    color: \"white\",\n    textAlign: \"center\",\n    paddingVertical: 5,\n    marginBottom: 10\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  },\n  subheading: {\n    fontSize: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  }\n});","map":{"version":3,"names":["Button","CheckBox","Input","Text","ButtonGroup","Font","useEffect","useState","useCallback","NavigationContainer","createNativeStackNavigator","StackActions","React","SafeAreaView","jsx","_jsx","jsxs","_jsxs","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref5","font","loadAsync","_x2","QUESTION1_SCREEN","QUESTION2_SCREEN","QUESTION3_SCREEN","SUMMARY_SCREEN","App","_useState","_useState2","_slicedToArray","currentQuestionIndex","setCurrentQuestionIndex","_useState3","_useState4","answeredCount","setAnsweredCount","questions","children","Navigator","initialRouteName","Screen","name","component","Question1Screen","initialParams","options","headerShown","Question2Screen","Question3Screen","SummaryScreen","_ref","route","navigation","_route$params","params","currentQuestion","_useState5","_useState6","selectChoice","setSelectChoice","prevAnsweredCount","useRef","checkAnswer","correct","_readOnlyError","handleSelectChoice","value","handleNextQuestion","prevSelectChoice","concat","_toConsumableArray","length","push","View","style","styles","heading","subheading","prompt","buttons","choices","onPress","containerStyle","marginBottom","vertical","title","testID","button","_ref2","_route$params2","_useState7","_useState8","selectedChoices","setSelectedChoices","handleSelectedChoices","prevSelectedChoices","selectMultiple","_ref3","_route$params3","_useState9","_useState10","_useState11","_useState12","_ref4","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","horizontal","flexDirection","padding","buttonGroup","color","textAlign","paddingVertical","space","height","fontSize"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab10/App.js"],"sourcesContent":["// used lab9 as a base\r\n// question one reference - https://colorcodedlyrics.com/2022/12/30/ateez-halazia/\r\n// question two refercne - https://colorcodedlyrics.com/2021/12/09/xdinary-heroes-egseudineoli-hieolojeu-happy-death-day/\r\n// question three reference  - https://colorcodedlyrics.com/2021/12/23/stray-kids-broken-compass-gojangnan-nachimban/\r\n\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text, ButtonGroup } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport * as React from 'react';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nconst QUESTION1_SCREEN = \"Question1\"\r\nconst QUESTION2_SCREEN = \"Question2\"\r\nconst QUESTION3_SCREEN = \"Question3\"\r\nconst SUMMARY_SCREEN = \"Summary\"\r\n\r\nexport default function App() {\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0)\r\n  const [answeredCount, setAnsweredCount] = useState(0)\r\n  let questions = [\r\n    {\r\n      \"prompt\": \"Q1: Select the best answer: Who are you?\",\r\n      \"type\": \"multiple-choice\",\r\n      \"index\": 0,\r\n      \"key\": \"0\",\r\n      \"choices\": [\r\n        \"It's just me, myself and I\",\r\n        \"거울 속 비친 넌 누구인가\",\r\n        \"기대 안에 기대 이 길의 뒤에\",\r\n        \"All of the above\",\r\n    ],\r\n      \"correct\": 3\r\n    },\r\n    {\r\n      \"prompt\": \"Q2: Fill in the blank: Happy ______ day\",\r\n      \"type\": \"multiple-answer\",\r\n      \"index\": 1,\r\n      \"key\": \"1\",\r\n      \"choices\": [\r\n        \"Birthday\",\r\n        \"Death\",\r\n        \"Best\",\r\n        \"Worst\",\r\n    ],\r\n      \"correct\": [1,3]\r\n    },\r\n    {\r\n      \"prompt\": `Q3: Is the following statment true or false?\\n\r\n        Stray Kids, STAY or none, we're gonna cross the finish line`,\r\n      \"type\": \"true-false\",\r\n      \"index\": 2,\r\n      \"key\": \"2\",\r\n        \"choices\": [\r\n        \"True\",\r\n        \"False\",\r\n    ],\r\n      \"correct\": 0\r\n    },\r\n  ]\r\n    return (\r\n      <NavigationContainer>{\r\n        <Stack.Navigator initialRouteName={QUESTION1_SCREEN}>\r\n          <Stack.Screen name=\"Question1\" component={Question1Screen} initialParams={{questions: questions, currentQuestionIndex: currentQuestionIndex, \r\n            answeredCount: answeredCount}} options={{headerShown: false}}></Stack.Screen>\r\n          <Stack.Screen name=\"Question2\" component={Question2Screen} initialParams={{questions: questions, currentQuestionIndex: currentQuestionIndex, \r\n            answeredCount: answeredCount}} options={{headerShown: false}}></Stack.Screen>\r\n          <Stack.Screen name=\"Question3\" component={Question3Screen} initialParams={{questions: questions, currentQuestionIndex: currentQuestionIndex, \r\n            answeredCount: answeredCount}} options={{headerShown: false}}></Stack.Screen>\r\n          <Stack.Screen name=\"Summary\" component={SummaryScreen} initialParams={{questions: questions, currentQuestionIndex: currentQuestionIndex, \r\n            answeredCount: answeredCount}} options={{headerShown: false}}></Stack.Screen>\r\n        </Stack.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction Question1Screen({route, navigation}) {\r\n  const { questions, currentQuestionIndex, answeredCount } = route.params\r\n  let currentQuestion = questions[currentQuestionIndex]\r\n  const [selectChoice, setSelectChoice] = useState(0)\r\n  const prevAnsweredCount = React.useRef\r\n  function checkAnswer() {\r\n    if (selectChoice === currentQuestion.correct) {\r\n      answeredCount = prevAnsweredCount + 1\r\n    } else {\r\n      answeredCount = prevAnsweredCount\r\n    }\r\n  }\r\n  const handleSelectChoice = (value) => {\r\n    setSelectChoice(value)\r\n  }\r\n  const handleNextQuestion = () => {\r\n    setSelectChoice((prevSelectChoice) => [\r\n      ...prevSelectChoice,\r\n      selectChoice\r\n    ])\r\n    setSelectChoice(null)\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      navigation.push(QUESTION2_SCREEN, {questions, currentQuestionIndex: currentQuestionIndex + 1})\r\n    }\r\n  }\r\n     return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text style={styles.heading}>Quiz</Text>\r\n        <Text style={styles.subheading}>{currentQuestion.prompt}</Text>\r\n        <ButtonGroup buttons={currentQuestion.choices}\r\n          selectChoice={selectChoice}\r\n          onPress={(value) => {\r\n            setSelectChoice(value)\r\n          }}\r\n          containerStyle={{ marginBottom: 20 }}\r\n          vertical>\r\n        </ButtonGroup>  \r\n        <Button title=\"Next Question\" testID=\"next-question\" style={styles.button} onPress={() => navigation.push(QUESTION2_SCREEN, {questions, currentQuestionIndex: currentQuestionIndex + 1})}></Button>\r\n      </View>\r\n    </SafeAreaView>\r\n  ) \r\n}\r\n\r\nfunction Question2Screen({route, navigation}) {\r\n  const { questions, currentQuestionIndex  } = route.params\r\n  let currentQuestion = questions[currentQuestionIndex]\r\n  const [selectedChoices, setSelectedChoices] = useState([0, 1, 2, 3])\r\n  const handleSelectedChoices = (value) => {\r\n    setSelectedChoices(value)\r\n  }\r\n  const handleNextQuestion = () => {\r\n    setSelectedChoices((prevSelectedChoices) => [\r\n      ...prevSelectedChoices,\r\n      selectedChoices\r\n    ])\r\n    setSelectedChoices(null)\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      navigation.push(QUESTION3_SCREEN, {questions, currentQuestionIndex: currentQuestionIndex + 1, selectedChoices: selectedChoices})\r\n    }\r\n  }\r\n  return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text style={styles.heading}>Quiz</Text>\r\n        <Text style={styles.subheading}>{currentQuestion.prompt}</Text>\r\n        <ButtonGroup buttons={currentQuestion.choices}\r\n          selectMultiple\r\n          selectChoice={selectedChoices}\r\n          onPress={(value) => {\r\n            setSelectedChoices(value)\r\n          }}\r\n          containerStyle={{ marginBottom: 20 }}>\r\n        </ButtonGroup>  \r\n        <Button title=\"Next Question\" testID=\"next-question\" style={styles.button} onPress={() => navigation.push(QUESTION3_SCREEN, {questions, currentQuestionIndex: currentQuestionIndex + 1})}></Button>\r\n      </View>\r\n    </SafeAreaView>\r\n  ) \r\n}\r\n\r\nfunction Question3Screen({route, navigation}) {\r\n  const { questions, currentQuestionIndex  } = route.params\r\n  let currentQuestion = questions[currentQuestionIndex]\r\n  const [selectChoice, setSelectChoice] = useState(0)\r\n  const [selectedChoices, setSelectedChoices] = useState([0, 1, 2, 3])\r\n  \r\n  const handleSelectChoice = (value) => {\r\n    setSelectChoice(value)\r\n  }\r\n  const handleNextQuestion = () => {\r\n    setSelectChoice((prevSelectChoice) => [\r\n      ...prevSelectChoice,\r\n      selectChoice\r\n    ])\r\n    setSelectChoice(null)\r\n    if (currentQuestionIndex + 1 < questions.length) {\r\n      navigation.push(SUMMARY_SCREEN, {questions})\r\n    }\r\n  }\r\n  return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text style={styles.heading}>Quiz</Text>\r\n        <Text style={styles.subheading}>{currentQuestion.prompt}</Text>\r\n        <ButtonGroup buttons={currentQuestion.choices}\r\n          selectChoice={selectChoice}\r\n          onPress={(value) => {\r\n            setSelectChoice(value)\r\n          }}\r\n          containerStyle={{ marginBottom: 20 }}>\r\n        </ButtonGroup>  \r\n        <Button title=\"Finish\" style={styles.button} onPress={() => navigation.push(SUMMARY_SCREEN, {questions})}></Button>\r\n      </View>\r\n    </SafeAreaView>\r\n  ) \r\n}\r\n\r\nfunction SummaryScreen({route, navigation}) {\r\n  const { questions } = route.params\r\n  return (\r\n    <View>\r\n      <Text style={styles.heading}>Summary</Text>\r\n      <Text testID=\"total\">Quiz Score:</Text>\r\n      <Button title=\"Restart\" style={styles.button} onPress={() => navigation.push(QUESTION1_SCREEN, {questions})}></Button>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  buttonGroup: {\r\n    backgroundColor : \"#2089dc\",\r\n    color : \"white\",\r\n    textAlign : \"center\",\r\n    paddingVertical : 5,\r\n    marginBottom : 10\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20\r\n  },\r\n  subheading: {\r\n    fontSize: 25,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20\r\n  }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}