{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport { useEffect, useState, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Unorderedlist from 'react-native-unordered-list';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref6 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar HOME_SCREEN = \"home\";\nvar EXERCISE_SCREEN = \"exercise\";\nvar DURATION_EXERCISE = \"duration\";\nvar REPITITION_EXERCISE = \"repitition\";\nvar exerciseList = [{\n  type: DURATION_EXERCISE,\n  name: \"Running\",\n  key: 1\n}, {\n  type: DURATION_EXERCISE,\n  name: \"Plank\",\n  key: 2\n}, {\n  type: REPITITION_EXERCISE,\n  name: \"Push Ups\",\n  key: 3\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: HOME_SCREEN,\n      children: [_jsx(Stack.Screen, {\n        name: HOME_SCREEN,\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: DURATION_EXERCISE,\n        component: DurationScreen\n      }), _jsx(Stack.Screen, {\n        name: REPITITION_EXERCISE,\n        component: RepetitionScreen\n      })]\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var renderExercise = function renderExercise(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Button, {\n      title: item.name,\n      testID: item.name + \"-button\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(item.type === DURATION_EXERCISE ? \"DurationScreen\" : \"RepititionScreen\", {\n          exercise: item\n        });\n      }\n    });\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Please select an exercise\"\n      }), _jsx(FlatList, {\n        data: exerciseList,\n        renderItem: renderExercise,\n        keyExtractor: function keyExtractor(exercise) {\n          return exercise.key;\n        }\n      })]\n    })\n  });\n}\nvar currentTimer = 0;\nvar resetTimer = 0;\nfunction DurationScreen(_ref3) {\n  var exercise = _ref3.exercise,\n    setMenuScreen = _ref3.setMenuScreen;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    running = _useState2[0],\n    setRunning = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  var updateTimer = useCallback(function () {\n    if (running) {\n      setTimer(function (timer) {\n        return timer + 10;\n      });\n    }\n  }, [running]);\n  useEffect(function () {\n    currentTimer = setInterval(updateTimer, 10);\n    return function () {\n      return clearInterval(currentTimer);\n    };\n  }, [running, updateTimer]);\n  var start = useCallback(function () {\n    setRunning(!running);\n  }, [running]);\n  var reset = useCallback(function () {\n    clearInterval(currentTimer);\n    setTimer(resetTimer);\n  });\n  var mins = Math.floor(timer / (1000 * 60) % 60).toString().padStart(2, \"0\");\n  var secs = Math.floor(timer / 1000 % 60).toString().padStart(2, \"0\");\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: exerciseList.name\n    }), _jsxs(Text, {\n      style: {\n        fontSize: \"3em\",\n        fontFamily: \"monospace\",\n        textAlign: 'center'\n      },\n      children: [\"Duration: \", mins, \":\", secs]\n    }), _jsx(Button, {\n      title: \"Start\",\n      onPress: start\n    }), _jsx(Button, {\n      title: \"Reset\",\n      onPress: reset\n    }), _jsx(Button, {\n      title: \"Return\",\n      onPress: function onPress() {\n        return navigation.goBack;\n      }\n    })]\n  });\n}\nfunction RepetitionScreen(_ref4) {\n  var exercise = _ref4.exercise,\n    setMenuScreen = _ref4.setMenuScreen;\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1];\n  function add(count, setcount) {\n    setCount(function (count) {\n      return count + 1;\n    });\n  }\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: exerciseList.name\n    }), _jsx(Text, {\n      style: {\n        fontSize: \"3em\",\n        textAlign: 'center'\n      },\n      children: count\n    }), _jsx(Button, {\n      title: \"Add\",\n      onPress: function onPress() {\n        return setCount(function (count) {\n          return count + 1;\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Reset\",\n      onPress: function onPress() {\n        return setCount(0);\n      }\n    }), _jsx(Button, {\n      title: \"Return\",\n      onPress: function onPress() {\n        return setMenuScreen();\n      }\n    })]\n  });\n}\nfunction PushUpsScreen() {\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    exercise = _useState8[0],\n    setExercise = _useState8[1];\n  return _jsx(Text, {\n    children: \"Push Ups\"\n  });\n}\nfunction RelatedScreen(_ref5) {\n  var navigation = _ref5.navigation,\n    route = _ref5.route,\n    exercise = _ref5.exercise,\n    setExercise = _ref5.setExercise;\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    completed = _route$params$item.completed,\n    key = _route$params$item.key,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","useEffect","useState","useCallback","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","React","SafeAreaView","Unorderedlist","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref6","font","loadAsync","_x2","HOME_SCREEN","EXERCISE_SCREEN","DURATION_EXERCISE","REPITITION_EXERCISE","exerciseList","type","name","key","App","children","Navigator","initialRouteName","Screen","component","HomeScreen","DurationScreen","RepetitionScreen","_ref","navigation","renderExercise","_ref2","item","title","testID","style","styles","button","onPress","navigate","exercise","heading","data","renderItem","keyExtractor","currentTimer","resetTimer","_ref3","setMenuScreen","_useState","_useState2","_slicedToArray","running","setRunning","_useState3","_useState4","timer","setTimer","updateTimer","setInterval","clearInterval","start","reset","mins","Math","floor","toString","padStart","secs","fontSize","fontFamily","textAlign","goBack","_ref4","_useState5","_useState6","count","setCount","add","setcount","PushUpsScreen","_useState7","_useState8","setExercise","RelatedScreen","_ref5","route","_route$params$item","params","description","completed","relatedTasks","setOptions","flex","alignItems","justifyContent","undefined","length","tasks","filter","task","includes","cTask","dispatch","push","create","container","backgroundColor","horizontal","flexDirection","padding","space","height"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab9/App.js"],"sourcesContent":["// used lab6 as a base\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as React from 'react';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport Unorderedlist from 'react-native-unordered-list';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nconst HOME_SCREEN = \"home\"\r\nconst EXERCISE_SCREEN = \"exercise\"\r\nconst DURATION_EXERCISE = \"duration\"\r\nconst REPITITION_EXERCISE = \"repitition\"\r\n\r\nlet exerciseList = [\r\n  {type: DURATION_EXERCISE, name: \"Running\", key: 1},\r\n  {type: DURATION_EXERCISE, name: \"Plank\", key: 2},\r\n  {type: REPITITION_EXERCISE, name: \"Push Ups\", key: 3}\r\n]\r\n\r\nexport default function App() {\r\n  // let [currentScreen, setCurrentScreen] = useState(HOME_SCREEN)\r\n  // let [currentExercise, setCurrentExercise] = useState({})\r\n  // let screenComponent = undefined\r\n  // let buttonClick = useCallback ((exercise)=> {\r\n  //   setCurrentExercise(exercise)\r\n  //   setCurrentScreen(EXERCISE_SCREEN)\r\n  //   })\r\n  //   if (currentScreen === HOME_SCREEN) {\r\n  //       screenComponent = <View>\r\n  //           <Text>Exercise Menu</Text>\r\n  //           <Unorderedlist style={{listStyleType: \"none\"}}>   \r\n  //               {exerciseList.map((exercise, index) => {\r\n  //               return <Unorderedlist key={index}>\r\n  //                   <Button onPress={() => buttonClick(exercise)}>{exercise.name}</Button>\r\n  //               </Unorderedlist>\r\n  //               })}\r\n  //           </Unorderedlist>\r\n  //       </View>\r\n  //   } else if (currentScreen === EXERCISE_SCREEN) {\r\n  //       switch (currentExercise.type) {\r\n  //           case DURATION_EXERCISE: \r\n  //               screenComponent = <DurationScreen\r\n  //               setMenuScreen={()=>setCurrentScreen(HOME_SCREEN)} \r\n  //               exercise={currentExercise}/> \r\n  //       break;\r\n  //       case REPITITION_EXERCISE:\r\n  //           screenComponent = <RepetitionScreen \r\n  //           setMenuScreen={()=>setCurrentScreen(HOME_SCREEN)} \r\n  //           exercise={currentExercise}/>\r\n  //       break;\r\n  //       default:\r\n  //           screenComponent = undefined\r\n  //       }\r\n  //   } \r\n    return (\r\n      <NavigationContainer>{\r\n        <Stack.Navigator initialRouteName={HOME_SCREEN}>\r\n          <Stack.Screen name={HOME_SCREEN} component={HomeScreen}></Stack.Screen>\r\n          <Stack.Screen name={DURATION_EXERCISE} component={DurationScreen}></Stack.Screen>\r\n          <Stack.Screen name={REPITITION_EXERCISE} component={RepetitionScreen}></Stack.Screen>\r\n        </Stack.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction HomeScreen({navigation}) {\r\n  let renderExercise = ({item}) => \r\n    <Button title={item.name} testID={`${item.name}-button`} style={styles.button}\r\n    onPress={() => navigation.navigate(item.type === DURATION_EXERCISE ? \"DurationScreen\" : \"RepititionScreen\", {exercise: item})} />\r\n  return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text style={styles.heading}>Please select an exercise</Text>\r\n          <FlatList data={exerciseList}\r\n            renderItem={renderExercise}\r\n            keyExtractor={(exercise) =>exercise.key}>\r\n          </FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nlet currentTimer = 0\r\nlet resetTimer = 0\r\nfunction DurationScreen({exercise, setMenuScreen}) {\r\n    let [running, setRunning] = useState(false)\r\n    let [timer, setTimer] = useState(0)\r\n    let updateTimer = useCallback(() => {\r\n        if(running){\r\n            setTimer((timer) => timer+10)\r\n        }\r\n    }, [running])\r\n    useEffect(() => {\r\n        currentTimer = setInterval(updateTimer, 10)\r\n        return () => clearInterval(currentTimer)\r\n    }, [running, updateTimer])\r\n    let start = useCallback(() => {\r\n        setRunning(!running)\r\n    }, [running])\r\n    let reset = useCallback(() => {\r\n        clearInterval(currentTimer)\r\n        setTimer(resetTimer)\r\n    })\r\n    let mins = (Math.floor((timer / (1000*60)) % 60)).toString().padStart(2, \"0\")\r\n    let secs = (Math.floor((timer / 1000) % 60)).toString().padStart(2, \"0\")\r\n    //let {title} = exercise \r\n    return (\r\n        <View>\r\n            <Text style={styles.heading}>{exerciseList.name}</Text>\r\n            <Text style={{fontSize: \"3em\", fontFamily:\"monospace\", textAlign: 'center'}}>Duration: {mins}:{secs}</Text>\r\n            <Button title=\"Start\" onPress={start}></Button>\r\n            <Button title=\"Reset\" onPress={reset}></Button>\r\n            <Button title=\"Return\" onPress={() => navigation.goBack}></Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nfunction RepetitionScreen({exercise, setMenuScreen}) {\r\n    let [count, setCount] = useState(0)\r\n    function add(count, setcount) {\r\n        setCount(count=>count+1)\r\n    }\r\n    return <View>\r\n        <Text style={styles.heading}>{exerciseList.name}</Text>\r\n        <Text style={{fontSize: \"3em\", textAlign: 'center'}}>{count}</Text>\r\n        <Button title=\"Add\" onPress={()=>setCount(count=>count+1)}></Button>\r\n        <Button title=\"Reset\" onPress={()=>setCount(0)}></Button>\r\n        <Button title=\"Return\" onPress={()=>setMenuScreen()}></Button>\r\n    </View>\r\n}\r\n\r\nfunction PushUpsScreen() {\r\nlet [exercise, setExercise] = useState(\"\")\r\n  return (\r\n    <Text>Push Ups</Text>\r\n  )\r\n}\r\n\r\nfunction RelatedScreen({navigation, route, exercise, setExercise}) {\r\n  let {description, completed, key, relatedTasks} = route.params.item\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      title: description === \"\" ? \"No title\" : description,\r\n    })\r\n  }, [navigation])\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <Text>Details Screen</Text>\r\n      <Text>{description}</Text>\r\n      {\r\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\r\n        <>\r\n        <Text>Related Tasks:</Text>\r\n        {tasks.filter(task => relatedTasks.includes(task.key))\r\n        .map(cTask => <Button key={cTask.key} title={cTask.description} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Details', {item:cTask}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n      : undefined}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}