{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref7 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x4) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Dishes\",\n  key: \"1\",\n  completed: true,\n  relatedTasks: [2]\n}, {\n  description: \"Homework\",\n  key: \"2\",\n  completed: true,\n  relatedTasks: [3]\n}, {\n  description: \"Walk dog\",\n  key: \"3\",\n  completed: true,\n  relatedTasks: [1]\n}];\nvar loginInfo = [];\nfunction AsyncLocalStorage(_x2) {\n  return _AsyncLocalStorage.apply(this, arguments);\n}\nfunction _AsyncLocalStorage() {\n  _AsyncLocalStorage = _asyncToGenerator(function* (navigation) {\n    var key = \"loginData\";\n    loginInfo = [{\n      username: \"test\",\n      password: \"Test1@\"\n    }, {\n      username: \"aussieaussie\",\n      password: \"0Ioi@1\"\n    }];\n    try {\n      var storedData = yield AsyncStorage.getItem(key);\n      var data = JSON.parse(storedData);\n      if (data) {\n        var username = data.username,\n          password = data.password;\n        var authenticated = loginInfo.some(function (info) {\n          return info.username === username && info.password === password;\n        });\n        if (authenticated) {\n          navigation.navigate(\"Todo\", {\n            name: \"Todo\"\n          });\n        } else {\n          console.log(\"Error: username or password not found\");\n        }\n      } else {\n        console.log(\"Error: missing input\");\n      }\n    } catch (error) {\n      console.log(\"Error\");\n    }\n  });\n  return _AsyncLocalStorage.apply(this, arguments);\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Register\",\n        component: RegisterScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Todo\",\n        component: TodoHomeScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    unInput = _useState2[0],\n    setUnInput = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pInput = _useState4[0],\n    setPInput = _useState4[1];\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Please fill out your information to log in\"\n    }), _jsx(Input, {\n      testID: \"login-username\",\n      placeholder: \"Username\",\n      onChangeText: setUnInput,\n      value: unInput\n    }), _jsx(Input, {\n      testID: \"login-password\",\n      placeholder: \"Password\",\n      onChangeText: setPInput,\n      value: pInput\n    }), _jsx(Button, {\n      testID: \"login-button\",\n      title: \"Login\",\n      style: styles.button,\n      onPress: AsyncLocalStorage\n    }), _jsx(View, {\n      style: styles.space\n    }), _jsx(Button, {\n      testID: \"register-button\",\n      title: \"Register\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"Register\", {\n          name: \"Register\"\n        });\n      }\n    })]\n  });\n}\nfunction RegisterScreen() {\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    checkNews = _useState6[0],\n    setCheckNews = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    correct = _useState8[0],\n    setCorrect = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    firstName = _useState10[0],\n    setFirstName = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    firstNameError = _useState12[0],\n    setFirstNameError = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    lastName = _useState14[0],\n    setLastName = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    lastNameError = _useState16[0],\n    setLastNameError = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    username = _useState18[0],\n    setUsername = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    password = _useState20[0],\n    setPassword = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    passwordError = _useState22[0],\n    setPasswordError = _useState22[1];\n  var _useState23 = useState(\"\"),\n    _useState24 = _slicedToArray(_useState23, 2),\n    phoneNumber = _useState24[0],\n    setPhoneNumber = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    phoneError = _useState26[0],\n    setPhoneError = _useState26[1];\n  var _useState27 = useState(\"\"),\n    _useState28 = _slicedToArray(_useState27, 2),\n    email = _useState28[0],\n    setEmail = _useState28[1];\n  var _useState29 = useState(\"\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    emailError = _useState30[0],\n    setEmailError = _useState30[1];\n  var _useState31 = useState(),\n    _useState32 = _slicedToArray(_useState31, 2),\n    zipCode = _useState32[0],\n    setZipCode = _useState32[1];\n  var _useState33 = useState(\"\"),\n    _useState34 = _slicedToArray(_useState33, 2),\n    zipError = _useState34[0],\n    setZipError = _useState34[1];\n  function validate(input) {\n    switch (input) {\n      case 'firstName':\n        console.log(\"Validating first name...\");\n        var first = /^[^\\d=?\\\\/@#%^&*()]+$/;\n        if (firstName.match(first)) {\n          setFirstNameError(\"\");\n        } else {\n          setFirstNameError(\"Invalid first name\");\n        }\n        break;\n      case 'lastName':\n        console.log(\"Validating last name...\");\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(lastName)) {\n          setLastNameError(\"Invalid last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n        break;\n      case 'passWord':\n        console.log(\"Validating password...\");\n        if (!/^([a-zA-Z\\d\\W]){5,}/.test(password)) {\n          setPasswordError(\"Invalid password\");\n        } else {\n          setPasswordError(\"\");\n        }\n        break;\n      case 'eMail':\n        console.log(\"Validating email...\");\n        if (!/.+@.+\\..{2,3}/.test(email)) {\n          setEmailError(\"Invalid email\");\n        } else {\n          setEmailError(\"\");\n        }\n        break;\n      case 'phone':\n        console.log(\"Validating phone number...\");\n        if (!/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/.test(phoneNumber)) {\n          setPhoneError(\"Invalid phone number\");\n        } else {\n          setPhoneError(\"\");\n        }\n        break;\n      case 'zipCode':\n        console.log(\"Validating zip code...\");\n        if (!/^\\d{5}/.test(zipCode)) {\n          setEmailError(\"Invalid zip code\");\n        } else {\n          setZipError(\"\");\n        }\n        break;\n      default:\n        console.log(\"Error: couldn't validate\");\n    }\n    console.log(checkNews);\n  }\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Please fill out your information to make an account\"\n    }), _jsx(Input, {\n      name: \"firstName\",\n      testID: \"firstname\",\n      placeholder: \"First Name\",\n      onChangeText: function onChangeText(text) {\n        setFirstName(text);\n      },\n      onBlur: function onBlur() {\n        return validate('firstName');\n      },\n      value: firstName,\n      errorMessage: validate ? null : \"Error: first name must include letters or symbols only\"\n    }), _jsx(Input, {\n      name: \"lastName\",\n      testID: \"lastname\",\n      placeholder: \"Last Name\",\n      onChangeText: function onChangeText(text) {\n        setLastName(text);\n      },\n      onBlur: function onBlur() {\n        return validate('lastName');\n      },\n      value: lastName,\n      errorMessage: validate ? correct : \"Error: last name must include letters or symbols only\"\n    }), _jsx(Input, {\n      name: \"userName\",\n      testID: \"username\",\n      placeholder: \"Username\",\n      onChangeText: function onChangeText(text) {\n        setUsername(text);\n      },\n      onBlur: function onBlur() {\n        return validate('userName');\n      },\n      value: username\n    }), _jsx(Input, {\n      name: \"passWord\",\n      testID: \"password\",\n      placeholder: \"Password\",\n      onChangeText: function onChangeText(text) {\n        setPassword(text);\n      },\n      onBlur: function onBlur() {\n        return validate('passWord');\n      },\n      value: password,\n      errorMessage: validate ? correct : \"Error: password must include an upper case and lower case character, one number, and one symbol\"\n    }), _jsx(Input, {\n      name: \"passWord\",\n      testID: \"confirmpassword\",\n      placeholder: \"Confirm Password\",\n      onChangeText: function onChangeText(text) {\n        setPassword(text);\n      },\n      onBlur: function onBlur() {\n        return validate('passWord');\n      },\n      value: password,\n      errorMessage: validate ? correct : \"Error: password must include an upper case and lower case character, one number, and one symbol\"\n    }), _jsx(Input, {\n      name: \"eMail\",\n      testID: \"email\",\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        setEmail(text);\n      },\n      onBlur: function onBlur() {\n        return validate('email');\n      },\n      value: email,\n      errorMessage: validate ? correct : \"Error: email must include an @ and a .\"\n    }), _jsx(Input, {\n      name: \"phone\",\n      testID: \"phonenumber\",\n      placeholder: \"Phone Number\",\n      onChangeText: function onChangeText(text) {\n        setPhoneNumber(text);\n      },\n      onBlur: function onBlur() {\n        return validate('phone');\n      },\n      value: phoneNumber,\n      errorMessage: validate ? null : \"Error: phone number must be in the (xxx) xxx-xxxx format using digits only\"\n    }), _jsx(Input, {\n      name: \"zipCode\",\n      testID: \"zip\",\n      placeholder: \"Zip Code\",\n      onChangeText: function onChangeText(text) {\n        setZipCode(text);\n      },\n      onBlur: function onBlur() {\n        return validate('zipCode');\n      },\n      value: zipCode,\n      errorMessage: validate ? null : \"Error: zip code must be five digits\"\n    }), _jsx(CheckBox, {\n      testID: \"newsletter\",\n      title: \"Sign up for our newsletter\",\n      iconType: \"material-community\",\n      checkedIcon: \"checkbox-outline\",\n      uncheckedIcon: 'checkbox-blank-outline',\n      checkedColor: \"blue\",\n      checked: checkNews,\n      onPress: function onPress() {\n        console.log(\"checked\");\n        setCheckNews(!checkNews);\n      }\n    }), _jsx(Button, {\n      testID: \"register\",\n      title: \"Register\",\n      style: styles.button,\n      disabled: validate ? false : true\n    })]\n  });\n}\nfunction TodoHomeScreen() {\n  var _useState35 = useState(initTasks),\n    _useState36 = _slicedToArray(_useState35, 2),\n    tasks = _useState36[0],\n    setTasks = _useState36[1];\n  useEffect(function () {\n    function getValue() {\n      return _getValue.apply(this, arguments);\n    }\n    function _getValue() {\n      _getValue = _asyncToGenerator(function* () {\n        var value = yield AsyncStorage.getItem(\"@tasks\");\n        if (value === null) {\n          console.log(\"Sorting tasks\" + JSON.stringify(tasks));\n          yield AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n        } else {\n          var parsedValue = JSON.parse(value);\n          console.log(\"Retrieving tasks\");\n          console.log(parsedValue);\n          setTasks(JSON.parse(value));\n        }\n      });\n      return _getValue.apply(this, arguments);\n    }\n    getValue();\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Todo List\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Todo List\",\n      children: function children(props) {\n        return _jsx(TodoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      children: function children(props) {\n        return _jsx(DetailsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    })]\n  });\n}\nfunction DetailsScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    route = _ref2.route,\n    setTasks = _ref2.setTasks,\n    tasks = _ref2.tasks;\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    completed = _route$params$item.completed,\n    key = _route$params$item.key,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nfunction TodoScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    tasks = _ref3.tasks,\n    setTasks = _ref3.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState37 = useState(\"\"),\n    _useState38 = _slicedToArray(_useState37, 2),\n    input = _useState38[0],\n    setInput = _useState38[1];\n  var updateTask = function () {\n    var _ref4 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_toConsumableArray(tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref6) {\n    var item = _ref6.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\", {\n            item: item\n          });\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(Input, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10\n  },\n  space: {\n    height: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","FontAwesome","useEffect","useState","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref7","font","loadAsync","_x4","initTasks","description","key","completed","relatedTasks","loginInfo","AsyncLocalStorage","_x2","_AsyncLocalStorage","navigation","username","password","storedData","getItem","data","JSON","parse","authenticated","some","info","navigate","name","console","log","error","App","children","Navigator","Screen","component","LoginScreen","RegisterScreen","TodoHomeScreen","options","headerShown","_ref","_useState","_useState2","_slicedToArray","unInput","setUnInput","_useState3","_useState4","pInput","setPInput","testID","placeholder","onChangeText","value","title","style","styles","button","onPress","space","_useState5","_useState6","checkNews","setCheckNews","_useState7","_useState8","correct","setCorrect","_useState9","_useState10","firstName","setFirstName","_useState11","_useState12","firstNameError","setFirstNameError","_useState13","_useState14","lastName","setLastName","_useState15","_useState16","lastNameError","setLastNameError","_useState17","_useState18","setUsername","_useState19","_useState20","setPassword","_useState21","_useState22","passwordError","setPasswordError","_useState23","_useState24","phoneNumber","setPhoneNumber","_useState25","_useState26","phoneError","setPhoneError","_useState27","_useState28","email","setEmail","_useState29","_useState30","emailError","setEmailError","_useState31","_useState32","zipCode","setZipCode","_useState33","_useState34","zipError","setZipError","validate","input","first","match","test","text","onBlur","errorMessage","iconType","checkedIcon","uncheckedIcon","checkedColor","checked","disabled","_useState35","_useState36","tasks","setTasks","getValue","_getValue","stringify","setItem","parsedValue","initialRouteName","props","TodoScreen","_objectSpread","DetailsScreen","_ref2","route","_route$params$item","params","item","setOptions","flex","alignItems","justifyContent","undefined","length","filter","task","includes","cTask","dispatch","push","_ref3","_useState37","_useState38","setInput","updateTask","_ref4","_toConsumableArray","_x3","addTask","_ref5","maxKey","forEach","newTasks","concat","renderItem","_ref6","horizontal","textStyle","textDecorationLine","textDecorationStyle","container","create","backgroundColor","flexDirection","padding","height"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/lab8/App.js"],"sourcesContent":["// phone number regex reference https://stackoverflow.com/questions/18375929/validate-phone-number-using-javascript\r\n// used ex7 solution as a base\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\n\r\nconst Tab = createBottomTabNavigator()\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nlet initTasks = [\r\n  {description: \"Dishes\", key: \"1\", completed: true, relatedTasks: [2]},\r\n  {description: \"Homework\", key: \"2\", completed: true, relatedTasks: [3]},\r\n  {description: \"Walk dog\", key: \"3\", completed: true, relatedTasks: [1]}\r\n]\r\n\r\nlet loginInfo = []\r\n\r\nasync function AsyncLocalStorage(navigation) {\r\n  const key = \"loginData\"\r\n  loginInfo = [\r\n  {username: \"test\", password: \"Test1@\"},\r\n  {username: \"aussieaussie\", password: \"0Ioi@1\"}\r\n  ]\r\n\r\ntry {\r\n  const storedData = await AsyncStorage.getItem(key)\r\n  const data = JSON.parse(storedData)\r\n\r\n  if (data) {\r\n    const { username, password } = data\r\n    const authenticated = loginInfo.some((info) =>\r\n    info.username === username && info.password === password)\r\n\r\n  if (authenticated) {\r\n    navigation.navigate(\"Todo\", {name: \"Todo\"})\r\n    } else {\r\n      console.log (\"Error: username or password not found\")\r\n    }\r\n    } else {\r\n      console.log (\"Error: missing input\")\r\n    }\r\n  } catch (error) {\r\n      console.log (\"Error\")\r\n}\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>{\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Login\" component={LoginScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Register\" component={RegisterScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Todo\" component={TodoHomeScreen} options={{ headerShown: false }}></Tab.Screen>\r\n      </Tab.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction LoginScreen({navigation}) {\r\n  let [unInput, setUnInput] = useState(\"\")\r\n  let [pInput, setPInput] = useState(\"\")\r\n  return (\r\n    <View>\r\n      <Text>Please fill out your information to log in</Text>\r\n      <Input\r\n        testID=\"login-username\"\r\n        placeholder=\"Username\"\r\n        onChangeText={setUnInput}\r\n        value={unInput}>\r\n      </Input>\r\n      <Input\r\n        testID=\"login-password\"\r\n        placeholder=\"Password\"\r\n        onChangeText={setPInput}\r\n        value={pInput}>\r\n      </Input>\r\n      <Button testID=\"login-button\" title=\"Login\" style={styles.button}\r\n      onPress={AsyncLocalStorage}/>\r\n      <View style={styles.space} />\r\n      <Button testID=\"register-button\" title=\"Register\" style={styles.button}\r\n      onPress={() => navigation.navigate(\"Register\", {name: \"Register\"})} />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction RegisterScreen() {\r\n  let [checkNews, setCheckNews] = useState(false)\r\n  let [correct, setCorrect] = useState(\"\")\r\n  let [firstName, setFirstName] = useState(\"\")\r\n  let [firstNameError, setFirstNameError] = useState(\"\")\r\n  let [lastName, setLastName] = useState(\"\")\r\n  let [lastNameError, setLastNameError] = useState(\"\")\r\n  let [username, setUsername] = useState(\"\")\r\n  let [password, setPassword] = useState(\"\") \r\n  let [passwordError, setPasswordError] = useState(\"\")\r\n  let [phoneNumber, setPhoneNumber] = useState(\"\")\r\n  let [phoneError, setPhoneError] = useState(\"\")\r\n  let [email, setEmail] = useState(\"\")\r\n  let [emailError, setEmailError] = useState(\"\")\r\n  let [zipCode, setZipCode] = useState()\r\n  let [zipError, setZipError] = useState(\"\")\r\n\r\n  function validate(input) {\r\n    switch (input) {\r\n      case 'firstName':\r\n        console.log(\"Validating first name...\")\r\n        var first = /^[^\\d=?\\\\/@#%^&*()]+$/\r\n        if (firstName.match(first)) {\r\n          setFirstNameError(\"\")\r\n        } else {\r\n          setFirstNameError(\"Invalid first name\")\r\n        }\r\n      break \r\n      case 'lastName':\r\n        console.log(\"Validating last name...\")\r\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(lastName)) {\r\n          setLastNameError(\"Invalid last name\")\r\n        } else {\r\n          setLastNameError(\"\")\r\n        }\r\n      break \r\n      case 'passWord':\r\n        console.log(\"Validating password...\")\r\n          if (!/^([a-zA-Z\\d\\W]){5,}/.test(password)) {\r\n          setPasswordError(\"Invalid password\")\r\n        } else {\r\n          setPasswordError(\"\")\r\n        }\r\n      break\r\n      case 'eMail':\r\n        console.log(\"Validating email...\")\r\n          if (!/.+@.+\\..{2,3}/.test(email)) {\r\n          setEmailError(\"Invalid email\")\r\n        } else {\r\n          setEmailError(\"\")\r\n        }\r\n      break\r\n      case 'phone':\r\n        console.log(\"Validating phone number...\")\r\n          if (!/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/.test(phoneNumber)) {\r\n          setPhoneError(\"Invalid phone number\")\r\n        } else {\r\n          setPhoneError(\"\")\r\n        }\r\n      break\r\n      case 'zipCode':\r\n        console.log(\"Validating zip code...\")\r\n          if (!/^\\d{5}/.test(zipCode)) {\r\n          setEmailError(\"Invalid zip code\")\r\n        } else {\r\n          setZipError(\"\")\r\n        }\r\n      break\r\n      default:\r\n        console.log(\"Error: couldn't validate\")\r\n    }\r\n          console.log(checkNews)\r\n\r\n  }\r\n  return (\r\n    <View>\r\n      <Text>Please fill out your information to make an account</Text>\r\n      <Input\r\n        name=\"firstName\"\r\n        testID=\"firstname\"\r\n        placeholder=\"First Name\"\r\n        onChangeText={(text) => {setFirstName(text)}}\r\n        onBlur={() => validate('firstName')}\r\n        value={firstName}\r\n        errorMessage={validate ? null : \"Error: first name must include letters or symbols only\"}>\r\n      </Input>\r\n      <Input\r\n        name=\"lastName\"\r\n        testID=\"lastname\"\r\n        placeholder=\"Last Name\"\r\n        onChangeText={(text) => {setLastName(text)}}\r\n        onBlur={() => validate('lastName')}\r\n        value={lastName}\r\n        errorMessage={validate ? correct : \"Error: last name must include letters or symbols only\"}>\r\n      </Input>\r\n      <Input\r\n        name=\"userName\"\r\n        testID=\"username\"\r\n        placeholder=\"Username\"\r\n        onChangeText={(text) => {setUsername(text)}}\r\n        onBlur={() => validate('userName')}\r\n        value={username}>\r\n      </Input>\r\n      <Input\r\n        name=\"passWord\"\r\n        testID=\"password\"\r\n        placeholder=\"Password\"\r\n        onChangeText={(text) => {setPassword(text)}}\r\n        onBlur={() => validate('passWord')}\r\n        value={password}\r\n        errorMessage={validate ? correct : \"Error: password must include an upper case and lower case character, one number, and one symbol\"}>\r\n      </Input>\r\n      <Input\r\n        name=\"passWord\"\r\n        testID=\"confirmpassword\"\r\n        placeholder=\"Confirm Password\"\r\n        onChangeText={(text) => {setPassword(text)}}\r\n        onBlur={() => validate('passWord')}\r\n        value={password}\r\n        errorMessage={validate ? correct : \"Error: password must include an upper case and lower case character, one number, and one symbol\"}>\r\n      </Input>\r\n      <Input\r\n        name=\"eMail\"\r\n        testID=\"email\"\r\n        placeholder=\"Email\"\r\n        onChangeText={(text) => {setEmail(text)}}\r\n        onBlur={() => validate('email')}\r\n        value={email}\r\n        errorMessage={validate ? correct : \"Error: email must include an @ and a .\"}>\r\n      </Input>\r\n      <Input\r\n        name=\"phone\"\r\n        testID=\"phonenumber\"\r\n        placeholder=\"Phone Number\"\r\n        onChangeText={(text) => {setPhoneNumber(text)}}\r\n        onBlur={() => validate('phone')}\r\n        value={phoneNumber}\r\n        errorMessage={validate ? null : \"Error: phone number must be in the (xxx) xxx-xxxx format using digits only\"}>\r\n      </Input>\r\n      <Input\r\n        name=\"zipCode\"\r\n        testID=\"zip\"\r\n        placeholder=\"Zip Code\"\r\n        onChangeText={(text) => {setZipCode(text)}}\r\n        onBlur={() => validate('zipCode')}\r\n        value={zipCode}\r\n        errorMessage={validate ? null : \"Error: zip code must be five digits\"}>\r\n      </Input>\r\n      <CheckBox\r\n        testID=\"newsletter\"\r\n        title=\"Sign up for our newsletter\"\r\n        iconType=\"material-community\"\r\n        checkedIcon=\"checkbox-outline\"\r\n           uncheckedIcon={'checkbox-blank-outline'}\r\n        checkedColor='blue'\r\n        checked={checkNews}\r\n        onPress={() => {console.log(\"checked\"); setCheckNews(!checkNews)}}>\r\n      </CheckBox>\r\n      <Button testID=\"register\" title=\"Register\" \r\n      style={styles.button} disabled={validate ? false : true} />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TodoHomeScreen() {\r\n  let [tasks, setTasks] = useState(initTasks)\r\n  useEffect(() => {\r\n    async function getValue() {\r\n      const value = await AsyncStorage.getItem(\"@tasks\")\r\n      if (value === null) {\r\n        console.log(\"Sorting tasks\" + JSON.stringify(tasks))\r\n        await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks))\r\n      } else {\r\n        let parsedValue = JSON.parse(value)\r\n        console.log(\"Retrieving tasks\")\r\n        console.log(parsedValue)\r\n        setTasks(JSON.parse(value))\r\n      }\r\n    }\r\n    getValue()\r\n  }, [])\r\n\r\n  return <Stack.Navigator initialRouteName=\"Todo List\">\r\n    <Stack.Screen name=\"Todo List\">\r\n      {(props) => (\r\n        <TodoScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Details\">\r\n        {(props) => (\r\n        <DetailsScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n  </Stack.Navigator>\r\n}\r\n\r\nfunction DetailsScreen({navigation, route, setTasks, tasks}) {\r\n  let {description, completed, key, relatedTasks} = route.params.item\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      title: description === \"\" ? \"No title\" : description,\r\n    })\r\n  }, [navigation])\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <Text>Details Screen</Text>\r\n      <Text>{description}</Text>\r\n      {\r\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\r\n        <>\r\n        <Text>Related Tasks:</Text>\r\n        {tasks.filter(task => relatedTasks.includes(task.key))\r\n        .map(cTask => <Button key={cTask.key} title={cTask.description} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Details', {item:cTask}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n      : undefined}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TodoScreen({navigation, tasks, setTasks}) {\r\n  cacheFonts([FontAwesome.font])\r\n  let [input, setInput] = useState(\"\")\r\n  let updateTask = async (task) => {\r\n    console.log(task)\r\n    task.completed = !task.completed\r\n    setTasks([...tasks])\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\r\n  }\r\n  let addTask = async () => {\r\n    let maxKey = 0\r\n    tasks.forEach(task => {\r\n      if(task.key > maxKey) {\r\n        maxKey = task.key\r\n      }\r\n    })\r\n    let newTasks = [\r\n      ...tasks,\r\n      {\r\n        description: input,\r\n        completed: false,\r\n        key: maxKey + 1,\r\n      },\r\n    ]\r\n    setTasks(newTasks)\r\n    console.log(newTasks)\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\r\n    setInput(\"\")\r\n  }\r\n  let renderItem = ({item}) => {\r\n    return (\r\n      <View style={styles.horizontal}>\r\n        <CheckBox textStyle={item.completed ? {\r\n          textDecorationLine: \"line-through\",\r\n          textDecorationStyle: \"solid\",\r\n        } : undefined}\r\n        title={item.description}\r\n        checked={item.completed}\r\n        onPress={() => updateTask(item)}/>\r\n        <Button title=\"Details\" onPress={() => navigation.navigate(\"Details\", {item})}/>\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n    <View style={[styles.container]}>\r\n      <StatusBar style=\"auto\" />\r\n        <FlatList data={tasks} renderItem={renderItem} />\r\n        <View style={[styles.horizontal]}>\r\n          <Input\r\n            onChangeText={setInput}\r\n            value={input}\r\n            placeholder=\"New task...\">\r\n          </Input>\r\n          <Button title=\"Add Task\" onPress={addTask} />\r\n        </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#DDDDDD',\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}