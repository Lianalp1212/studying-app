{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport { useEffect, useState, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref5 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar HOME_SCREEN = \"home\";\nvar EXERCISE_SCREEN = \"exercise\";\nvar DURATION_EXERCISE = \"duration\";\nvar REPITITION_EXERCISE = \"repitition\";\nvar exerciseList = [{\n  type: DURATION_EXERCISE,\n  name: \"Running\",\n  key: 1\n}, {\n  type: DURATION_EXERCISE,\n  name: \"Plank\",\n  key: 2\n}, {\n  type: REPITITION_EXERCISE,\n  name: \"Push Ups\",\n  key: 3\n}];\nexport default function App() {\n  var _useState = useState(HOME_SCREEN),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentScreen = _useState2[0],\n    setCurrentScreen = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentExercise = _useState4[0],\n    setCurrentExercise = _useState4[1];\n  var screenComponent = undefined;\n  var buttonClick = useCallback(function (exercise) {\n    setCurrentExercise(exercise);\n    setCurrentScreen(EXERCISE_SCREEN);\n  });\n  if (currentScreen === HOME_SCREEN) {\n    screenComponent = _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Exercise Menu\"\n      }), _jsx(\"ul\", {\n        style: {\n          listStyleType: \"none\"\n        },\n        children: exerciseList.map(function (exercise, index) {\n          return _jsx(\"li\", {\n            children: _jsx(\"button\", {\n              onClick: function onClick() {\n                return buttonClick(exercise);\n              },\n              children: exercise.name\n            })\n          }, index);\n        })\n      })]\n    });\n  } else if (currentScreen === EXERCISE_SCREEN) {\n    switch (currentExercise.type) {\n      case DURATION_EXERCISE:\n        screenComponent = _jsx(DurationExercise, {\n          setMenuScreen: function setMenuScreen() {\n            return setCurrentScreen(HOME_SCREEN);\n          },\n          exercise: currentExercise\n        });\n        break;\n      case REPITITION_EXERCISE:\n        screenComponent = _jsx(RepititionExercise, {\n          setMenuScreen: function setMenuScreen() {\n            return setCurrentScreen(HOME_SCREEN);\n          },\n          exercise: currentExercise\n        });\n        break;\n      default:\n        screenComponent = undefined;\n    }\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Duration Exercise\",\n        component: DurrationScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Repitition Exercise\",\n        component: RepitionScreen\n      })]\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var renderExercise = function renderExercise(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Button, {\n      title: exerciseList.title,\n      testID: exerciseList.title + \"-button\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"RunningScreen\", {\n          name: \"Running\"\n        });\n      }\n    });\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Please select an exercise\"\n      }), _jsx(FlatList, {\n        data: exerciseList,\n        renderItem: renderExercise,\n        keyExtractor: function keyExtractor(exercise) {\n          return exercise.key;\n        }\n      })]\n    })\n  });\n}\nvar currentTimer = 0;\nvar resetTimer = 0;\nfunction DurrationScreen(_ref3) {\n  var exercise = _ref3.exercise,\n    setMenuScreen = _ref3.setMenuScreen;\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    running = _useState6[0],\n    setRunning = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    timer = _useState8[0],\n    setTimer = _useState8[1];\n  var updateTimer = useCallback(function () {\n    if (running) {\n      setTimer(function (timer) {\n        return timer + 10;\n      });\n    }\n  }, [running]);\n  useEffect(function () {\n    currentTimer = setInterval(updateTimer, 10);\n    return function () {\n      return clearInterval(currentTimer);\n    };\n  }, [running, updateTimer]);\n  var start = useCallback(function () {\n    setRunning(!running);\n  }, [running]);\n  var reset = useCallback(function () {\n    clearInterval(currentTimer);\n    setTimer(resetTimer);\n  });\n  var mins = Math.floor(timer / (1000 * 60) % 60).toString().padStart(2, \"0\");\n  var secs = Math.floor(timer / 1000 % 60).toString().padStart(2, \"0\");\n  var name = exercise.name;\n  return _jsxs(View, {\n    children: [_jsx(\"h2\", {\n      children: name\n    }), _jsxs(Text, {\n      children: [\"Duration: \", mins, \":\", secs]\n    }), _jsx(Button, {\n      onClick: start,\n      children: \"Start\"\n    }), _jsx(Button, {\n      onClick: reset,\n      children: \"Reset\"\n    }), _jsx(Button, {\n      onClick: setMenuScreen,\n      children: \"Return\"\n    })]\n  });\n}\nfunction PushUpsScreen() {\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    exercise = _useState10[0],\n    setExercise = _useState10[1];\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      children: function children(params) {\n        return _jsx(HomeScreen, _objectSpread(_objectSpread({}, params), {}, {\n          exercise: exercise,\n          setExercise: setExercise\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Running\",\n      children: function children(params) {\n        return _jsx(RunningScreen, _objectSpread(_objectSpread({}, params), {}, {\n          exercise: exercise,\n          setExercise: setExercise\n        }));\n      }\n    }), _jsxs(Stack.Screen, {\n      name: \"Push Ups\",\n      children: [function (params) {\n        return _jsx(PushUpsScreen, _objectSpread(_objectSpread({}, params), {}, {\n          exercise: exercise,\n          setExercise: setExercise\n        }));\n      }, _jsx(Stack.Screen, {\n        name: \"Plank\",\n        children: function children(params) {\n          return _jsx(PlankScreen, _objectSpread(_objectSpread({}, params), {}, {\n            exercise: exercise,\n            setExercise: setExercise\n          }));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Related\",\n        children: function children(params) {\n          return _jsx(RelatedScreen, _objectSpread(_objectSpread({}, params), {}, {\n            exercise: exercise,\n            setExercise: setExercise\n          }));\n        }\n      })]\n    })]\n  });\n}\nfunction RelatedScreen(_ref4) {\n  var navigation = _ref4.navigation,\n    route = _ref4.route,\n    exercise = _ref4.exercise,\n    setExercise = _ref4.setExercise;\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    completed = _route$params$item.completed,\n    key = _route$params$item.key,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","useEffect","useState","useCallback","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","React","SafeAreaView","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref5","font","loadAsync","_x2","HOME_SCREEN","EXERCISE_SCREEN","DURATION_EXERCISE","REPITITION_EXERCISE","exerciseList","type","name","key","App","_useState","_useState2","_slicedToArray","currentScreen","setCurrentScreen","_useState3","_useState4","currentExercise","setCurrentExercise","screenComponent","undefined","buttonClick","exercise","children","style","listStyleType","index","onClick","DurationExercise","setMenuScreen","RepititionExercise","Navigator","Screen","component","HomeScreen","DurrationScreen","RepitionScreen","_ref","navigation","renderExercise","_ref2","item","title","testID","styles","button","onPress","navigate","heading","data","renderItem","keyExtractor","currentTimer","resetTimer","_ref3","_useState5","_useState6","running","setRunning","_useState7","_useState8","timer","setTimer","updateTimer","setInterval","clearInterval","start","reset","mins","Math","floor","toString","padStart","secs","PushUpsScreen","_useState9","_useState10","setExercise","initialRouteName","params","_objectSpread","RunningScreen","PlankScreen","RelatedScreen","_ref4","route","_route$params$item","description","completed","relatedTasks","setOptions","flex","alignItems","justifyContent","length","tasks","filter","task","includes","cTask","dispatch","push","create","container","backgroundColor","horizontal","flexDirection","padding","space","height","fontSize","textAlign"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab9/App.js"],"sourcesContent":["// used lab6 as a base\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nconst Tab = createBottomTabNavigator()\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nconst HOME_SCREEN = \"home\"\r\nconst EXERCISE_SCREEN = \"exercise\"\r\nconst DURATION_EXERCISE = \"duration\"\r\nconst REPITITION_EXERCISE = \"repitition\"\r\n\r\nlet exerciseList = [\r\n  {type: DURATION_EXERCISE, name: \"Running\", key: 1},\r\n  {type: DURATION_EXERCISE, name: \"Plank\", key: 2},\r\n  {type: REPITITION_EXERCISE, name: \"Push Ups\", key: 3}\r\n]\r\n\r\nexport default function App() {\r\n  let [currentScreen, setCurrentScreen] = useState(HOME_SCREEN)\r\n  let [currentExercise, setCurrentExercise] = useState({})\r\n  let screenComponent = undefined\r\n  let buttonClick = useCallback ((exercise)=> {\r\n    setCurrentExercise(exercise)\r\n    setCurrentScreen(EXERCISE_SCREEN)\r\n    })\r\n    if (currentScreen === HOME_SCREEN) {\r\n        screenComponent = <View>\r\n            <Text>Exercise Menu</Text>\r\n            <ul style={{listStyleType: \"none\"}}>   \r\n                {exerciseList.map((exercise, index) => {\r\n                return <li key={index}>\r\n                    <button onClick={() => buttonClick(exercise)}>{exercise.name}</button>\r\n                </li>\r\n                })}\r\n            </ul>\r\n        </View>\r\n    } else if (currentScreen === EXERCISE_SCREEN) {\r\n        switch (currentExercise.type) {\r\n            case DURATION_EXERCISE: \r\n                screenComponent = <DurationExercise\r\n                setMenuScreen={()=>setCurrentScreen(HOME_SCREEN)} \r\n                exercise={currentExercise}/> \r\n        break;\r\n        case REPITITION_EXERCISE:\r\n            screenComponent = <RepititionExercise \r\n            setMenuScreen={()=>setCurrentScreen(HOME_SCREEN)} \r\n            exercise={currentExercise}/>\r\n        break;\r\n        default:\r\n            screenComponent = undefined\r\n        }\r\n    } \r\n    return (\r\n      <NavigationContainer>{\r\n        <Tab.Navigator>\r\n          <Tab.Screen name=\"Home\" component={HomeScreen}></Tab.Screen>\r\n          <Tab.Screen name=\"Duration Exercise\" component={DurrationScreen}></Tab.Screen>\r\n          <Tab.Screen name=\"Repitition Exercise\" component={RepitionScreen}></Tab.Screen>\r\n        </Tab.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction HomeScreen({navigation}) {\r\n  let renderExercise = ({item}) => \r\n    <Button title={exerciseList.title} testID={`${exerciseList.title}-button`} style={styles.button}\r\n    onPress={() => navigation.navigate(\"RunningScreen\", {name: \"Running\"})} />\r\n  return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text style={styles.heading}>Please select an exercise</Text>\r\n          <FlatList data={exerciseList}\r\n            renderItem={renderExercise}\r\n            keyExtractor={(exercise) =>exercise.key}>\r\n          </FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nlet currentTimer = 0\r\nlet resetTimer = 0\r\nfunction DurrationScreen({exercise, setMenuScreen}) {\r\n    let [running, setRunning] = useState(false)\r\n    let [timer, setTimer] = useState(0)\r\n    let updateTimer = useCallback(() => {\r\n        if(running){\r\n            setTimer((timer) => timer+10)\r\n        }\r\n    }, [running])\r\n    useEffect(() => {\r\n        currentTimer = setInterval(updateTimer, 10)\r\n        return () => clearInterval(currentTimer)\r\n    }, [running, updateTimer])\r\n    let start = useCallback(() => {\r\n        setRunning(!running)\r\n    }, [running])\r\n    let reset = useCallback(() => {\r\n        clearInterval(currentTimer)\r\n        setTimer(resetTimer)\r\n    })\r\n    let mins = (Math.floor((timer / (1000*60)) % 60)).toString().padStart(2, \"0\")\r\n    let secs = (Math.floor((timer / 1000) % 60)).toString().padStart(2, \"0\")\r\n    let {name} = exercise \r\n    return (\r\n        <View>\r\n            <h2>{name}</h2>\r\n            <Text>Duration: {mins}:{secs}</Text>\r\n            <Button onClick={start}>Start</Button>\r\n            <Button onClick={reset}>Reset</Button>\r\n            <Button onClick={setMenuScreen}>Return</Button>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// function PlankScreen() {\r\n//   return (\r\n//     <View>\r\n//       <Text>Plank</Text>\r\n//     </View>\r\n//   )\r\n// }\r\n\r\n// function RunningScreen() {\r\n//   return (\r\n//     <View>\r\n//       <Text>Running</Text>\r\n//       <Button testID=\"register\" title=\"Register\" \r\n//       style={styles.button}/>\r\n//     </View>\r\n//   )\r\n// }\r\n\r\nfunction PushUpsScreen() {\r\nlet [exercise, setExercise] = useState(\"\")\r\n  return <Stack.Navigator initialRouteName=\"Home\">\r\n    <Stack.Screen name=\"Home\">\r\n      {(params) => (\r\n        <HomeScreen {...params} exercise={exercise} setExercise={setExercise} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Running\">\r\n        {(params) => (\r\n        <RunningScreen {...params} exercise={exercise} setExercise={setExercise} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Push Ups\">\r\n        {(params) => (\r\n        <PushUpsScreen {...params} exercise={exercise} setExercise={setExercise} />\r\n      )}\r\n      <Stack.Screen name=\"Plank\">\r\n        {(params) => (\r\n        <PlankScreen {...params} exercise={exercise} setExercise={setExercise} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Related\">\r\n        {(params) => (\r\n        <RelatedScreen {...params} exercise={exercise} setExercise={setExercise} />\r\n      )}\r\n    </Stack.Screen>\r\n    </Stack.Screen>\r\n  </Stack.Navigator>\r\n}\r\n\r\nfunction RelatedScreen({navigation, route, exercise, setExercise}) {\r\n  let {description, completed, key, relatedTasks} = route.params.item\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      title: description === \"\" ? \"No title\" : description,\r\n    })\r\n  }, [navigation])\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <Text>Details Screen</Text>\r\n      <Text>{description}</Text>\r\n      {\r\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\r\n        <>\r\n        <Text>Related Tasks:</Text>\r\n        {tasks.filter(task => relatedTasks.includes(task.key))\r\n        .map(cTask => <Button key={cTask.key} title={cTask.description} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Details', {item:cTask}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n      : undefined}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}