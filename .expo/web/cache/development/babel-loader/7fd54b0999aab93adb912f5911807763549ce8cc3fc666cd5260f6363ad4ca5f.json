{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport { useEffect, useState, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Unorderedlist from 'react-native-unordered-list';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref5 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar HOME_SCREEN = \"home\";\nvar DURATION_EXERCISE = \"duration\";\nvar REPITITION_EXERCISE = \"repitition\";\nvar exerciseList = [{\n  name: \"Running\",\n  type: DURATION_EXERCISE,\n  key: 1,\n  related: [2]\n}, {\n  name: \"Plank\",\n  type: DURATION_EXERCISE,\n  key: 2,\n  related: [1]\n}, {\n  name: \"Push Ups\",\n  type: REPITITION_EXERCISE,\n  key: 3,\n  related: [4]\n}, {\n  name: \"Squats\",\n  type: REPITITION_EXERCISE,\n  key: 4,\n  related: [3]\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: HOME_SCREEN,\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Re\",\n        component: DurationScreen\n      }), _jsx(Stack.Screen, {\n        name: REPITITION_EXERCISE,\n        component: RepetitionScreen\n      })]\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(exerciseList),\n    _useState2 = _slicedToArray(_useState, 2),\n    exercise = _useState2[0],\n    setExercise = _useState2[1];\n  var renderExercise = function renderExercise(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Button, {\n      title: item.name,\n      testID: item.name + \"-button\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(item.type === DURATION_EXERCISE ? DURATION_EXERCISE : REPITITION_EXERCISE, {\n          exercise: item\n        }, {\n          name: item.name\n        });\n      }\n    });\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Please select an exercise\"\n      }), _jsx(FlatList, {\n        data: exerciseList,\n        renderItem: renderExercise,\n        keyExtractor: function keyExtractor(exercise) {\n          return exercise.key;\n        }\n      })]\n    })\n  });\n}\nvar currentTimer = 0;\nvar resetTimer = 0;\nfunction DurationScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route;\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    running = _useState4[0],\n    setRunning = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    timer = _useState6[0],\n    setTimer = _useState6[1];\n  var updateTimer = useCallback(function () {\n    if (running) {\n      setTimer(function (timer) {\n        return timer + 10;\n      });\n    }\n  }, [running, setInterval]);\n  useEffect(function () {\n    if (running) {\n      currentTimer = setInterval(updateTimer, 10);\n    }\n    return function () {\n      return clearInterval(currentTimer);\n    };\n  }, [running, updateTimer]);\n  var start = useCallback(function () {\n    setRunning(!running);\n  }, [running]);\n  var reset = useCallback(function () {\n    clearInterval(currentTimer);\n    setTimer(resetTimer);\n  });\n  var mins = Math.floor(timer / (1000 * 60) % 60).toString().padStart(2, \"0\");\n  var secs = Math.floor(timer / 1000 % 60).toString().padStart(2, \"0\");\n  var mills = (timer % 1000).toString().padStart(3, \"0\");\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: route.params.name\n    }), _jsxs(Text, {\n      style: {\n        fontSize: \"3em\",\n        fontFamily: \"monospace\",\n        textAlign: 'center',\n        padding: 10\n      },\n      children: [\"Duration: \", mins, \":\", secs, \":\", mills]\n    }), _jsx(Button, {\n      title: \"Start\",\n      style: styles.exerciseButton,\n      onPress: start\n    }), _jsx(Button, {\n      title: \"Reset\",\n      style: styles.exerciseButton,\n      onPress: reset\n    }), _jsx(Button, {\n      title: \"Home\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    })]\n  });\n}\nfunction RepetitionScreen(_ref4) {\n  var navigation = _ref4.navigation,\n    exerciseList = _ref4.exerciseList,\n    route = _ref4.route;\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    count = _useState8[0],\n    setCount = _useState8[1];\n  console.log(route.params.item);\n  console.log(\"name \" + route.params.name);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: route.params.name\n    }), _jsx(Text, {\n      style: {\n        fontSize: \"3em\",\n        textAlign: 'center',\n        padding: 10\n      },\n      children: count\n    }), _jsx(Button, {\n      title: \"Add\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return setCount(function (count) {\n          return count + 1;\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Reset\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return setCount(0);\n      }\n    }), _jsx(Button, {\n      title: \"Home\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  exerciseButton: {\n    margin: 6\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","useEffect","useState","useCallback","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","React","SafeAreaView","Unorderedlist","jsx","_jsx","jsxs","_jsxs","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref5","font","loadAsync","_x2","HOME_SCREEN","DURATION_EXERCISE","REPITITION_EXERCISE","exerciseList","name","type","key","related","App","children","Navigator","initialRouteName","Screen","component","HomeScreen","DurationScreen","RepetitionScreen","_ref","navigation","_useState","_useState2","_slicedToArray","exercise","setExercise","renderExercise","_ref2","item","title","testID","style","styles","button","onPress","navigate","heading","data","renderItem","keyExtractor","currentTimer","resetTimer","_ref3","route","_useState3","_useState4","running","setRunning","_useState5","_useState6","timer","setTimer","updateTimer","setInterval","clearInterval","start","reset","mins","Math","floor","toString","padStart","secs","mills","params","fontSize","fontFamily","textAlign","padding","exerciseButton","goBack","_ref4","_useState7","_useState8","count","setCount","console","log","create","container","flex","backgroundColor","alignItems","justifyContent","horizontal","flexDirection","margin","space","height"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab9/App.js"],"sourcesContent":["// used lab6 as a base\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as React from 'react';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport Unorderedlist from 'react-native-unordered-list';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nconst HOME_SCREEN = \"home\"\r\nconst DURATION_EXERCISE = \"duration\"\r\nconst REPITITION_EXERCISE = \"repitition\"\r\n\r\nlet exerciseList = [\r\n  {name: \"Running\", type: DURATION_EXERCISE, key: 1, related: [2]},\r\n  {name: \"Plank\", type: DURATION_EXERCISE, key: 2, related: [1]},\r\n  {name: \"Push Ups\", type: REPITITION_EXERCISE, key: 3, related: [4]},\r\n  {name: \"Squats\", type: REPITITION_EXERCISE, key: 4, related: [3]}\r\n]\r\n\r\nexport default function App() {\r\n    return (\r\n      <NavigationContainer>{\r\n        <Stack.Navigator initialRouteName={HOME_SCREEN}>\r\n          <Stack.Screen name=\"Home\" component={HomeScreen}></Stack.Screen>\r\n          <Stack.Screen name=\"Re\" component={DurationScreen}></Stack.Screen>\r\n          <Stack.Screen name={REPITITION_EXERCISE} component={RepetitionScreen}></Stack.Screen>\r\n        </Stack.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction HomeScreen({navigation}) {\r\n  let [exercise, setExercise] = useState(exerciseList)\r\n  let renderExercise = ({item}) => \r\n    <Button title={item.name} testID={`${item.name}-button`} style={styles.button}\r\n    onPress={() => navigation.navigate(item.type === DURATION_EXERCISE ? DURATION_EXERCISE : REPITITION_EXERCISE, {exercise: item}, {name: item.name})} />\r\n    return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text style={styles.heading}>Please select an exercise</Text>\r\n          <FlatList data={exerciseList}\r\n            renderItem={renderExercise}\r\n            keyExtractor={(exercise) =>exercise.key}>\r\n          </FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nlet currentTimer = 0\r\nlet resetTimer = 0\r\nfunction DurationScreen({navigation, route}) {\r\n    let [running, setRunning] = useState(false)\r\n    let [timer, setTimer] = useState(0)\r\n    let updateTimer = useCallback(() => {\r\n        if(running){\r\n            setTimer((timer) => timer+10)\r\n        }\r\n    }, [running, setInterval])\r\n    useEffect(() => {\r\n      if (running) {\r\n        currentTimer = setInterval(updateTimer, 10)\r\n      }  \r\n        return () => clearInterval(currentTimer)\r\n    }, [running, updateTimer])\r\n    let start = useCallback(() => {\r\n        setRunning(!running)\r\n    }, [running])\r\n    let reset = useCallback(() => {\r\n        clearInterval(currentTimer)\r\n        setTimer(resetTimer)\r\n    })\r\n    let mins = (Math.floor((timer / (1000*60)) % 60)).toString().padStart(2, \"0\")\r\n    let secs = (Math.floor((timer / 1000) % 60)).toString().padStart(2, \"0\")\r\n    let mills =  (timer % 1000).toString().padStart(3, \"0\")\r\n    //let {title} = exercise \r\n    return (\r\n        <View>\r\n            <Text style={styles.heading}>{route.params.name}</Text>\r\n            <Text style={{fontSize: \"3em\", fontFamily:\"monospace\", textAlign: 'center', padding: 10}}>Duration: {mins}:{secs}:{mills}</Text>\r\n            <Button title=\"Start\" style={styles.exerciseButton} onPress={start}></Button>\r\n            <Button title=\"Reset\" style={styles.exerciseButton} onPress={reset}></Button>\r\n            <Button title=\"Home\" style={styles.exerciseButton} onPress={() => navigation.goBack()}></Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nfunction RepetitionScreen({navigation, exerciseList, route}) {\r\n    let [count, setCount] = useState(0)\r\n    console.log(route.params.item)\r\n    // let {key, related} = route.params.item\r\n    console.log(\"name \" + route.params.name)\r\n    // let name = \"Push Ups\"\r\n    return <View>\r\n      <Text style={styles.heading}>{route.params.name}</Text>\r\n      <Text style={{fontSize: \"3em\", textAlign: 'center', padding: 10}}>{count}</Text>\r\n      <Button title=\"Add\" style={styles.exerciseButton} onPress={()=>setCount(count=>count+1)}></Button>\r\n      <Button title=\"Reset\" style={styles.exerciseButton} onPress={()=>setCount(0)}></Button>\r\n      <Button title=\"Home\" style={styles.exerciseButton} onPress={() => navigation.goBack()}></Button>\r\n      {/* {\r\n        related !== undefined && related.length > 0 ?\r\n        <>\r\n        <Text>Related Exercise:</Text>\r\n        {exerciseList.filter(exercise => related.includes(exercise.key))\r\n        .map(cExercise => <Button key={cExercise.key} title={cExercise.name} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Related', {item:cExercise}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n      : undefined} */}\r\n    </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  exerciseButton: {\r\n    margin: 6\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}