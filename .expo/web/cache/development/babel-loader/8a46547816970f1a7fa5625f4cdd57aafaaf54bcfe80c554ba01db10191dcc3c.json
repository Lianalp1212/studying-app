{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, Input, Text, ButtonGroup } from '@rneui/themed';\nimport { useEffect, useState, useCallback, Fragment } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { CheckBox } from 'react-native-elements';\nimport { Listbox } from '@headlessui/react';\nimport Unorderedlist from 'react-native-unordered-list';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref5 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar Stack = createNativeStackNavigator();\nvar questions = [{\n  \"prompt\": \"Q1: Select the best answer:\\n \\\"Who are you?\\\"\",\n  \"type\": \"multiple-choice\",\n  \"choices\": [\"It's just me, myself and I\", \"거울 속 비친 넌 누구인가\", \"기대 안에 기대 이 길의 뒤에\", \"All of the above\"],\n  \"correct\": 3\n}, {\n  \"prompt\": \"Q2: Fill in the blank:\\n \\\"Happy ______ day\\\"\",\n  \"type\": \"multiple-answer\",\n  \"choices\": [\"Birthday\", \"Death\", \"Best\", \"Worst\"],\n  \"correct\": [1, 3]\n}, {\n  \"prompt\": \"Q3: Is the following statment true or false?\\n\\n      \\\"Stray Kids, STAY or none, we're gonna cross the finish line\\\"\",\n  \"type\": \"true-false\",\n  \"choices\": [\"True\", \"False\"],\n  \"correct\": 0\n}, {\n  \"prompt\": \"Q4: What does ZB1 stand for?\",\n  \"type\": \"open-response\",\n  \"correct\": \"zerobaseone\"\n}, {\n  \"prompt\": \"Q5: Complete the quote:\\n\\n      \\\"We the best ___\\\"\",\n  \"type\": \"drop-down\",\n  \"choices\": [\"Boyz\", \"Boys\", \"Fruits\", \"Kids\", \"Adults\", \"Girlz\", \"Girls\"],\n  \"correct\": 0\n}];\nfunction Question(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  console.log(route.params);\n  var _route$params = route.params,\n    questionNumber = _route$params.questionNumber,\n    userChoices = _route$params.userChoices,\n    data = _route$params.data;\n  var _data$questionNumber = data[questionNumber],\n    choices = _data$questionNumber.choices,\n    prompt = _data$questionNumber.prompt,\n    type = _data$questionNumber.type;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedIndex = _useState2[0],\n    setSelectedIndex = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedIndexes = _useState4[0],\n    setSelectedIndexes = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    openResponse = _useState6[0],\n    setOpenResponse = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dropDown = _useState8[0],\n    setDropDown = _useState8[1];\n  var userSelected = [];\n  var nextQuestion = function nextQuestion() {\n    var nextQuestion = questionNumber + 1;\n    if (type !== 'multiple-answer' || 'drop-down') {\n      userChoices.push(selectedIndex);\n      userSelected.push(selectedIndex);\n    } else {\n      userChoices.push(selectedIndexes);\n      userSelected.push(selectedIndexes);\n    }\n    if (nextQuestion < questions.length) {\n      console.log(\"Navigating to next question\");\n      navigation.navigate('Question', {\n        questionNumber: nextQuestion,\n        questions: questions,\n        userChoices: userChoices\n      });\n    } else {\n      navigation.navigate('SummaryScreen', {\n        questionNumber: nextQuestion,\n        questions: questions,\n        userChoices: userChoices\n      });\n    }\n  };\n  var validate = useCallback(function () {\n    if (openResponse.toLowerCase() !== questions[3].correct) {\n      console.log(\"incorrect\");\n    } else {\n      console.log(\"correct\");\n    }\n  });\n  if (type == 'open-response') {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: prompt\n      }), _jsx(Input, {\n        testID: \"choices\",\n        placeholder: \"Answer...\",\n        onChangeText: setOpenResponse,\n        value: openResponse,\n        onBlur: validate\n      }), _jsx(Button, {\n        testId: \"next-question\",\n        onPress: nextQuestion,\n        title: \"Next\"\n      })]\n    });\n  }\n  if (type == 'drop-down') {\n    var questions4 = questions[4].choices;\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: prompt\n      }), _jsxs(Listbox, {\n        value: dropDown,\n        onChange: setDropDown,\n        children: [_jsx(Listbox.Button, {\n          style: styles.listbox,\n          children: dropDown || \"Choose an answer...\"\n        }), _jsx(Listbox.Options, {\n          children: questions4.map(function (choice, index) {\n            return _jsx(Listbox.Option, {\n              value: choice,\n              as: Fragment,\n              children: _jsx(FlatList, {\n                data: questions4,\n                renderItem: function renderItem(_ref2) {\n                  var choice = _ref2.choice;\n                  return _jsx(Text, {\n                    choice: choice\n                  });\n                }\n              })\n            }, index);\n          })\n        })]\n      }), _jsx(Button, {\n        testId: \"next-question\",\n        onPress: nextQuestion,\n        title: \"Next\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: prompt\n    }), type !== 'multiple-answer' ? _jsx(ButtonGroup, {\n      testID: \"choices\",\n      buttons: choices,\n      vertical: true,\n      selectedIndex: selectedIndex,\n      onPress: function onPress(value) {\n        setSelectedIndex(value);\n      },\n      containerStyle: {\n        marginBottom: 20,\n        width: '70'\n      }\n    }) : _jsx(ButtonGroup, {\n      testID: \"choices\",\n      buttons: choices,\n      vertical: true,\n      selectMultiple: true,\n      selectedIndexes: selectedIndexes,\n      onPress: function onPress(value) {\n        setSelectedIndexes(value);\n      },\n      containerStyle: {\n        marginBottom: 20,\n        width: '70'\n      }\n    }), _jsx(Button, {\n      testId: \"next-question\",\n      onPress: nextQuestion,\n      title: \"Next\"\n    })]\n  });\n}\nfunction SummaryScreen(_ref3) {\n  var route = _ref3.route;\n  var userSelected = route.params.userSelected;\n  var calculateCorrect = function calculateCorrect(correct, type) {\n    var userCorrect = false;\n    console.log(\"userSelected: \" + userSelected);\n    if (type == 'multiple-answer') {\n      userCorrect = correct.every(function (item) {\n        return userSelected.includes(item);\n      }) && userSelected.every(function (item) {\n        return correct.includes(item);\n      });\n    } else {\n      userCorrect = userSelected === correct;\n    }\n    return userCorrect;\n  };\n  var totalScore = 0;\n  for (var i = 0; i < route.params.data.length; i++) {\n    if (calculateCorrect(route.params.userChoices[i], route.params.data[i].correct, route.params.data[i].type)) {\n      totalScore++;\n    }\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Summary\"\n      }), _jsxs(Text, {\n        style: styles.subheading,\n        children: [\"Score: \", totalScore]\n      })]\n    }), _jsx(FlatList, {\n      data: route.params.data,\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item,\n          index = _ref4.index;\n        var choices = item.choices,\n          prompt = item.prompt,\n          type = item.type,\n          correct = item.correct;\n        var userSelected = route.params.userChoices[index];\n        return _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.subheading,\n            children: prompt\n          }), choices.map(function (value, choiceIndex) {\n            var incorrect = false;\n            var userDidSelect = false;\n            if (type == 'multiple-answer') {\n              userDidSelect = userSelected.includes(choiceIndex);\n              incorrect = userDidSelect && !correct.includes(choiceIndex);\n            } else {\n              userDidSelect = userSelected == choiceIndex;\n              incorrect = userDidSelect && userSelected !== correct;\n            }\n            return _jsx(CheckBox, {\n              containerStyle: {\n                backgroundColor: userDidSelect ? incorrect == false ? 'lightgreen' : 'gray' : undefined\n              },\n              checked: type == 'multiple-answer' ? correct.includes(choiceIndex) : correct == choiceIndex,\n              textStyle: {\n                textDecorationLine: incorrect ? 'line-through' : undefined\n              },\n              title: value\n            }, value);\n          })]\n        }, index);\n      }\n    }), _jsx(Button, {\n      title: \"Restart\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate('Question');\n      }\n    })]\n  });\n}\nexport default function App() {\n  cacheFonts([FontAwesome.font]);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Question\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Question\",\n        initialParams: {\n          questionNumber: 0,\n          data: questions,\n          userChoices: []\n        },\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(Question, _objectSpread({}, props));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"SummaryScreen\",\n        initialParams: {\n          questionNumber: questions.length - 1,\n          data: questions,\n          userChoices: [3, [1, 3], 0, \"zerobaseone\", \"Boyz\"]\n        },\n        options: {\n          headerShown: false\n        },\n        component: SummaryScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  buttonGroup: {\n    backgroundColor: \"#2089dc\",\n    color: \"white\",\n    textAlign: \"center\",\n    paddingVertical: 5,\n    marginBottom: 10\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    paddingTop: 20,\n    paddingBottom: 10\n  },\n  subheading: {\n    fontSize: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    paddingBottom: 20\n  },\n  summary: {\n    fontSize: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 15\n  },\n  summaryAnd: {\n    fontSize: 17,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 10\n  },\n  listbox: {\n    margin: 6\n  }\n});","map":{"version":3,"names":["Button","Input","Text","ButtonGroup","useEffect","useState","useCallback","Fragment","NavigationContainer","createNativeStackNavigator","React","Font","FontAwesome","CheckBox","Listbox","Unorderedlist","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref5","font","loadAsync","_x2","Stack","questions","Question","_ref","navigation","route","console","log","params","_route$params","questionNumber","userChoices","data","_data$questionNumber","choices","prompt","type","_useState","_useState2","_slicedToArray","selectedIndex","setSelectedIndex","_useState3","_useState4","selectedIndexes","setSelectedIndexes","_useState5","_useState6","openResponse","setOpenResponse","_useState7","_useState8","dropDown","setDropDown","userSelected","nextQuestion","push","length","navigate","validate","toLowerCase","correct","View","style","styles","container","children","heading","testID","placeholder","onChangeText","value","onBlur","testId","onPress","title","questions4","onChange","listbox","Options","choice","index","Option","as","FlatList","renderItem","_ref2","buttons","vertical","containerStyle","marginBottom","width","selectMultiple","SummaryScreen","_ref3","calculateCorrect","userCorrect","every","item","includes","totalScore","i","subheading","_ref4","choiceIndex","incorrect","userDidSelect","backgroundColor","undefined","checked","textStyle","textDecorationLine","button","App","Navigator","initialRouteName","Screen","name","initialParams","options","headerShown","props","_objectSpread","component","StyleSheet","create","flex","alignItems","justifyContent","horizontal","flexDirection","padding","buttonGroup","color","textAlign","paddingVertical","space","height","fontSize","paddingTop","paddingBottom","summary","summaryAnd","margin"],"sources":["C:/Users/5duck/github-classroom/studying-app/App.js"],"sourcesContent":["import { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, Input, Text, ButtonGroup } from '@rneui/themed';\r\nimport { useEffect, useState, useCallback, Fragment } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport * as Font from 'expo-font';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { CheckBox } from 'react-native-elements';\r\nimport { Listbox } from '@headlessui/react';\r\nimport Unorderedlist from 'react-native-unordered-list';\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\nconst Stack = createNativeStackNavigator()\r\n\r\nconst questions = [\r\n  {\r\n    \"prompt\": `Q1: Select the best answer:\\n \"Who are you?\"`,\r\n    \"type\": \"multiple-choice\",\r\n    \"choices\": [\r\n      \"It's just me, myself and I\",\r\n      \"거울 속 비친 넌 누구인가\",\r\n      \"기대 안에 기대 이 길의 뒤에\",\r\n      \"All of the above\",\r\n  ],\r\n    \"correct\": 3\r\n  },\r\n  {\r\n    \"prompt\": `Q2: Fill in the blank:\\n \"Happy ______ day\"`,\r\n    \"type\": \"multiple-answer\",\r\n    \"choices\": [\r\n      \"Birthday\",\r\n      \"Death\",\r\n      \"Best\",\r\n      \"Worst\",\r\n  ],\r\n    \"correct\": [1, 3]\r\n  },\r\n  {\r\n    \"prompt\": `Q3: Is the following statment true or false?\\n\r\n      \"Stray Kids, STAY or none, we're gonna cross the finish line\"`,\r\n    \"type\": \"true-false\",\r\n    \"choices\": [\r\n      \"True\",\r\n      \"False\",\r\n  ],\r\n    \"correct\": 0\r\n  },\r\n  {\r\n    \"prompt\": `Q4: What does ZB1 stand for?`,\r\n    \"type\": \"open-response\",\r\n    \"correct\": \"zerobaseone\"\r\n  },\r\n  {\r\n    \"prompt\": `Q5: Complete the quote:\\n\r\n      \"We the best ___\"`,\r\n    \"type\": \"drop-down\",\r\n    \"choices\": [\r\n      \"Boyz\",\r\n      \"Boys\",\r\n      \"Fruits\",\r\n      \"Kids\",\r\n      \"Adults\",\r\n      \"Girlz\",\r\n      \"Girls\",\r\n  ],\r\n    \"correct\": 0\r\n  },\r\n]\r\n\r\nfunction Question({navigation, route}) {\r\n  console.log(route.params)\r\n  const { questionNumber, userChoices, data } = route.params\r\n  let { choices, prompt, type } = data[questionNumber]\r\n  let [selectedIndex, setSelectedIndex] = useState(0)\r\n  let [selectedIndexes, setSelectedIndexes] = useState([])\r\n  let [openResponse, setOpenResponse] = useState(\"\")\r\n  let [dropDown, setDropDown] = useState(false)\r\n  let userSelected = []\r\n  let nextQuestion = () => {\r\n    let nextQuestion = questionNumber + 1\r\n    if ( type !== 'multiple-answer' || 'drop-down') {\r\n      userChoices.push(selectedIndex)\r\n      userSelected.push(selectedIndex)\r\n    } else {\r\n      userChoices.push(selectedIndexes)\r\n      userSelected.push(selectedIndexes)\r\n    }\r\n    if (nextQuestion < questions.length) {\r\n      console.log(\"Navigating to next question\")\r\n      navigation.navigate('Question', {\r\n        questionNumber: nextQuestion,\r\n        questions,\r\n        userChoices,\r\n      })\r\n    } else {\r\n      navigation.navigate('SummaryScreen', {\r\n        questionNumber: nextQuestion,\r\n        questions,\r\n        userChoices,\r\n      })\r\n    }\r\n  }\r\n  let validate = useCallback(() => {\r\n    if (openResponse.toLowerCase() !== questions[3].correct) {\r\n      console.log(\"incorrect\")\r\n    } else {\r\n      console.log(\"correct\")\r\n    }\r\n  })\r\n  if (type == 'open-response') {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.heading}>{prompt}</Text>\r\n        <Input\r\n          testID=\"choices\"\r\n          placeholder='Answer...'\r\n          onChangeText={setOpenResponse}\r\n          value={openResponse}\r\n          onBlur={validate}\r\n        />\r\n        <Button \r\n          testId=\"next-question\"\r\n          onPress={nextQuestion}\r\n          title=\"Next\"\r\n        ></Button>\r\n      </View>\r\n    )\r\n  }\r\n  if (type == 'drop-down') {\r\n    const questions4 = questions[4].choices\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.heading}>{prompt}</Text>\r\n        <Listbox value={dropDown} onChange={setDropDown}>\r\n          <Listbox.Button style={styles.listbox}>\r\n            {dropDown || \"Choose an answer...\"}\r\n          </Listbox.Button>    \r\n          <Listbox.Options>\r\n            {questions4.map((choice, index) => (\r\n              <Listbox.Option\r\n                key={index}\r\n                value={choice}\r\n                as={Fragment}\r\n              >\r\n                  <FlatList\r\n                    data={questions4}\r\n                    renderItem={({choice}) => <Text choice={choice}/>}\r\n                  ></FlatList>\r\n              </Listbox.Option>\r\n            ))}\r\n          </Listbox.Options>\r\n        </Listbox>\r\n        <Button \r\n          testId=\"next-question\"\r\n          onPress={nextQuestion}\r\n          title=\"Next\"\r\n        ></Button>\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n  <View style={styles.container}>\r\n    <Text style={styles.heading}>{prompt}</Text>\r\n    {type !== 'multiple-answer' ? (\r\n      <ButtonGroup\r\n        testID=\"choices\"\r\n        buttons={choices}\r\n        vertical\r\n        selectedIndex={selectedIndex}\r\n        onPress={(value) => {\r\n          setSelectedIndex(value)\r\n        }}\r\n        containerStyle={{marginBottom: 20, width: '70'}}\r\n        />\r\n    ) : (\r\n      <ButtonGroup\r\n        testID=\"choices\"\r\n        buttons={choices}\r\n        vertical\r\n        selectMultiple\r\n        selectedIndexes={selectedIndexes}\r\n        onPress={(value) => {\r\n          setSelectedIndexes(value)\r\n        }}\r\n        containerStyle={{marginBottom: 20, width: '70'}}\r\n        \r\n      />\r\n    )}\r\n    <Button \r\n      testId=\"next-question\"\r\n      onPress={nextQuestion}\r\n      title=\"Next\"\r\n    ></Button>\r\n  </View>\r\n  )\r\n}\r\n\r\n  function SummaryScreen({route}) {\r\n    let userSelected = route.params.userSelected\r\n    let calculateCorrect = (correct, type) => {\r\n      let userCorrect = false\r\n      console.log(\"userSelected: \" + userSelected)\r\n      if (type == 'multiple-answer') {\r\n        userCorrect = correct.every((item) => userSelected.includes(item))\r\n        && userSelected.every((item) => correct.includes(item))\r\n      } else {\r\n        userCorrect = userSelected === correct\r\n      }\r\n      return userCorrect\r\n    }\r\n    // let calculateCorrect = (userSelected, correct, type) => {\r\n    //   let userCorrect = false\r\n    //   console.log(userSelected)\r\n    //   if (type == 'multiple-answer') {\r\n    //     userCorrect = userSelected.sort().toString() === correct.sort().toString()\r\n    //   } else {\r\n    //     userCorrect = userSelected === correct \r\n    //   }\r\n    //     return userCorrect\r\n    //   }\r\n    let totalScore = 0\r\n    for (let i = 0; i < route.params.data.length; i++) {\r\n      if (\r\n        calculateCorrect(\r\n          route.params.userChoices[i],\r\n          route.params.data[i].correct,\r\n          route.params.data[i].type\r\n        )) {\r\n        totalScore++\r\n      }\r\n    }\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <Text style={styles.heading}>Summary</Text>\r\n        <Text style={styles.subheading}>Score: {totalScore}</Text>\r\n      </View>\r\n      <FlatList\r\n      data={route.params.data}\r\n      renderItem={({item, index}) => {\r\n        let { choices, prompt, type, correct } = item\r\n        let userSelected = route.params.userChoices[index]\r\n        //let userCorrect = calculateCorrect(userSelected, correct, type)\r\n        return (\r\n          <View key={index}>\r\n            <Text style={styles.subheading}>{prompt}</Text>\r\n            {choices.map((value, choiceIndex) => {\r\n              let incorrect = false\r\n              let userDidSelect = false \r\n              if (type == 'multiple-answer') {\r\n                userDidSelect = userSelected.includes(choiceIndex)\r\n                incorrect = userDidSelect && !correct.includes(choiceIndex)\r\n              } else {\r\n                userDidSelect = userSelected == choiceIndex\r\n                incorrect = userDidSelect && userSelected !== correct\r\n              }\r\n              return (\r\n                <CheckBox\r\n                containerStyle={{\r\n                  backgroundColor: userDidSelect ? incorrect == false\r\n                    ? 'lightgreen'\r\n                    : 'gray'\r\n                  : undefined,\r\n                }}\r\n                checked = {\r\n                  type == 'multiple-answer'\r\n                    ? correct.includes(choiceIndex)\r\n                    : correct == choiceIndex\r\n                }\r\n                textStyle={{\r\n                  textDecorationLine: incorrect\r\n                    ? 'line-through'\r\n                    : undefined,\r\n                }}\r\n                key={value}\r\n                title={value}\r\n                ></CheckBox>\r\n              )\r\n            })}\r\n          </View>\r\n          )\r\n        }}\r\n      ></FlatList>\r\n      <Button title=\"Restart\" style={styles.button} onPress={() => navigation.navigate('Question')}></Button>\r\n    </View>\r\n    )  \r\n  }\r\n\r\nexport default function App() {\r\n  cacheFonts([FontAwesome.font])\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Question\">\r\n        <Stack.Screen\r\n          name=\"Question\"\r\n          initialParams={{\r\n            questionNumber: 0,\r\n            data: questions,\r\n            userChoices: []\r\n          }}\r\n          options={{headerShown: false}}>\r\n          {(props) => <Question {...props} />}\r\n        </Stack.Screen>\r\n        <Stack.Screen\r\n          name=\"SummaryScreen\"\r\n          initialParams={{\r\n            questionNumber: questions.length - 1,\r\n            data: questions,\r\n            userChoices: [3, [1, 3], 0, \"zerobaseone\", \"Boyz\"],\r\n          }}\r\n          options={{headerShown: false}}\r\n          component={SummaryScreen}\r\n        ></Stack.Screen>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  buttonGroup: {\r\n    backgroundColor : \"#2089dc\",\r\n    color : \"white\",\r\n    textAlign : \"center\",\r\n    paddingVertical : 5,\r\n    marginBottom : 10,\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    paddingTop: 20,\r\n    paddingBottom: 10\r\n  },\r\n  subheading: {\r\n    fontSize: 25,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    paddingBottom: 20\r\n  },\r\n  summary: {\r\n    fontSize: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 15\r\n  },\r\n  summaryAnd: {\r\n    fontSize: 17,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 10\r\n  },\r\n  listbox: {\r\n    margin: 6\r\n  }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}