{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref8 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x3) {\n        return _ref8.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Dishes\",\n  key: \"1\",\n  completed: true,\n  relatedTasks: [2]\n}, {\n  description: \"Homework\",\n  key: \"2\",\n  completed: true,\n  relatedTasks: [3]\n}, {\n  description: \"Walk dog\",\n  key: \"3\",\n  completed: true,\n  relatedTasks: [1]\n}];\nvar loginInfo = [];\nfunction AsyncLocalStorage(_ref) {\n  var key = _ref.key;\n  key = \"loginData\";\n  loginInfo = [{\n    username: \"test\",\n    password: \"Test1@\"\n  }, {\n    username: \"aussieaussie\",\n    password: \"0Ioi@1\"\n  }];\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Register\",\n        component: RegisterScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Todo\",\n        component: TodoHomeScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nfunction LoginScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    unInput = _useState2[0],\n    setUnInput = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pInput = _useState4[0],\n    setPInput = _useState4[1];\n  function login() {\n    loginInfo.indexOf('unInput');\n  }\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Sample\"\n    }), _jsx(Input, {\n      testID: \"login-username\",\n      placeholder: \"Username\",\n      value: unInput\n    }), _jsx(Input, {\n      testID: \"login-password\",\n      placeholder: \"Password\",\n      value: pInput\n    }), _jsx(Button, {\n      testID: \"login-button\",\n      title: \"Login\",\n      style: styles.button,\n      onPress: login\n    }), _jsx(View, {\n      style: styles.space\n    }), _jsx(Button, {\n      testID: \"register-button\",\n      title: \"Register\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"Register\");\n      }\n    })]\n  });\n}\nfunction RegisterScreen() {\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    checkNews = _useState6[0],\n    setCheckNews = _useState6[1];\n  var input = \"hello\";\n  function validate() {\n    switch (input) {\n      case 'firstName':\n        console.log(\"Validating first name...\");\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(firstName)) {\n          setLastNameError(\"Invalid last name\");\n        } else {\n          setFirstNameError(\"\");\n        }\n        break;\n      case 'lastName':\n        console.log(\"Validating last name...\");\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(lastName)) {\n          setLastNameError(\"Invalid last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n        break;\n      case 'passWord':\n        console.log(\"Validating password...\");\n        if (!/^([a-zA-Z\\d\\W]){5,}/.test(password)) {\n          setPasswordError(\"Invalid password\");\n        } else {\n          setPasswordError(\"\");\n        }\n        break;\n      case 'eMail':\n        console.log(\"Validating email...\");\n        if (!/.+@.+\\..{2,3}/.test(email)) {\n          setEmailError(\"Invalid email\");\n        } else {\n          setEmailError(\"\");\n        }\n        break;\n      case 'phone':\n        console.log(\"Validating phone number...\");\n        if (!/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/.test(phoneNumber)) {\n          setPhoneError(\"Invalid phone number\");\n        } else {\n          setPhoneError(\"\");\n        }\n        break;\n      case 'zipCode':\n        console.log(\"Validating zip code...\");\n        if (!/^\\d{5}/.test(zipCode)) {\n          setEmailError(\"Invalid zip code\");\n        } else {\n          setZipError(\"\");\n        }\n        break;\n      default:\n        console.log(\"Error\");\n    }\n  }\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Sample2\"\n    }), _jsx(Input, {\n      name: \"firstName\",\n      testID: \"firstname\",\n      placeholder: \"First Name\",\n      onBLur: validate,\n      errorMessage: \"Error: first name must include letters or symbols only\"\n    }), _jsx(Input, {\n      name: \"lastName\",\n      testID: \"lastname\",\n      placeholder: \"Last Name\",\n      errorMessage: \"Error: last name must include letters or symbols only\"\n    }), _jsx(Input, {\n      name: \"userName\",\n      testID: \"username\",\n      placeholder: \"Username\"\n    }), _jsx(Input, {\n      name: \"passWord\",\n      testID: \"password\",\n      placeholder: \"Password\"\n    }), _jsx(Input, {\n      name: \"passWord\",\n      testID: \"confirmpassword\",\n      placeholder: \"Confirm Password\",\n      errorMessage: \"Error: password must include an upper case and lower case character, one number, and one symbol\"\n    }), _jsx(Input, {\n      name: \"eMail\",\n      testID: \"email\",\n      placeholder: \"Email\",\n      errorMessage: \"Error: email must include an @ and a .\"\n    }), _jsx(Input, {\n      name: \"phone\",\n      testID: \"phonenumber\",\n      placeholder: \"Phone Number\",\n      errorMessage: \"Error: phone number must be in the (xxx) xxx-xxxx format using digits only\"\n    }), _jsx(Input, {\n      name: \"zipCode\",\n      testID: \"zip\",\n      placeholder: \"Zip Code\",\n      errorMessage: \"Error: zip code must be five digits\"\n    }), _jsx(CheckBox, {\n      testID: \"newsletter\",\n      title: \"Sign up for our newsletter\",\n      onPress: function onPress() {\n        return setCheckNews(!checkNews);\n      }\n    }), _jsx(Button, {\n      testID: \"register\",\n      title: \"Register\",\n      style: styles.button,\n      disabled: true\n    })]\n  });\n}\nfunction TodoHomeScreen() {\n  var _useState7 = useState(initTasks),\n    _useState8 = _slicedToArray(_useState7, 2),\n    tasks = _useState8[0],\n    setTasks = _useState8[1];\n  useEffect(function () {\n    function getValue() {\n      return _getValue.apply(this, arguments);\n    }\n    function _getValue() {\n      _getValue = _asyncToGenerator(function* () {\n        var value = yield AsyncStorage.getItem(\"@tasks\");\n        if (value === null) {\n          console.log(\"Sorting tasks\" + JSON.stringify(tasks));\n          yield AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n        } else {\n          var parsedValue = JSON.parse(value);\n          console.log(\"Retrieving tasks\");\n          console.log(parsedValue);\n          setTasks(JSON.parse(value));\n        }\n      });\n      return _getValue.apply(this, arguments);\n    }\n    getValue();\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Todo List\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Todo List\",\n      children: function children(props) {\n        return _jsx(TodoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      children: function children(props) {\n        return _jsx(DetailsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    })]\n  });\n}\nfunction DetailsScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route,\n    setTasks = _ref3.setTasks,\n    tasks = _ref3.tasks;\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    completed = _route$params$item.completed,\n    key = _route$params$item.key,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nfunction TodoScreen(_ref4) {\n  var navigation = _ref4.navigation,\n    tasks = _ref4.tasks,\n    setTasks = _ref4.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    input = _useState10[0],\n    setInput = _useState10[1];\n  var updateTask = function () {\n    var _ref5 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_toConsumableArray(tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref7) {\n    var item = _ref7.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\", {\n            item: item\n          });\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(Input, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10\n  },\n  space: {\n    height: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","FontAwesome","useEffect","useState","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref8","font","loadAsync","_x3","initTasks","description","key","completed","relatedTasks","loginInfo","AsyncLocalStorage","_ref","username","password","App","children","Navigator","Screen","name","component","LoginScreen","RegisterScreen","TodoHomeScreen","options","headerShown","_ref2","navigation","_useState","_useState2","_slicedToArray","unInput","setUnInput","_useState3","_useState4","pInput","setPInput","login","indexOf","testID","placeholder","value","title","style","styles","button","onPress","space","navigate","_useState5","_useState6","checkNews","setCheckNews","input","validate","console","log","test","firstName","setLastNameError","setFirstNameError","lastName","setPasswordError","email","setEmailError","phoneNumber","setPhoneError","zipCode","setZipError","onBLur","errorMessage","disabled","_useState7","_useState8","tasks","setTasks","getValue","_getValue","getItem","JSON","stringify","setItem","parsedValue","parse","initialRouteName","props","TodoScreen","_objectSpread","DetailsScreen","_ref3","route","_route$params$item","params","item","setOptions","flex","alignItems","justifyContent","undefined","length","filter","task","includes","cTask","dispatch","push","_ref4","_useState9","_useState10","setInput","updateTask","_ref5","_toConsumableArray","_x2","addTask","_ref6","maxKey","forEach","newTasks","concat","renderItem","_ref7","horizontal","textStyle","textDecorationLine","textDecorationStyle","checked","container","data","onChangeText","create","backgroundColor","flexDirection","padding","height"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/lab8/App.js"],"sourcesContent":["// phone number regex reference https://stackoverflow.com/questions/18375929/validate-phone-number-using-javascript\r\n// used ex7 solution as a base\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\n\r\nconst Tab = createBottomTabNavigator()\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nlet initTasks = [\r\n  {description: \"Dishes\", key: \"1\", completed: true, relatedTasks: [2]},\r\n  {description: \"Homework\", key: \"2\", completed: true, relatedTasks: [3]},\r\n  {description: \"Walk dog\", key: \"3\", completed: true, relatedTasks: [1]}\r\n]\r\n\r\nlet loginInfo = []\r\n\r\nfunction AsyncLocalStorage({key}) {\r\n  key = \"loginData\"\r\n  loginInfo = [\r\n  {username: \"test\", password: \"Test1@\"},\r\n  {username: \"aussieaussie\", password: \"0Ioi@1\"}\r\n  ]\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>{\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Login\" component={LoginScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Register\" component={RegisterScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Todo\" component={TodoHomeScreen} options={{ headerShown: false }}></Tab.Screen>\r\n      </Tab.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction LoginScreen({navigation}) {\r\n  let [unInput, setUnInput] = useState(\"\")\r\n  let [pInput, setPInput] = useState(\"\")\r\n  function login() {\r\n    loginInfo.indexOf('unInput')\r\n  }\r\n  return (\r\n    <View>\r\n      <Text>Sample</Text>\r\n      <Input\r\n        testID=\"login-username\"\r\n        placeholder=\"Username\"\r\n        value={unInput}>\r\n      </Input>\r\n      <Input\r\n        testID=\"login-password\"\r\n        placeholder=\"Password\"\r\n        value={pInput}>\r\n      </Input>\r\n      <Button testID=\"login-button\" title=\"Login\" style={styles.button}\r\n      onPress={login}/>\r\n      <View style={styles.space} />\r\n      <Button testID=\"register-button\" title=\"Register\" style={styles.button}\r\n      onPress={() => navigation.navigate(\"Register\")} />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction RegisterScreen() {\r\n  let [checkNews, setCheckNews] = useState(false)\r\n  let input= \"hello\"\r\n  function validate() {\r\n    switch (input) {\r\n      case 'firstName':\r\n        console.log(\"Validating first name...\")\r\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(firstName)) {\r\n          setLastNameError(\"Invalid last name\")\r\n        } else {\r\n          setFirstNameError(\"\")\r\n        }\r\n      break\r\n      case 'lastName':\r\n        console.log(\"Validating last name...\")\r\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(lastName)) {\r\n          setLastNameError(\"Invalid last name\")\r\n        } else {\r\n          setLastNameError(\"\")\r\n        }\r\n      break\r\n      case 'passWord':\r\n        console.log(\"Validating password...\")\r\n          if (!/^([a-zA-Z\\d\\W]){5,}/.test(password)) {\r\n          setPasswordError(\"Invalid password\")\r\n        } else {\r\n          setPasswordError(\"\")\r\n        }\r\n      break\r\n      case 'eMail':\r\n        console.log(\"Validating email...\")\r\n          if (!/.+@.+\\..{2,3}/.test(email)) {\r\n          setEmailError(\"Invalid email\")\r\n        } else {\r\n          setEmailError(\"\")\r\n        }\r\n      break\r\n      case 'phone':\r\n        console.log(\"Validating phone number...\")\r\n          if (!/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/.test(phoneNumber)) {\r\n          setPhoneError(\"Invalid phone number\")\r\n        } else {\r\n          setPhoneError(\"\")\r\n        }\r\n      break\r\n      case 'zipCode':\r\n        console.log(\"Validating zip code...\")\r\n          if (!/^\\d{5}/.test(zipCode)) {\r\n          setEmailError(\"Invalid zip code\")\r\n        } else {\r\n          setZipError(\"\")\r\n        }\r\n      break\r\n      default:\r\n        console.log(\"Error\")\r\n    }\r\n  }\r\n  return (\r\n    <View>\r\n      <Text>Sample2</Text>\r\n      <Input\r\n        name=\"firstName\"\r\n        testID=\"firstname\"\r\n        placeholder=\"First Name\"\r\n        onBLur={validate}\r\n        errorMessage=\"Error: first name must include letters or symbols only\">\r\n      </Input>\r\n      <Input\r\n        name=\"lastName\"\r\n        testID=\"lastname\"\r\n        placeholder=\"Last Name\"\r\n        errorMessage=\"Error: last name must include letters or symbols only\">\r\n      </Input>\r\n      <Input\r\n        name=\"userName\"\r\n        testID=\"username\"\r\n        placeholder=\"Username\">\r\n      </Input>\r\n      <Input\r\n        name=\"passWord\"\r\n        testID=\"password\"\r\n        placeholder=\"Password\">\r\n      </Input>\r\n      <Input\r\n        name=\"passWord\"\r\n        testID=\"confirmpassword\"\r\n        placeholder=\"Confirm Password\"\r\n        errorMessage=\"Error: password must include an upper case and lower case character, one number, and one symbol\">\r\n      </Input>\r\n      <Input\r\n        name=\"eMail\"\r\n        testID=\"email\"\r\n        placeholder=\"Email\"\r\n        errorMessage=\"Error: email must include an @ and a .\">\r\n      </Input>\r\n      <Input\r\n        name=\"phone\"\r\n        testID=\"phonenumber\"\r\n        placeholder=\"Phone Number\"\r\n        errorMessage=\"Error: phone number must be in the (xxx) xxx-xxxx format using digits only\">\r\n      </Input>\r\n      <Input\r\n        name=\"zipCode\"\r\n        testID=\"zip\"\r\n        placeholder=\"Zip Code\"\r\n        errorMessage=\"Error: zip code must be five digits\">\r\n      </Input>\r\n      <CheckBox\r\n        testID=\"newsletter\"\r\n        title=\"Sign up for our newsletter\"\r\n        //checked={checkNews}\r\n        onPress={() => setCheckNews(!checkNews)}>\r\n      </CheckBox>\r\n      <Button testID=\"register\" title=\"Register\" \r\n      style={styles.button} disabled={true} />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TodoHomeScreen() {\r\n  let [tasks, setTasks] = useState(initTasks)\r\n  useEffect(() => {\r\n    async function getValue() {\r\n      const value = await AsyncStorage.getItem(\"@tasks\")\r\n      if (value === null) {\r\n        console.log(\"Sorting tasks\" + JSON.stringify(tasks))\r\n        await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks))\r\n      } else {\r\n        let parsedValue = JSON.parse(value)\r\n        console.log(\"Retrieving tasks\")\r\n        console.log(parsedValue)\r\n        setTasks(JSON.parse(value))\r\n      }\r\n    }\r\n    getValue()\r\n  }, [])\r\n\r\n  return <Stack.Navigator initialRouteName=\"Todo List\">\r\n    <Stack.Screen name=\"Todo List\">\r\n      {(props) => (\r\n        <TodoScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Details\">\r\n        {(props) => (\r\n        <DetailsScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n  </Stack.Navigator>\r\n}\r\n\r\nfunction DetailsScreen({navigation, route, setTasks, tasks}) {\r\n  let {description, completed, key, relatedTasks} = route.params.item\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      title: description === \"\" ? \"No title\" : description,\r\n    })\r\n  }, [navigation])\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <Text>Details Screen</Text>\r\n      <Text>{description}</Text>\r\n      {\r\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\r\n        <>\r\n        <Text>Related Tasks:</Text>\r\n        {tasks.filter(task => relatedTasks.includes(task.key))\r\n        .map(cTask => <Button key={cTask.key} title={cTask.description} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Details', {item:cTask}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n      : undefined}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TodoScreen({navigation, tasks, setTasks}) {\r\n  cacheFonts([FontAwesome.font])\r\n  let [input, setInput] = useState(\"\")\r\n  let updateTask = async (task) => {\r\n    console.log(task)\r\n    task.completed = !task.completed\r\n    setTasks([...tasks])\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\r\n  }\r\n  let addTask = async () => {\r\n    let maxKey = 0\r\n    tasks.forEach(task => {\r\n      if(task.key > maxKey) {\r\n        maxKey = task.key\r\n      }\r\n    })\r\n    let newTasks = [\r\n      ...tasks,\r\n      {\r\n        description: input,\r\n        completed: false,\r\n        key: maxKey + 1,\r\n      },\r\n    ]\r\n    setTasks(newTasks)\r\n    console.log(newTasks)\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\r\n    setInput(\"\")\r\n  }\r\n  let renderItem = ({item}) => {\r\n    return (\r\n      <View style={styles.horizontal}>\r\n        <CheckBox textStyle={item.completed ? {\r\n          textDecorationLine: \"line-through\",\r\n          textDecorationStyle: \"solid\",\r\n        } : undefined}\r\n        title={item.description}\r\n        checked={item.completed}\r\n        onPress={() => updateTask(item)}/>\r\n        <Button title=\"Details\" onPress={() => navigation.navigate(\"Details\", {item})}/>\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n    <View style={[styles.container]}>\r\n      <StatusBar style=\"auto\" />\r\n        <FlatList data={tasks} renderItem={renderItem} />\r\n        <View style={[styles.horizontal]}>\r\n          <Input\r\n            onChangeText={setInput}\r\n            value={input}\r\n            placeholder=\"New task...\">\r\n          </Input>\r\n          <Button title=\"Add Task\" onPress={addTask} />\r\n        </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#DDDDDD',\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}