{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport { useEffect, useState, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Unorderedlist from 'react-native-unordered-list';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref5 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar QUIZ_SCREEN = \"Quiz\";\nvar SUMMARY_SCREEN = \"Summary\";\nexport default function App() {\n  var questions = [{\n    \"prompt\": \"Q1: Select the best answer: Who are you?\",\n    \"type\": \"multiple-choice\",\n    \"choices\": [\"It's just me, myself and I\", \"거울 속 비친 넌 누구인가\", \"기대 안에 기대 이 길의 뒤에\", \"All of the above\"],\n    \"correct\": 3\n  }, {\n    \"prompt\": \"Fill in the blank: Happy ______ day\",\n    \"type\": \"multiple-answer\",\n    \"choices\": [\"Birthday\", \"Death\", \"Best\", \"Worst\"],\n    \"correct\": [1, 4]\n  }, {\n    \"prompt\": \"Is the following statment true or false?\\n\\n        Sail across the world, this is our time\\n\\n        Stray Kids, STAY or none, we're gonna cross the finish line\\n\\n        No stopping time when all we see are goals in our sights\\n\\n        No turning back, push forward, rise above the light\",\n    \"type\": \"true-false\",\n    \"choices\": [\"True\", \"False\"],\n    \"correct\": 0\n  }];\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: QUIZ_SCREEN,\n      children: [_jsx(Stack.Screen, {\n        name: \"Quiz\",\n        component: QuizScreen,\n        initialParams: {\n          questions: questions\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Summary\",\n        component: SummaryScreen,\n        initialParams: {\n          questions: questions\n        }\n      })]\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var renderExercise = function renderExercise(_ref2) {\n    var item = _ref2.item,\n      key = _ref2.key;\n    return _jsx(Button, {\n      title: item.name,\n      testID: item.name + \"-button\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(item.type === DURATION_EXERCISE ? DURATION_EXERCISE : REPITITION_EXERCISE, {\n          exerciseKey: key,\n          name: item.name\n        });\n      }\n    });\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Please select an exercise\"\n      }), _jsx(FlatList, {\n        data: exerciseList,\n        renderItem: renderExercise,\n        keyExtractor: function keyExtractor(exercise) {\n          return exercise.key;\n        }\n      })]\n    })\n  });\n}\nvar currentTimer = 0;\nvar resetTimer = 0;\nfunction QuizScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    running = _useState2[0],\n    setRunning = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    timer = _useState4[0],\n    setTimer = _useState4[1];\n  var updateTimer = useCallback(function () {\n    if (running) {\n      setTimer(function (timer) {\n        return timer + 10;\n      });\n    }\n  }, [running, setInterval]);\n  useEffect(function () {\n    if (running) {\n      currentTimer = setInterval(updateTimer, 10);\n    }\n    return function () {\n      return clearInterval(currentTimer);\n    };\n  }, [running, updateTimer]);\n  var start = useCallback(function () {\n    setRunning(!running);\n  }, [running]);\n  var reset = useCallback(function () {\n    clearInterval(currentTimer);\n    setTimer(resetTimer);\n  });\n  var mins = Math.floor(timer / (1000 * 60) % 60).toString().padStart(2, \"0\");\n  var secs = Math.floor(timer / 1000 % 60).toString().padStart(2, \"0\");\n  var mills = (timer % 1000).toString().padStart(3, \"0\");\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: route.params.name\n    }), _jsxs(Text, {\n      style: {\n        fontSize: \"3em\",\n        fontFamily: \"monospace\",\n        textAlign: 'center',\n        padding: 10\n      },\n      children: [\"Duration: \", mins, \":\", secs, \":\", mills]\n    }), _jsx(Button, {\n      title: \"Start\",\n      style: styles.exerciseButton,\n      onPress: start\n    }), _jsx(Button, {\n      title: \"Reset\",\n      style: styles.exerciseButton,\n      onPress: reset\n    }), _jsx(Button, {\n      title: \"Home\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    })]\n  });\n}\nfunction SummaryScreen(_ref4) {\n  var navigation = _ref4.navigation,\n    route = _ref4.route,\n    exerciseList = _ref4.exerciseList;\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    count = _useState6[0],\n    setCount = _useState6[1];\n  var currentExercise = route.params;\n  console.log(route.params.exerciseList);\n  var relatedExercise = exerciseList.find(function (ex) {\n    return ex.name === currentExercise.related;\n  });\n  var navRelatedExercise = useCallback(function () {\n    navigation.push(relatedExercise.type === DURATION_EXERCISE ? DURATION_EXERCISE : REPITITION_EXERCISE, {\n      exerciseKey: route.params.key,\n      name: route.params.name\n    });\n  }, [relatedExercise]);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: route.params.name\n    }), _jsx(Text, {\n      style: {\n        fontSize: \"3em\",\n        textAlign: 'center',\n        padding: 10\n      },\n      children: count\n    }), _jsx(Button, {\n      title: \"Add\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return setCount(function (count) {\n          return count + 1;\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Reset\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return setCount(0);\n      }\n    }), _jsx(Button, {\n      title: \"Home\",\n      style: styles.exerciseButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(Text, {\n      children: \"Related Exercise:\"\n    }), _jsx(Button, {\n      title: relatedExercise.name,\n      style: styles.button,\n      onPress: navRelatedExercise\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  exerciseButton: {\n    margin: 6\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","useEffect","useState","useCallback","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","React","SafeAreaView","Unorderedlist","jsx","_jsx","jsxs","_jsxs","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref5","font","loadAsync","_x2","QUIZ_SCREEN","SUMMARY_SCREEN","App","questions","children","Navigator","initialRouteName","Screen","name","component","QuizScreen","initialParams","SummaryScreen","HomeScreen","_ref","navigation","renderExercise","_ref2","item","key","title","testID","style","styles","button","onPress","navigate","type","DURATION_EXERCISE","REPITITION_EXERCISE","exerciseKey","heading","data","exerciseList","renderItem","keyExtractor","exercise","currentTimer","resetTimer","_ref3","route","_useState","_useState2","_slicedToArray","running","setRunning","_useState3","_useState4","timer","setTimer","updateTimer","setInterval","clearInterval","start","reset","mins","Math","floor","toString","padStart","secs","mills","params","fontSize","fontFamily","textAlign","padding","exerciseButton","goBack","_ref4","_useState5","_useState6","count","setCount","currentExercise","console","log","relatedExercise","find","ex","related","navRelatedExercise","push","create","container","flex","backgroundColor","alignItems","justifyContent","horizontal","flexDirection","margin","space","height"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab10/App.js"],"sourcesContent":["// used lab9 as a base\r\n// question one reference - https://colorcodedlyrics.com/2022/12/30/ateez-halazia/\r\n// question two refercne - https://colorcodedlyrics.com/2021/12/09/xdinary-heroes-egseudineoli-hieolojeu-happy-death-day/\r\n// question three reference  - https://colorcodedlyrics.com/2021/12/23/stray-kids-broken-compass-gojangnan-nachimban/\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport * as React from 'react';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\nimport Unorderedlist from 'react-native-unordered-list';\r\n\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nconst QUIZ_SCREEN = \"Quiz\"\r\nconst SUMMARY_SCREEN = \"Summary\"\r\n\r\nexport default function App() {\r\n  let questions = [\r\n    {\r\n      \"prompt\": \"Q1: Select the best answer: Who are you?\",\r\n      \"type\": \"multiple-choice\",\r\n      \"choices\": [\r\n        \"It's just me, myself and I\",\r\n        \"거울 속 비친 넌 누구인가\",\r\n        \"기대 안에 기대 이 길의 뒤에\",\r\n        \"All of the above\",\r\n    ],\r\n      \"correct\": 3\r\n    },\r\n    {\r\n      \"prompt\": \"Fill in the blank: Happy ______ day\",\r\n      \"type\": \"multiple-answer\",\r\n      \"choices\": [\r\n        \"Birthday\",\r\n        \"Death\",\r\n        \"Best\",\r\n        \"Worst\",\r\n    ],\r\n      \"correct\": [1,4]\r\n    },\r\n    {\r\n      \"prompt\": `Is the following statment true or false?\\n\r\n        Sail across the world, this is our time\\n\r\n        Stray Kids, STAY or none, we're gonna cross the finish line\\n\r\n        No stopping time when all we see are goals in our sights\\n\r\n        No turning back, push forward, rise above the light`,\r\n      \"type\": \"true-false\",\r\n        \"choices\": [\r\n        \"True\",\r\n        \"False\",\r\n    ],\r\n      \"correct\": 0\r\n    },\r\n  ]\r\n    return (\r\n      <NavigationContainer>{\r\n        <Stack.Navigator initialRouteName={QUIZ_SCREEN}>\r\n          <Stack.Screen name=\"Quiz\" component={QuizScreen} initialParams={{questions: questions}}></Stack.Screen>\r\n          <Stack.Screen name=\"Summary\" component={SummaryScreen} initialParams={{questions: questions}}></Stack.Screen>\r\n        </Stack.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction HomeScreen({navigation}) {\r\n  let renderExercise = ({item, key}) => \r\n    <Button title={item.name} testID={`${item.name}-button`} style={styles.button}\r\n    onPress={() => navigation.navigate(item.type === DURATION_EXERCISE ? DURATION_EXERCISE : REPITITION_EXERCISE, {exerciseKey: key, name: item.name})} />\r\n    return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text style={styles.heading}>Please select an exercise</Text>\r\n          <FlatList data={exerciseList}\r\n            renderItem={renderExercise}\r\n            keyExtractor={(exercise) =>exercise.key}>\r\n          </FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nlet currentTimer = 0\r\nlet resetTimer = 0\r\nfunction QuizScreen({navigation, route}) {\r\n    let [running, setRunning] = useState(false)\r\n    let [timer, setTimer] = useState(0)\r\n    let updateTimer = useCallback(() => {\r\n        if(running){\r\n            setTimer((timer) => timer+10)\r\n        }\r\n    }, [running, setInterval])\r\n    useEffect(() => {\r\n      if (running) {\r\n        currentTimer = setInterval(updateTimer, 10)\r\n      }  \r\n        return () => clearInterval(currentTimer)\r\n    }, [running, updateTimer])\r\n    let start = useCallback(() => {\r\n        setRunning(!running)\r\n    }, [running])\r\n    let reset = useCallback(() => {\r\n        clearInterval(currentTimer)\r\n        setTimer(resetTimer)\r\n    })\r\n    let mins = (Math.floor((timer / (1000*60)) % 60)).toString().padStart(2, \"0\")\r\n    let secs = (Math.floor((timer / 1000) % 60)).toString().padStart(2, \"0\")\r\n    let mills =  (timer % 1000).toString().padStart(3, \"0\")\r\n    return (\r\n        <View>\r\n            <Text style={styles.heading}>{route.params.name}</Text>\r\n            <Text style={{fontSize: \"3em\", fontFamily:\"monospace\", textAlign: 'center', padding: 10}}>Duration: {mins}:{secs}:{mills}</Text>\r\n            <Button title=\"Start\" style={styles.exerciseButton} onPress={start}></Button>\r\n            <Button title=\"Reset\" style={styles.exerciseButton} onPress={reset}></Button>\r\n            <Button title=\"Home\" style={styles.exerciseButton} onPress={() => navigation.goBack()}></Button>\r\n        </View>\r\n    )\r\n}\r\n\r\nfunction SummaryScreen({navigation, route, exerciseList}) {\r\n    let [count, setCount] = useState(0)\r\n    let currentExercise = route.params\r\n    console.log(route.params.exerciseList)\r\n    let relatedExercise = exerciseList.find(ex => ex.name === currentExercise.related)\r\n    let navRelatedExercise = useCallback(() => {\r\n      navigation.push(relatedExercise.type === DURATION_EXERCISE ? DURATION_EXERCISE : REPITITION_EXERCISE, {exerciseKey: route.params.key, name: route.params.name})\r\n    }, [relatedExercise])\r\n    return <View>\r\n      <Text style={styles.heading}>{route.params.name}</Text>\r\n      <Text style={{fontSize: \"3em\", textAlign: 'center', padding: 10}}>{count}</Text>\r\n      <Button title=\"Add\" style={styles.exerciseButton} onPress={()=>setCount(count=>count+1)}></Button>\r\n      <Button title=\"Reset\" style={styles.exerciseButton} onPress={()=>setCount(0)}></Button>\r\n      <Button title=\"Home\" style={styles.exerciseButton} onPress={() => navigation.goBack()}></Button>\r\n      <Text>Related Exercise:</Text>\r\n      <Button title={relatedExercise.name} style={styles.button}\r\n      onPress={navRelatedExercise} />\r\n    </View>\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  exerciseButton: {\r\n    margin: 6\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20\r\n  }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}