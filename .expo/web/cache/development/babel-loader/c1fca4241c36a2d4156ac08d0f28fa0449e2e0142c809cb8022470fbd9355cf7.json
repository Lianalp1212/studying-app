{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useState, useCallback } from 'react';\nimport { CheckBox, Button, Input } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref2 = _asyncToGenerator(function* (font) {\n        yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nfunction AsyncLocalStorage(_ref) {\n  var key = _ref.key;\n  key = \"loginData\";\n  var loginInfo = [{\n    username: \"test\",\n    password: \"Test1@\"\n  }];\n}\nexport default function App() {\n  cacheFonts([FontAwesome.font]);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        children: \"Open up App.js to start working on your app!\"\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","React","NavigationContainer","FontAwesome","useState","useCallback","CheckBox","Button","Input","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref2","font","Font","loadAsync","_x2","AsyncLocalStorage","_ref","key","loginInfo","username","password","App","children","style","styles","container","create","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { useState, useCallback } from 'react';\r\nimport { CheckBox, Button, Input } from 'react-native-elements';\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => {await Font.loadAsync(font)})\r\n}\r\n\r\nfunction AsyncLocalStorage({key}) {\r\n  key = \"loginData\"\r\n  let loginInfo = [\r\n  {username: \"test\", password: \"Test1@\"}\r\n  ]\r\n}\r\n\r\nexport default function App() {\r\n  cacheFonts([FontAwesome.font])\r\n  return (\r\n    <NavigationContainer>{\r\n      <View style={styles.container}>\r\n        <Text>Open up App.js to start working on your app!</Text>\r\n        <StatusBar style=\"auto\" />\r\n      </View>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE5C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,WAAW,MAAM,gCAAgC;AACxD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,QAAQ,uBAAuB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAEjDC,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,KAAK,EAAE;IAC/B,OAAOA,KAAK,CAACC,GAAG;MAAA,IAAAC,KAAA,GAAAH,iBAAA,CAAC,WAAOI,IAAI,EAAK;QAAC,MAAMC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;MAAA,CAAC;MAAA,iBAAAG,GAAA;QAAA,OAAAJ,KAAA,CAAAL,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EAChE,CAAC;EAAA,OAAAF,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,SAASS,iBAAiBA,CAAAC,IAAA,EAAQ;EAAA,IAANC,GAAG,GAAAD,IAAA,CAAHC,GAAG;EAC7BA,GAAG,GAAG,WAAW;EACjB,IAAIC,SAAS,GAAG,CAChB;IAACC,QAAQ,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAQ,CAAC,CACrC;AACH;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5BnB,UAAU,CAAC,CAACV,WAAW,CAACmB,IAAI,CAAC,CAAC;EAC9B,OACEZ,IAAA,CAACR,mBAAmB;IAAA+B,QAAA,EAClBrB,KAAA,CAACZ,IAAI;MAACkC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GAC5BvB,IAAA,CAACX,IAAI;QAAAkC,QAAA,EAAC;MAA4C,EAAO,EACzDvB,IAAA,CAACb,SAAS;QAACqC,KAAK,EAAC;MAAM,EAAG;IAAA;EACrB,EACc;AAE3B;AAEA,IAAMC,MAAM,GAAGrC,UAAU,CAACuC,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}