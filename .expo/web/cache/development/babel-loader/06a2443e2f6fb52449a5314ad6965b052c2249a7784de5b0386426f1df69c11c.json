{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Button, Input, Text, ButtonGroup } from '@rneui/themed';\nimport { useEffect, useState, useCallback } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { CheckBox } from 'react-native-elements';\nimport { Listbox } from '@headlessui/react';\nimport Unorderedlist from 'react-native-unordered-list';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref4 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar Stack = createNativeStackNavigator();\nvar questions = [{\n  \"prompt\": \"Q1: Select the best answer:\\n \\\"Who are you?\\\"\",\n  \"type\": \"multiple-choice\",\n  \"choices\": [\"It's just me, myself and I\", \"거울 속 비친 넌 누구인가\", \"기대 안에 기대 이 길의 뒤에\", \"All of the above\"],\n  \"correct\": 3\n}, {\n  \"prompt\": \"Q2: Fill in the blank:\\n \\\"Happy ______ day\\\"\",\n  \"type\": \"multiple-answer\",\n  \"choices\": [\"Birthday\", \"Death\", \"Best\", \"Worst\"],\n  \"correct\": [1, 3]\n}, {\n  \"prompt\": \"Q3: Is the following statment true or false?\\n\\n      Stray Kids, STAY or none, we're gonna cross the finish line\",\n  \"type\": \"true-false\",\n  \"choices\": [\"True\", \"False\"],\n  \"correct\": 0\n}, {\n  \"prompt\": \"Q4: What does ZB1 stand for?\",\n  \"type\": \"open-response\",\n  \"choices\": [],\n  \"correct\": \"zerobaseone\"\n}, {\n  \"prompt\": \"Q5: Complete the quote:\\n\\n      \\\"We the best ___\\\"\",\n  \"type\": \"drop-down\",\n  \"choices\": [\"Boyz\", \"Boys\", \"Fruits\", \"Kids\", \"Adults\", \"Girlz\", \"Girls\"],\n  \"correct\": 0\n}];\nfunction Question(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  console.log(route.params);\n  var _route$params = route.params,\n    questionNumber = _route$params.questionNumber,\n    userChoices = _route$params.userChoices,\n    data = _route$params.data;\n  var _data$questionNumber = data[questionNumber],\n    choices = _data$questionNumber.choices,\n    prompt = _data$questionNumber.prompt,\n    type = _data$questionNumber.type;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedIndex = _useState2[0],\n    setSelectedIndex = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedIndexes = _useState4[0],\n    setSelectedIndexes = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    openResponse = _useState6[0],\n    setOpenResponse = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dropDown = _useState8[0],\n    setDropDown = _useState8[1];\n  var nextQuestion = function nextQuestion() {\n    var nextQuestion = questionNumber + 1;\n    if (type !== 'multiple-answer') {\n      userChoices.push(selectedIndex);\n    } else {\n      userChoices.push(selectedIndexes);\n    }\n    if (nextQuestion < questions.length) {\n      console.log(\"next question\");\n      navigation.navigate('Question', {\n        questionNumber: nextQuestion,\n        questions: questions,\n        userChoices: userChoices,\n        openResponse: openResponse\n      });\n    } else {\n      navigation.navigate('SummaryScreen', {\n        questionNumber: nextQuestion,\n        questions: questions,\n        userChoices: userChoices,\n        openResponse: openResponse\n      });\n    }\n  };\n  if (type == 'open-response') {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: prompt\n      }), _jsx(TextInput, {\n        testID: \"choices\",\n        placeholder: \"Your answer...\",\n        style: styles.input,\n        onChangeText: function onChangeText(text) {\n          return setOpenResponse(text);\n        },\n        value: openResponse\n      }), _jsx(Button, {\n        testId: \"next-question\",\n        onPress: nextQuestion,\n        title: \"Next\"\n      })]\n    });\n  }\n  if (type == 'drop-down') {\n    var questions4 = questions[4].choices;\n    var MyListBoxOption = React.forwardRef(function (props, ref) {\n      return _jsx(Unorderedlist, _objectSpread(_objectSpread({}, props), {}, {\n        ref: ref\n      }));\n    });\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: prompt\n      }), _jsxs(Listbox, {\n        value: dropDown,\n        onChange: setDropDown,\n        children: [_jsx(Listbox.Button, {\n          style: styles.listbox,\n          children: dropDown || \"Choose an answer...\"\n        }), _jsx(Listbox.Options, {\n          children: questions4.map(function (choice, index) {\n            return _jsx(Listbox.Option, {\n              value: choice,\n              children: _jsx(MyListBoxOption, {\n                children: _jsx(Text, {\n                  style: styles.choices,\n                  children: choice\n                })\n              })\n            }, index);\n          })\n        })]\n      }), _jsx(Button, {\n        testId: \"next-question\",\n        onPress: nextQuestion,\n        title: \"Next\"\n      })]\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: prompt\n    }), type !== 'multiple-answer' ? _jsx(ButtonGroup, {\n      testID: \"choices\",\n      buttons: choices,\n      vertical: true,\n      selectedIndex: selectedIndex,\n      onPress: function onPress(value) {\n        setSelectedIndex(value);\n      },\n      containerStyle: {\n        marginBottom: 20,\n        width: '70'\n      }\n    }) : _jsx(ButtonGroup, {\n      testID: \"choices\",\n      buttons: choices,\n      vertical: true,\n      selectMultiple: true,\n      selectedIndexes: selectedIndexes,\n      onPress: function onPress(value) {\n        setSelectedIndexes(value);\n      },\n      containerStyle: {\n        marginBottom: 20,\n        width: '70'\n      }\n    }), _jsx(Button, {\n      testId: \"next-question\",\n      onPress: nextQuestion,\n      title: \"Next\"\n    })]\n  });\n}\nfunction SummaryScreen(_ref2) {\n  var route = _ref2.route,\n    openResponse = _ref2.openResponse;\n  var calculateCorrect = function calculateCorrect(userSelected, correct, type) {\n    var userCorrect = false;\n    if (type == 'multiple-answer') {\n      userCorrect = userSelected.sort().toString() === correct.sort().toString();\n    } else {\n      userCorrect = userSelected == correct;\n    }\n    return userCorrect;\n  };\n  var totalScore = 0;\n  var openResLower = route.params.openResponse.toLowerCase();\n  for (var i = 0; i < route.params.data.length; i++) {\n    if (calculateCorrect(route.params.userChoices[i], route.params.data[i].correct, route.params.data[i].type)) {\n      totalScore++;\n    } else if (route.params.data[i].type == 'open-response' && openResLower == route.params.data[i].correct) {\n      totalScore++;\n    }\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Summary\"\n      }), _jsxs(Text, {\n        style: styles.subheading,\n        children: [\"Score: \", totalScore]\n      })]\n    }), _jsx(FlatList, {\n      data: route.params.data,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item,\n          index = _ref3.index;\n        var choices = item.choices,\n          prompt = item.prompt,\n          type = item.type,\n          correct = item.correct;\n        var userSelected = route.params.userChoices[index];\n        var openAnswer = \"\";\n        if (type == 'open-response') {\n          openAnswer = correct;\n        }\n        var isCorrect = openResLower === correct;\n        if (openResLower == correct) {\n          _jsx(Text, {\n            style: {\n              backgroundColor: 'lightgreen',\n              textAlign: 'center',\n              fontSize: 20\n            },\n            children: \"Correct\"\n          });\n        } else {\n          _jsx(Text, {\n            style: {\n              backgroundColor: 'lightgray',\n              textAlign: 'center',\n              fontSize: 20\n            },\n            children: \"Incorrect\"\n          });\n        }\n        console.log(\"index \" + index);\n        console.log(\"userSelected \" + userSelected);\n        console.log(\"openResponse \" + openResponse);\n        console.log(\"isCorrect \" + isCorrect);\n        return _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.subheading,\n            children: prompt\n          }), type == 'open-response' ? _jsxs(View, {\n            children: [_jsxs(Text, {\n              style: styles.openRes,\n              children: [\"Your answer: \", route.params.openResponse]\n            }), _jsxs(Text, {\n              style: styles.openRes,\n              children: [\"Correct answer: \", openAnswer]\n            }), isCorrect ? _jsx(Text, {\n              style: {\n                backgroundColor: 'lightgreen',\n                textAlign: 'center',\n                fontSize: 20\n              },\n              children: \"Correct\"\n            }) : _jsx(Text, {\n              style: {\n                backgroundColor: 'lightgray',\n                textAlign: 'center',\n                fontSize: 20\n              },\n              children: \"Incorrect\"\n            })]\n          }) : choices.map(function (value, choiceIndex) {\n            var incorrect = false;\n            var userDidSelect = false;\n            if (type == 'multiple-answer') {\n              userDidSelect = userSelected.includes(choiceIndex);\n              incorrect = userDidSelect && !correct.includes(choiceIndex);\n            } else {\n              userDidSelect = userSelected == choiceIndex;\n              incorrect = userDidSelect && userSelected !== correct;\n            }\n            return _jsx(CheckBox, {\n              containerStyle: {\n                backgroundColor: userDidSelect ? incorrect == false ? 'lightgreen' : 'lightgray' : undefined\n              },\n              checked: type == 'multiple-answer' ? correct.includes(choiceIndex) : correct == choiceIndex,\n              textStyle: {\n                textDecorationLine: incorrect ? 'line-through' : undefined\n              },\n              title: value\n            }, value);\n          })]\n        }, index);\n      }\n    }), _jsx(Button, {\n      title: \"Restart\",\n      style: styles.button,\n      onPress: nextQuestion\n    })]\n  });\n}\nexport default function App() {\n  cacheFonts([FontAwesome.font]);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Question\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Question\",\n        initialParams: {\n          questionNumber: 0,\n          data: questions,\n          userChoices: []\n        },\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(Question, _objectSpread({}, props));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"SummaryScreen\",\n        initialParams: {\n          questionNumber: questions.length - 1,\n          data: questions,\n          userChoices: [3, [1, 3], 0, \"zonebaseone\", 0]\n        },\n        options: {\n          headerShown: false\n        },\n        component: SummaryScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  buttonGroup: {\n    backgroundColor: \"#2089dc\",\n    color: \"white\",\n    textAlign: \"center\",\n    paddingVertical: 5,\n    marginBottom: 10\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    paddingTop: 20,\n    paddingBottom: 10\n  },\n  subheading: {\n    fontSize: 25,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    paddingBottom: 20\n  },\n  summary: {\n    fontSize: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 15\n  },\n  summaryAnd: {\n    fontSize: 17,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 10\n  },\n  choices: {\n    margin: 6,\n    padding: 6,\n    textAlign: 'center',\n    fontStyle: 'semibold',\n    backgroundColor: '#DFEDFF'\n  },\n  listbox: {\n    margin: 15,\n    padding: 10,\n    marginBottom: 20,\n    backgroundColor: '#9FCBFF'\n  },\n  openRes: {\n    fontSize: 20,\n    textAlign: 'center',\n    margins: 10\n  },\n  input: {\n    backgroundColor: \"#D5D5D5\",\n    fontSize: 20,\n    alignItems: 'center',\n    padding: 10,\n    margin: 15\n  }\n});","map":{"version":3,"names":["Button","Input","Text","ButtonGroup","useEffect","useState","useCallback","NavigationContainer","createNativeStackNavigator","React","Font","FontAwesome","CheckBox","Listbox","Unorderedlist","jsx","_jsx","jsxs","_jsxs","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref4","font","loadAsync","_x2","Stack","questions","Question","_ref","navigation","route","console","log","params","_route$params","questionNumber","userChoices","data","_data$questionNumber","choices","prompt","type","_useState","_useState2","_slicedToArray","selectedIndex","setSelectedIndex","_useState3","_useState4","selectedIndexes","setSelectedIndexes","_useState5","_useState6","openResponse","setOpenResponse","_useState7","_useState8","dropDown","setDropDown","nextQuestion","push","length","navigate","View","style","styles","container","children","heading","TextInput","testID","placeholder","input","onChangeText","text","value","testId","onPress","title","questions4","MyListBoxOption","forwardRef","props","ref","_objectSpread","onChange","listbox","Options","choice","index","Option","buttons","vertical","containerStyle","marginBottom","width","selectMultiple","SummaryScreen","_ref2","calculateCorrect","userSelected","correct","userCorrect","sort","toString","totalScore","openResLower","toLowerCase","i","subheading","FlatList","renderItem","_ref3","item","openAnswer","isCorrect","backgroundColor","textAlign","fontSize","openRes","choiceIndex","incorrect","userDidSelect","includes","undefined","checked","textStyle","textDecorationLine","button","App","Navigator","initialRouteName","Screen","name","initialParams","options","headerShown","component","StyleSheet","create","flex","alignItems","justifyContent","horizontal","flexDirection","padding","buttonGroup","color","paddingVertical","space","height","paddingTop","paddingBottom","summary","summaryAnd","margin","fontStyle","margins"],"sources":["C:/Users/5duck/Desktop/study-app/App.js"],"sourcesContent":["import { StyleSheet, View, FlatList, TextInput } from 'react-native';\r\nimport { Button, Input, Text, ButtonGroup } from '@rneui/themed';\r\nimport { useEffect, useState, useCallback } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as React from 'react';\r\nimport * as Font from 'expo-font';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { CheckBox } from 'react-native-elements';\r\nimport { Listbox } from '@headlessui/react';\r\nimport Unorderedlist from 'react-native-unordered-list';\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\nconst Stack = createNativeStackNavigator()\r\n\r\nconst questions = [\r\n  {\r\n    \"prompt\": `Q1: Select the best answer:\\n \"Who are you?\"`,\r\n    \"type\": \"multiple-choice\",\r\n    \"choices\": [\r\n      \"It's just me, myself and I\",\r\n      \"거울 속 비친 넌 누구인가\",\r\n      \"기대 안에 기대 이 길의 뒤에\",\r\n      \"All of the above\",\r\n    ],\r\n    \"correct\": 3\r\n  },\r\n  {\r\n    \"prompt\": `Q2: Fill in the blank:\\n \"Happy ______ day\"`,\r\n    \"type\": \"multiple-answer\",\r\n    \"choices\": [\r\n      \"Birthday\",\r\n      \"Death\",\r\n      \"Best\",\r\n      \"Worst\",\r\n    ],\r\n    \"correct\": [1,3]\r\n  },\r\n  {\r\n    \"prompt\": `Q3: Is the following statment true or false?\\n\r\n      Stray Kids, STAY or none, we're gonna cross the finish line`,\r\n    \"type\": \"true-false\",\r\n    \"choices\": [\r\n      \"True\",\r\n      \"False\",\r\n    ],\r\n    \"correct\": 0\r\n  },\r\n  {\r\n    \"prompt\": `Q4: What does ZB1 stand for?`,\r\n    \"type\": \"open-response\",\r\n    \"choices\": [\r\n    ],\r\n    \"correct\": \"zerobaseone\"\r\n  },\r\n  {\r\n    \"prompt\": `Q5: Complete the quote:\\n\r\n      \"We the best ___\"`,\r\n    \"type\": \"drop-down\",\r\n    \"choices\": [\r\n      \"Boyz\",\r\n      \"Boys\",\r\n      \"Fruits\",\r\n      \"Kids\",\r\n      \"Adults\",\r\n      \"Girlz\",\r\n      \"Girls\",\r\n    ],\r\n    \"correct\": 0\r\n  }\r\n]\r\n\r\nfunction Question({navigation, route}) {\r\n  console.log(route.params)\r\n  const { questionNumber, userChoices, data } = route.params\r\n  let { choices, prompt, type } = data[questionNumber]\r\n  let [selectedIndex, setSelectedIndex] = useState(0)\r\n  let [selectedIndexes, setSelectedIndexes] = useState([])\r\n  let [openResponse, setOpenResponse] = useState(\"\")\r\n  let [dropDown, setDropDown] = useState(false)\r\n  let nextQuestion = () => {\r\n    let nextQuestion = questionNumber + 1\r\n    if ( type !== 'multiple-answer') {\r\n      userChoices.push(selectedIndex)\r\n    } else {\r\n      userChoices.push(selectedIndexes)\r\n    }\r\n    if (nextQuestion < questions.length) {\r\n      console.log(\"next question\")\r\n      navigation.navigate('Question', {\r\n        questionNumber: nextQuestion,\r\n        questions,\r\n        userChoices,\r\n        openResponse,\r\n      })\r\n    } else {\r\n      navigation.navigate('SummaryScreen', {\r\n        questionNumber: nextQuestion,\r\n        questions,\r\n        userChoices,\r\n        openResponse,\r\n      })\r\n    }\r\n  }\r\n  if (type == 'open-response') {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.heading}>{prompt}</Text>\r\n        {/* <Input\r\n          testID=\"choices\"\r\n          placeholder='Your answer...'\r\n          onChangeText={setOpenResponse}\r\n          value={openResponse}\r\n        /> */}\r\n        <TextInput testID=\"choices\" \r\n          placeholder=\"Your answer...\"\r\n          style={styles.input}\r\n          onChangeText={(text) => setOpenResponse(text)}\r\n          value={openResponse}>\r\n        </TextInput>\r\n        <Button \r\n          testId=\"next-question\"\r\n          onPress={nextQuestion}\r\n          title=\"Next\"\r\n        ></Button>\r\n      </View>\r\n    )\r\n  }\r\n  if (type == 'drop-down') {\r\n    const questions4 = questions[4].choices\r\n    const MyListBoxOption = React.forwardRef((props, ref) => {\r\n      return <Unorderedlist {...props} ref={ref} />\r\n    })\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.heading}>{prompt}</Text>\r\n        <Listbox value={dropDown} onChange={setDropDown}>\r\n          <Listbox.Button style={styles.listbox}>\r\n            {dropDown || \"Choose an answer...\"}\r\n          </Listbox.Button>    \r\n          <Listbox.Options>\r\n            {questions4.map((choice, index) => (\r\n              <Listbox.Option\r\n                key={index}\r\n                value={choice}\r\n              >\r\n                <MyListBoxOption>\r\n                  <Text style={styles.choices}>{choice}</Text>\r\n                </MyListBoxOption>\r\n              </Listbox.Option>\r\n            ))}\r\n          </Listbox.Options>\r\n        </Listbox>\r\n        <Button \r\n          testId=\"next-question\"\r\n          onPress={nextQuestion}\r\n          title=\"Next\"\r\n        ></Button>\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n  <View style={styles.container}>\r\n    <Text style={styles.heading}>{prompt}</Text>\r\n    {type !== 'multiple-answer' ? (\r\n      <ButtonGroup\r\n        testID=\"choices\"\r\n        buttons={choices}\r\n        vertical\r\n        selectedIndex={selectedIndex}\r\n        onPress={(value) => {\r\n          setSelectedIndex(value)\r\n        }}\r\n        containerStyle={{marginBottom: 20, width: '70'}}\r\n        />\r\n    ):(\r\n      <ButtonGroup\r\n        testID=\"choices\"\r\n        buttons={choices}\r\n        vertical\r\n        selectMultiple\r\n        selectedIndexes={selectedIndexes}\r\n        onPress={(value) => {\r\n          setSelectedIndexes(value)\r\n        }}\r\n        containerStyle={{marginBottom: 20, width: '70'}}    \r\n      />\r\n    )}\r\n    <Button \r\n      testId=\"next-question\"\r\n      onPress={nextQuestion}\r\n      title=\"Next\"\r\n    ></Button>\r\n  </View>\r\n  )\r\n}\r\n\r\nfunction SummaryScreen({route, openResponse}) {\r\n  let calculateCorrect = (userSelected, correct, type) => {\r\n    let userCorrect = false \r\n    if (type == 'multiple-answer') {\r\n      userCorrect = userSelected.sort().toString() === correct.sort().toString()\r\n    } else {\r\n      userCorrect = userSelected == correct \r\n    }\r\n    return userCorrect\r\n  }\r\n  let totalScore = 0\r\n  let openResLower = route.params.openResponse.toLowerCase()\r\n  for (let i = 0; i < route.params.data.length; i++) {\r\n    if (calculateCorrect(\r\n      route.params.userChoices[i],\r\n      route.params.data[i].correct,\r\n      route.params.data[i].type\r\n      )\r\n    ) {\r\n      totalScore++\r\n    } else if (route.params.data[i].type == 'open-response' && \r\n      openResLower == route.params.data[i].correct) {\r\n      totalScore++\r\n    }\r\n  }\r\nreturn (\r\n  <View style={styles.container}>\r\n    <View>\r\n      <Text style={styles.heading}>Summary</Text>\r\n      <Text style={styles.subheading}>Score: {totalScore}</Text>\r\n    </View>\r\n    <FlatList\r\n    data={route.params.data}\r\n    renderItem={({item, index}) => {\r\n      let { choices, prompt, type, correct } = item\r\n      let userSelected = route.params.userChoices[index]\r\n      let openAnswer = \"\"\r\n      if (type == 'open-response') {\r\n        openAnswer = correct\r\n      }\r\n      let isCorrect = openResLower === correct\r\n        if (openResLower == correct) {\r\n          <Text style={{backgroundColor: 'lightgreen', textAlign: 'center', fontSize: 20}}>Correct</Text>\r\n        } else {\r\n          <Text style={{backgroundColor: 'lightgray', textAlign: 'center', fontSize: 20}}>Incorrect</Text>\r\n        }\r\n      console.log(\"index \" + index)\r\n      console.log(\"userSelected \" + userSelected)\r\n      console.log(\"openResponse \" + openResponse)\r\n      console.log(\"isCorrect \" + isCorrect)\r\n      return (\r\n        <View key={index}>\r\n          <Text style={styles.subheading}>{prompt}</Text>\r\n          { type == 'open-response' ? (\r\n            <View>\r\n              <Text style={styles.openRes}>Your answer: {route.params.openResponse}</Text>\r\n              <Text style={styles.openRes}>Correct answer: {openAnswer}</Text>\r\n              {isCorrect ? (\r\n                <Text style={{backgroundColor: 'lightgreen', textAlign: 'center', fontSize: 20}}>Correct</Text>\r\n              ) : (\r\n                <Text style={{backgroundColor: 'lightgray', textAlign: 'center', fontSize: 20}}>Incorrect</Text>\r\n              )}\r\n            </View>\r\n          ) : (\r\n          choices.map((value, choiceIndex) => {\r\n            let incorrect = false\r\n            let userDidSelect = false \r\n            if (type == 'multiple-answer') {\r\n              userDidSelect = userSelected.includes(choiceIndex)\r\n              incorrect = userDidSelect && !correct.includes(choiceIndex)\r\n            } else {\r\n              userDidSelect = userSelected == choiceIndex\r\n              incorrect = userDidSelect && userSelected !== correct\r\n            }\r\n            return (\r\n              <CheckBox\r\n              containerStyle={{\r\n                backgroundColor: userDidSelect ? incorrect == false\r\n                  ? 'lightgreen'\r\n                  : 'lightgray'\r\n                : undefined,\r\n              }}\r\n              checked = {\r\n                type == 'multiple-answer'\r\n                  ? correct.includes(choiceIndex)\r\n                  : correct == choiceIndex\r\n              }\r\n              textStyle={{\r\n                textDecorationLine: incorrect\r\n                  ? 'line-through'\r\n                  : undefined,\r\n              }}\r\n              key={value}\r\n              title={value}\r\n              ></CheckBox>\r\n            )\r\n          })\r\n        )}\r\n        </View>\r\n        )\r\n      }}\r\n    ></FlatList>\r\n    <Button title=\"Restart\" style={styles.button} onPress={nextQuestion}></Button>\r\n  </View>\r\n  )  \r\n}\r\n\r\nexport default function App() {\r\n  cacheFonts([FontAwesome.font])\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator initialRouteName=\"Question\">\r\n        <Stack.Screen\r\n          name=\"Question\"\r\n          initialParams={{\r\n            questionNumber: 0,\r\n            data: questions,\r\n            userChoices: []\r\n          }}\r\n          options={{headerShown: false}}>\r\n          {(props) => <Question {...props} />}\r\n        </Stack.Screen>\r\n        <Stack.Screen\r\n          name=\"SummaryScreen\"\r\n          initialParams={{\r\n            questionNumber: questions.length - 1,\r\n            data: questions,\r\n            userChoices: [3, [1, 3], 0, \"zonebaseone\", 0],\r\n          }}\r\n          options={{headerShown: false}}\r\n          component={SummaryScreen}\r\n        ></Stack.Screen>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  buttonGroup: {\r\n    backgroundColor : \"#2089dc\",\r\n    color : \"white\",\r\n    textAlign : \"center\",\r\n    paddingVertical : 5,\r\n    marginBottom : 10,\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    paddingTop: 20,\r\n    paddingBottom: 10\r\n  },\r\n  subheading: {\r\n    fontSize: 25,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    paddingBottom: 20\r\n  },\r\n  summary: {\r\n    fontSize: 20,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 15\r\n  },\r\n  summaryAnd: {\r\n    fontSize: 17,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 10\r\n  },\r\n  choices: {\r\n    margin: 6,\r\n    padding: 6,\r\n    textAlign: 'center',\r\n    fontStyle: 'semibold',\r\n    backgroundColor: '#DFEDFF',\r\n  },\r\n  listbox: {\r\n    margin: 15,\r\n    padding: 10,\r\n    marginBottom: 20,\r\n    backgroundColor: '#9FCBFF'\r\n  },\r\n  openRes: {\r\n    fontSize: 20,\r\n    textAlign: 'center',\r\n    margins: 10  \r\n  },\r\n  input: {\r\n    backgroundColor: \"#D5D5D5\",\r\n    fontSize: 20,\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    margin: 15\r\n  },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}