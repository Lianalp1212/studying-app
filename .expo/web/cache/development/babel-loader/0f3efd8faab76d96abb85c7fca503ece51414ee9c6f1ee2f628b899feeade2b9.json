{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref6 = _asyncToGenerator(function* (font) {\n        yield Font.loadAsync(font);\n      });\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Dishes\",\n  key: \"1\",\n  completed: false\n}, {\n  description: \"Homework\",\n  key: \"2\",\n  completed: false\n}, {\n  description: \"Walk dog\",\n  key: \"3\",\n  completed: false\n}];\nexport default function App() {\n  cacheFonts([FontAwesome.font]);\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"login\",\n        component: LoginScreen\n      }), _jsx(Tab.Screen, {\n        name: \"register\",\n        component: RegisterScreen\n      }), _jsx(Tab.Screen, {\n        name: \"todo\",\n        component: TodoHomeScreen\n      })]\n    })\n  });\n}\nfunction LoginScreen() {\n  return _jsx(Text, {\n    children: \"Sample\"\n  });\n}\nfunction RegisterScreen() {\n  return _jsx(Text, {\n    children: \"Sample2\"\n  });\n}\nfunction TodoHomeScreen() {\n  var _useState = useState(initTasks),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  useEffect(function () {\n    function getValue() {\n      return _getValue.apply(this, arguments);\n    }\n    function _getValue() {\n      _getValue = _asyncToGenerator(function* () {\n        var value = yield AsyncStorage.getItem(\"@tasks\");\n        if (value === null) {\n          console.log(\"Sorting tasks\" + JSON.stringify(tasks));\n          yield AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n        } else {\n          var parsedValue = JSON.parse(value);\n          console.log(\"Retrieving tasks\");\n          console.log(parsedValue);\n          setTasks(JSON.parse(value));\n        }\n      });\n      return _getValue.apply(this, arguments);\n    }\n    getValue();\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Todo List\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Todo List\",\n      children: function children(props) {\n        return _jsx(TodoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      children: function children(props) {\n        return _jsx(DetailsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    })]\n  });\n}\nfunction DetailsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route,\n    setTasks = _ref.setTasks,\n    tasks = _ref.tasks;\n  var _route$params$getItem = route.params.getItem,\n    description = _route$params$getItem.description,\n    completed = _route$params$getItem.completed,\n    key = _route$params$getItem.key,\n    relatedTasks = _route$params$getItem.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyCOntent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nfunction TodoScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    tasks = _ref2.tasks,\n    setTasks = _ref2.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var updateTask = function () {\n    var _ref3 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_objectSpread({}, tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref5) {\n    var item = _ref5.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\");\n        }\n      })]\n    });\n  };\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","FontAwesome","useEffect","useState","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref6","font","loadAsync","_x3","initTasks","description","key","completed","App","children","Navigator","Screen","name","component","LoginScreen","RegisterScreen","TodoHomeScreen","_useState","_useState2","_slicedToArray","tasks","setTasks","getValue","_getValue","value","getItem","console","log","JSON","stringify","setItem","parsedValue","parse","initialRouteName","props","TodoScreen","_objectSpread","DetailsScreen","_ref","navigation","route","_route$params$getItem","params","relatedTasks","setOptions","title","style","flex","alignItems","justifyCOntent","undefined","length","filter","task","includes","cTask","onPress","dispatch","push","item","_ref2","_useState3","_useState4","input","setInput","updateTask","_ref3","_x2","addTask","_ref4","maxKey","forEach","newTasks","concat","_toConsumableArray","renderItem","_ref5","styles","horizontal","textStyle","textDecorationLine","textDecorationStyle","checked","navigate","create","container","backgroundColor","justifyContent"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\n\r\nconst Tab = createBottomTabNavigator()\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => {await Font.loadAsync(font)})\r\n}\r\n\r\nlet initTasks = [\r\n  {description: \"Dishes\", key: \"1\", completed: false},\r\n  {description: \"Homework\", key: \"2\", completed: false},\r\n  {description: \"Walk dog\", key: \"3\", completed: false}\r\n]\r\n\r\nexport default function App() {\r\n  cacheFonts([FontAwesome.font])\r\n  return (\r\n    <NavigationContainer>{\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"login\" component={LoginScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"register\" component={RegisterScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"todo\" component={TodoHomeScreen}></Tab.Screen>\r\n      </Tab.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  return <Text>Sample</Text>\r\n}\r\n\r\nfunction RegisterScreen() {\r\n  return <Text>Sample2</Text>\r\n}\r\n\r\nfunction TodoHomeScreen() {\r\n  let [tasks, setTasks] = useState(initTasks)\r\n  useEffect(() => {\r\n    async function getValue() {\r\n      const value = await AsyncStorage.getItem(\"@tasks\")\r\n      if (value === null) {\r\n        console.log(\"Sorting tasks\" + JSON.stringify(tasks))\r\n        await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks))\r\n      } else {\r\n        let parsedValue = JSON.parse(value)\r\n        console.log(\"Retrieving tasks\")\r\n        console.log(parsedValue)\r\n        setTasks(JSON.parse(value))\r\n      }\r\n    }\r\n    getValue()\r\n  }, [])\r\n\r\n  return <Stack.Navigator initialRouteName='Todo List'>\r\n    <Stack.Screen name=\"Todo List\">\r\n      {(props) => (\r\n        <TodoScreen {...props} tasks={tasks} setTasks={setTasks}/>\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Details\">\r\n        {(props) => (\r\n        <DetailsScreen {...props} tasks={tasks} setTasks={setTasks}/>\r\n      )}\r\n    </Stack.Screen>\r\n  </Stack.Navigator>\r\n}\r\n\r\nfunction DetailsScreen({navigation, route, setTasks, tasks}) {\r\n  let {description, completed, key, relatedTasks} = route.params.getItem\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      title: description === \"\" ? \"No title\" : description,\r\n    })\r\n  }, [navigation])\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyCOntent: \"center\"}}>\r\n      <Text>Details Screen</Text>\r\n      <Text>{description}</Text>\r\n      {\r\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\r\n        <>\r\n        <Text>Related Tasks:</Text>\r\n        {tasks.filter(task => relatedTasks.includes(task.key))\r\n        .map(cTask => <Button key={cTask.key} title={cTask.description} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Details', {item:cTask}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n        : undefined}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TodoScreen({navigation, tasks, setTasks}) {\r\n  cacheFonts([FontAwesome.font])\r\n  let [input, setInput] = useState(\"\")\r\n  let updateTask = async (task) => {\r\n    console.log(task)\r\n    task.completed = !task.completed\r\n    setTasks({...tasks})\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\r\n  }\r\n  let addTask = async () => {\r\n    let maxKey = 0\r\n    tasks.forEach(task => {\r\n      if(task.key > maxKey) {\r\n        maxKey = task.key\r\n      }\r\n    })\r\n    let newTasks = [\r\n      ...tasks,\r\n      {\r\n        description: input,\r\n        completed: false,\r\n        key: maxKey + 1,\r\n      },\r\n    ]\r\n    setTasks(newTasks)\r\n    console.log(newTasks)\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\r\n    setInput(\"\")\r\n  }\r\n  let renderItem = ({item}) => {\r\n    return (\r\n      <View style={styles.horizontal}>\r\n        <CheckBox textStyle={item.completed ? {\r\n          textDecorationLine: \"line-through\",\r\n          textDecorationStyle: \"solid\",\r\n        } : undefined}\r\n        title={item.description}\r\n        checked={item.completed}\r\n        onPress={() => updateTask(item)}/>\r\n        <Button title=\"Details\" onPress={() => navigation.navigate(\"Details\", )}/>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}