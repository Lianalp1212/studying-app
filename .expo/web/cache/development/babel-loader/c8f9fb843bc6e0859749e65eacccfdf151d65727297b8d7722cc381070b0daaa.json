{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref4 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar exercises = [{\n  title: \"Push Ups\",\n  type: \"repetition\",\n  key: 1\n}, {\n  title: \"Running\",\n  type: \"duration\",\n  key: 2\n}, {\n  title: \"Plank\",\n  type: \"duration\",\n  key: 3\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Running Exercise\",\n        component: RunningScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Push Ups Exercise\",\n        component: PushUpsScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Plank Exercise\",\n        component: PlankScreen\n      })]\n    })\n  });\n}\nfunction PlankScreen() {\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: \"Plank\"\n    })\n  });\n}\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var renderExercise = function renderExercise(_ref2) {\n    var item = _ref2.item;\n    return _jsx(Button, {\n      title: exercises.title,\n      testID: exercises.title + \"-button\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"RunningScreen\", {\n          name: \"Running\"\n        });\n      }\n    });\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.heading,\n        children: \"Please select an exercise\"\n      }), _jsx(FlatList, {\n        data: exercises,\n        renderItem: renderExercise,\n        keyExtractor: function keyExtractor(exercise) {\n          return exercise.key;\n        }\n      })]\n    })\n  });\n}\nfunction RunningScreen() {\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Running\"\n    }), _jsx(Button, {\n      testID: \"register\",\n      title: \"Register\",\n      style: styles.button\n    })]\n  });\n}\nfunction PushUpsScreen() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    exercise = _useState2[0],\n    setExercise = _useState2[1];\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      children: function children(props) {\n        return _jsx(HomeScreen, _objectSpread(_objectSpread({}, props), {}, {\n          exercise: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Running\",\n      children: function children(props) {\n        return _jsx(RunningScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsxs(Stack.Screen, {\n      name: \"Push Ups\",\n      children: [function (props) {\n        return _jsx(PushUpsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }, _jsx(Stack.Screen, {\n        name: \"Plank\",\n        children: function children(props) {\n          return _jsx(PlankScreen, _objectSpread(_objectSpread({}, props), {}, {\n            tasks: tasks,\n            setTasks: setTasks\n          }));\n        }\n      })]\n    })]\n  });\n}\nfunction DetailsScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    route = _ref3.route,\n    setTasks = _ref3.setTasks,\n    tasks = _ref3.tasks;\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    completed = _route$params$item.completed,\n    key = _route$params$item.key,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    padding: 10\n  },\n  space: {\n    height: 10\n  },\n  heading: {\n    fontSize: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    padding: 20\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","FontAwesome","useEffect","useState","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","React","SafeAreaView","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref4","font","loadAsync","_x2","exercises","title","type","key","App","children","Navigator","Screen","name","component","HomeScreen","RunningScreen","PushUpsScreen","PlankScreen","_ref","navigation","renderExercise","_ref2","item","testID","style","styles","button","onPress","navigate","heading","data","renderItem","keyExtractor","exercise","_useState","_useState2","_slicedToArray","setExercise","initialRouteName","props","_objectSpread","tasks","setTasks","DetailsScreen","_ref3","route","_route$params$item","params","description","completed","relatedTasks","setOptions","flex","alignItems","justifyContent","undefined","length","filter","task","includes","cTask","dispatch","push","create","container","backgroundColor","horizontal","flexDirection","padding","space","height","fontSize","textAlign"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab9/App.js"],"sourcesContent":["// phone number regex reference https://stackoverflow.com/questions/18375929/validate-phone-number-using-javascript\r\n// used ex7 solution as a base\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\nimport { SafeAreaView } from 'react-native-safe-area-context';\r\n\r\nconst Tab = createBottomTabNavigator()\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nlet exercises = [\r\n  {title: \"Push Ups\", type: \"repetition\", key: 1},\r\n  {title: \"Running\", type: \"duration\", key: 2},\r\n  {title: \"Plank\", type: \"duration\", key: 3}\r\n]\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>{\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Home\" component={HomeScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Running Exercise\" component={RunningScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Push Ups Exercise\" component={PushUpsScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Plank Exercise\" component={PlankScreen}></Tab.Screen>   \r\n      </Tab.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction PlankScreen() {\r\n  return (\r\n    <View>\r\n      <Text>Plank</Text>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction HomeScreen({navigation}) {\r\n  let renderExercise = ({item}) => \r\n    <Button title={exercises.title} testID={`${exercises.title}-button`} style={styles.button}\r\n    onPress={() => navigation.navigate(\"RunningScreen\", {name: \"Running\"})} />\r\n  return (\r\n    <SafeAreaView>\r\n      <View>\r\n        <Text style={styles.heading}>Please select an exercise</Text>\r\n          <FlatList data={exercises}\r\n            renderItem={renderExercise}\r\n            keyExtractor={(exercise) =>exercise.key}>\r\n          </FlatList>\r\n      </View>\r\n    </SafeAreaView>\r\n  )\r\n}\r\n\r\nfunction RunningScreen() {\r\n\r\n  return (\r\n    <View>\r\n      <Text>Running</Text>\r\n      <Button testID=\"register\" title=\"Register\" \r\n      style={styles.button}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction PushUpsScreen() {\r\nlet [exercise, setExercise] = useState(\"\")\r\n  return <Stack.Navigator initialRouteName=\"Home\">\r\n    <Stack.Screen name=\"Home\">\r\n      {(props) => (\r\n        <HomeScreen {...props} exercise={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Running\">\r\n        {(props) => (\r\n        <RunningScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Push Ups\">\r\n        {(props) => (\r\n        <PushUpsScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n      <Stack.Screen name=\"Plank\">\r\n        {(props) => (\r\n        <PlankScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n    </Stack.Screen>\r\n  </Stack.Navigator>\r\n}\r\n\r\nfunction DetailsScreen({navigation, route, setTasks, tasks}) {\r\n  let {description, completed, key, relatedTasks} = route.params.item\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      title: description === \"\" ? \"No title\" : description,\r\n    })\r\n  }, [navigation])\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <Text>Details Screen</Text>\r\n      <Text>{description}</Text>\r\n      {\r\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\r\n        <>\r\n        <Text>Related Tasks:</Text>\r\n        {tasks.filter(task => relatedTasks.includes(task.key))\r\n        .map(cTask => <Button key={cTask.key} title={cTask.description} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Details', {item:cTask}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n      : undefined}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n  heading: {\r\n    fontSize: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    padding: 20\r\n  }\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}