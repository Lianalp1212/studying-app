{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref6 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Dishes\",\n  key: \"1\",\n  completed: true,\n  relatedTasks: [2]\n}, {\n  description: \"Homework\",\n  key: \"2\",\n  completed: true,\n  relatedTasks: [3]\n}, {\n  description: \"Walk dog\",\n  key: \"3\",\n  completed: true,\n  relatedTasks: [1]\n}];\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"login\",\n        component: LoginScreen\n      }), _jsx(Tab.Screen, {\n        name: \"register\",\n        component: RegisterScreen\n      }), _jsx(Tab.Screen, {\n        name: \"todo\",\n        component: TodoHomeScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nfunction LoginScreen() {\n  return _jsx(Text, {\n    children: \"Sample\"\n  });\n}\nfunction RegisterScreen() {\n  return _jsx(Text, {\n    children: \"Sample2\"\n  });\n}\nfunction TodoHomeScreen() {\n  var _useState = useState(initTasks),\n    _useState2 = _slicedToArray(_useState, 2),\n    tasks = _useState2[0],\n    setTasks = _useState2[1];\n  useEffect(function () {\n    function getValue() {\n      return _getValue.apply(this, arguments);\n    }\n    function _getValue() {\n      _getValue = _asyncToGenerator(function* () {\n        var value = yield AsyncStorage.getItem(\"@tasks\");\n        if (value === null) {\n          console.log(\"Sorting tasks\" + JSON.stringify(tasks));\n          yield AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n        } else {\n          var parsedValue = JSON.parse(value);\n          console.log(\"Retrieving tasks\");\n          console.log(parsedValue);\n          setTasks(JSON.parse(value));\n        }\n      });\n      return _getValue.apply(this, arguments);\n    }\n    getValue();\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Todo List\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Todo List\",\n      children: function children(props) {\n        return _jsx(TodoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      children: function children(props) {\n        return _jsx(DetailsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    })]\n  });\n}\nfunction DetailsScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route,\n    setTasks = _ref.setTasks,\n    tasks = _ref.tasks;\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    completed = _route$params$item.completed,\n    key = _route$params$item.key,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyCOntent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nfunction TodoScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    tasks = _ref2.tasks,\n    setTasks = _ref2.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    input = _useState4[0],\n    setInput = _useState4[1];\n  var updateTask = function () {\n    var _ref3 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_objectSpread({}, tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref5) {\n    var item = _ref5.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\", {\n            item: item\n          });\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(Input, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  hotizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","FontAwesome","useEffect","useState","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref6","font","loadAsync","_x3","initTasks","description","key","completed","relatedTasks","App","children","Navigator","Screen","name","component","LoginScreen","RegisterScreen","TodoHomeScreen","options","headerShown","_useState","_useState2","_slicedToArray","tasks","setTasks","getValue","_getValue","value","getItem","console","log","JSON","stringify","setItem","parsedValue","parse","initialRouteName","props","TodoScreen","_objectSpread","DetailsScreen","_ref","navigation","route","_route$params$item","params","item","setOptions","title","style","flex","alignItems","justifyCOntent","undefined","length","filter","task","includes","cTask","onPress","dispatch","push","_ref2","_useState3","_useState4","input","setInput","updateTask","_ref3","_x2","addTask","_ref4","maxKey","forEach","newTasks","concat","_toConsumableArray","renderItem","_ref5","styles","horizontal","textStyle","textDecorationLine","textDecorationStyle","checked","navigate","container","data","onChangeText","placeholder","create","backgroundColor","justifyContent","hotizontal","flexDirection","padding","button"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/unit2/lab8/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\n\r\nconst Tab = createBottomTabNavigator()\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nlet initTasks = [\r\n  {description: \"Dishes\", key: \"1\", completed: true, relatedTasks: [2]},\r\n  {description: \"Homework\", key: \"2\", completed: true, relatedTasks: [3]},\r\n  {description: \"Walk dog\", key: \"3\", completed: true, relatedTasks: [1]}\r\n]\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>{\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"login\" component={LoginScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"register\" component={RegisterScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"todo\" component={TodoHomeScreen} options={{ headerShown: false }}></Tab.Screen>\r\n      </Tab.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction LoginScreen() {\r\n  return <Text>Sample</Text>\r\n}\r\n\r\nfunction RegisterScreen() {\r\n  return <Text>Sample2</Text>\r\n}\r\n\r\nfunction TodoHomeScreen() {\r\n  let [tasks, setTasks] = useState(initTasks)\r\n  useEffect(() => {\r\n    async function getValue() {\r\n      const value = await AsyncStorage.getItem(\"@tasks\")\r\n      if (value === null) {\r\n        console.log(\"Sorting tasks\" + JSON.stringify(tasks))\r\n        await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks))\r\n      } else {\r\n        let parsedValue = JSON.parse(value)\r\n        console.log(\"Retrieving tasks\")\r\n        console.log(parsedValue)\r\n        setTasks(JSON.parse(value))\r\n      }\r\n    }\r\n    getValue()\r\n  }, [])\r\n\r\n  return <Stack.Navigator initialRouteName=\"Todo List\">\r\n    <Stack.Screen name=\"Todo List\">\r\n      {(props) => (\r\n        <TodoScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Details\">\r\n        {(props) => (\r\n        <DetailsScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n  </Stack.Navigator>\r\n}\r\n\r\nfunction DetailsScreen({navigation, route, setTasks, tasks}) {\r\n  let {description, completed, key, relatedTasks} = route.params.item\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      title: description === \"\" ? \"No title\" : description,\r\n    })\r\n  }, [navigation])\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyCOntent: \"center\"}}>\r\n      <Text>Details Screen</Text>\r\n      <Text>{description}</Text>\r\n      {\r\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\r\n        <>\r\n        <Text>Related Tasks:</Text>\r\n        {tasks.filter(task => relatedTasks.includes(task.key))\r\n        .map(cTask => <Button key={cTask.key} title={cTask.description} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Details', {item:cTask}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n      : undefined}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TodoScreen({navigation, tasks, setTasks}) {\r\n  cacheFonts([FontAwesome.font])\r\n  let [input, setInput] = useState(\"\")\r\n  let updateTask = async (task) => {\r\n    console.log(task)\r\n    task.completed = !task.completed\r\n    setTasks({...tasks})\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\r\n  }\r\n  let addTask = async () => {\r\n    let maxKey = 0\r\n    tasks.forEach(task => {\r\n      if(task.key > maxKey) {\r\n        maxKey = task.key\r\n      }\r\n    })\r\n    let newTasks = [\r\n      ...tasks,\r\n      {\r\n        description: input,\r\n        completed: false,\r\n        key: maxKey + 1,\r\n      },\r\n    ]\r\n    setTasks(newTasks)\r\n    console.log(newTasks)\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\r\n    setInput(\"\")\r\n  }\r\n  let renderItem = ({item}) => {\r\n    return (\r\n      <View style={styles.horizontal}>\r\n        <CheckBox textStyle={item.completed ? {\r\n          textDecorationLine: \"line-through\",\r\n          textDecorationStyle: \"solid\",\r\n        } : undefined}\r\n        title={item.description}\r\n        checked={item.completed}\r\n        onPress={() => updateTask(item)}/>\r\n        <Button title=\"Details\" onPress={() => navigation.navigate(\"Details\", {item})}/>\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n    <View style={[styles.container]}>\r\n      <StatusBar style=\"auto\" />\r\n        <FlatList data={tasks} renderItem={renderItem} />\r\n        <View style={[styles.horizontal]}>\r\n          <Input\r\n            onChangeText={setInput}\r\n            value={input}\r\n            placeholder=\"New task...\">\r\n          </Input>\r\n          <Button title=\"Add Task\" onPress={addTask} />\r\n        </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  hotizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#DDDDDD',\r\n    padding: 10,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}