{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\nimport * as Font from 'expo-font';\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\nimport { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StackActions } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nfunction cacheFonts(_x) {\n  return _cacheFonts.apply(this, arguments);\n}\nfunction _cacheFonts() {\n  _cacheFonts = _asyncToGenerator(function* (fonts) {\n    return fonts.map(function () {\n      var _ref7 = _asyncToGenerator(function* (font) {\n        return yield Font.loadAsync(font);\n      });\n      return function (_x3) {\n        return _ref7.apply(this, arguments);\n      };\n    }());\n  });\n  return _cacheFonts.apply(this, arguments);\n}\nvar initTasks = [{\n  description: \"Dishes\",\n  key: \"1\",\n  completed: true,\n  relatedTasks: [2]\n}, {\n  description: \"Homework\",\n  key: \"2\",\n  completed: true,\n  relatedTasks: [3]\n}, {\n  description: \"Walk dog\",\n  key: \"3\",\n  completed: true,\n  relatedTasks: [1]\n}];\nvar loginInfo = [];\nfunction AsyncLocalStorage() {\n  return _AsyncLocalStorage.apply(this, arguments);\n}\nfunction _AsyncLocalStorage() {\n  _AsyncLocalStorage = _asyncToGenerator(function* () {\n    var key = \"loginData\";\n    loginInfo = [{\n      username: \"test\",\n      password: \"Test1@\"\n    }, {\n      username: \"aussieaussie\",\n      password: \"0Ioi@1\"\n    }];\n    try {\n      var storedData = yield AsyncStorage.getItem(key);\n      var data = JSON.parse(storedData);\n      if (data) {\n        var username = data.username,\n          _password = data.password;\n        var authenticated = loginInfo.some(function (info) {\n          return info.username === username && info.password === _password;\n        });\n        if (authenticated) {\n          navigation.navigate(\"Todo\", {\n            name: \"Todo\"\n          });\n        } else {\n          console.log(\"Error: username or password not found\");\n        }\n      } else {\n        console.log(\"Error: missing input\");\n      }\n    } catch (error) {\n      console.log(\"Error\");\n    }\n  });\n  return _AsyncLocalStorage.apply(this, arguments);\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      children: [_jsx(Tab.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Register\",\n        component: RegisterScreen\n      }), _jsx(Tab.Screen, {\n        name: \"Todo\",\n        component: TodoHomeScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nfunction LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Sample\"\n    }), _jsx(Input, {\n      testID: \"login-username\",\n      placeholder: \"Username\",\n      onChangeText: setUnInput,\n      value: unInput\n    }), _jsx(Input, {\n      testID: \"login-password\",\n      placeholder: \"Password\",\n      onChangeText: setPInput,\n      value: pInput\n    }), _jsx(Button, {\n      testID: \"login-button\",\n      title: \"Login\",\n      style: styles.button,\n      onPress: AsyncLocalStorage\n    }), _jsx(View, {\n      style: styles.space\n    }), _jsx(Button, {\n      testID: \"register-button\",\n      title: \"Register\",\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.navigate(\"Register\", {\n          name: \"Register\"\n        });\n      }\n    })]\n  });\n}\nfunction RegisterScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    checkNews = _useState2[0],\n    setCheckNews = _useState2[1];\n  var input = \"hello\";\n  function validate() {\n    switch (input) {\n      case 'firstName':\n        console.log(\"Validating first name...\");\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(firstName)) {\n          setLastNameError(\"Invalid last name\");\n        } else {\n          setFirstNameError(\"\");\n        }\n        break;\n      case 'lastName':\n        console.log(\"Validating last name...\");\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(lastName)) {\n          setLastNameError(\"Invalid last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n        break;\n      case 'passWord':\n        console.log(\"Validating password...\");\n        if (!/^([a-zA-Z\\d\\W]){5,}/.test(password)) {\n          setPasswordError(\"Invalid password\");\n        } else {\n          setPasswordError(\"\");\n        }\n        break;\n      case 'eMail':\n        console.log(\"Validating email...\");\n        if (!/.+@.+\\..{2,3}/.test(email)) {\n          setEmailError(\"Invalid email\");\n        } else {\n          setEmailError(\"\");\n        }\n        break;\n      case 'phone':\n        console.log(\"Validating phone number...\");\n        if (!/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/.test(phoneNumber)) {\n          setPhoneError(\"Invalid phone number\");\n        } else {\n          setPhoneError(\"\");\n        }\n        break;\n      case 'zipCode':\n        console.log(\"Validating zip code...\");\n        if (!/^\\d{5}/.test(zipCode)) {\n          setEmailError(\"Invalid zip code\");\n        } else {\n          setZipError(\"\");\n        }\n        break;\n      default:\n        console.log(\"Error\");\n    }\n  }\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Sample2\"\n    }), _jsx(Input, {\n      name: \"firstName\",\n      testID: \"firstname\",\n      placeholder: \"First Name\",\n      onBLur: validate,\n      errorMessage: \"Error: first name must include letters or symbols only\"\n    }), _jsx(Input, {\n      name: \"lastName\",\n      testID: \"lastname\",\n      placeholder: \"Last Name\",\n      errorMessage: \"Error: last name must include letters or symbols only\"\n    }), _jsx(Input, {\n      name: \"userName\",\n      testID: \"username\",\n      placeholder: \"Username\"\n    }), _jsx(Input, {\n      name: \"passWord\",\n      testID: \"password\",\n      placeholder: \"Password\"\n    }), _jsx(Input, {\n      name: \"passWord\",\n      testID: \"confirmpassword\",\n      placeholder: \"Confirm Password\",\n      errorMessage: \"Error: password must include an upper case and lower case character, one number, and one symbol\"\n    }), _jsx(Input, {\n      name: \"eMail\",\n      testID: \"email\",\n      placeholder: \"Email\",\n      errorMessage: \"Error: email must include an @ and a .\"\n    }), _jsx(Input, {\n      name: \"phone\",\n      testID: \"phonenumber\",\n      placeholder: \"Phone Number\",\n      errorMessage: \"Error: phone number must be in the (xxx) xxx-xxxx format using digits only\"\n    }), _jsx(Input, {\n      name: \"zipCode\",\n      testID: \"zip\",\n      placeholder: \"Zip Code\",\n      errorMessage: \"Error: zip code must be five digits\"\n    }), _jsx(CheckBox, {\n      testID: \"newsletter\",\n      title: \"Sign up for our newsletter\",\n      checked: checkNews,\n      onPress: function onPress() {\n        return setCheckNews(!checkNews);\n      }\n    }), _jsx(Button, {\n      testID: \"register\",\n      title: \"Register\",\n      style: styles.button,\n      disabled: true\n    })]\n  });\n}\nfunction TodoHomeScreen() {\n  var _useState3 = useState(initTasks),\n    _useState4 = _slicedToArray(_useState3, 2),\n    tasks = _useState4[0],\n    setTasks = _useState4[1];\n  useEffect(function () {\n    function getValue() {\n      return _getValue.apply(this, arguments);\n    }\n    function _getValue() {\n      _getValue = _asyncToGenerator(function* () {\n        var value = yield AsyncStorage.getItem(\"@tasks\");\n        if (value === null) {\n          console.log(\"Sorting tasks\" + JSON.stringify(tasks));\n          yield AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks));\n        } else {\n          var parsedValue = JSON.parse(value);\n          console.log(\"Retrieving tasks\");\n          console.log(parsedValue);\n          setTasks(JSON.parse(value));\n        }\n      });\n      return _getValue.apply(this, arguments);\n    }\n    getValue();\n  }, []);\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Todo List\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Todo List\",\n      children: function children(props) {\n        return _jsx(TodoScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Details\",\n      children: function children(props) {\n        return _jsx(DetailsScreen, _objectSpread(_objectSpread({}, props), {}, {\n          tasks: tasks,\n          setTasks: setTasks\n        }));\n      }\n    })]\n  });\n}\nfunction DetailsScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    route = _ref2.route,\n    setTasks = _ref2.setTasks,\n    tasks = _ref2.tasks;\n  var _route$params$item = route.params.item,\n    description = _route$params$item.description,\n    completed = _route$params$item.completed,\n    key = _route$params$item.key,\n    relatedTasks = _route$params$item.relatedTasks;\n  useEffect(function () {\n    navigation.setOptions({\n      title: description === \"\" ? \"No title\" : description\n    });\n  }, [navigation]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [_jsx(Text, {\n      children: \"Details Screen\"\n    }), _jsx(Text, {\n      children: description\n    }), relatedTasks !== undefined && relatedTasks.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        children: \"Related Tasks:\"\n      }), tasks.filter(function (task) {\n        return relatedTasks.includes(task.key);\n      }).map(function (cTask) {\n        return _jsx(Button, {\n          title: cTask.description,\n          onPress: function onPress() {\n            navigation.dispatch(StackActions.push('Details', {\n              item: cTask\n            }));\n          }\n        }, cTask.key);\n      })]\n    }) : undefined]\n  });\n}\nfunction TodoScreen(_ref3) {\n  var navigation = _ref3.navigation,\n    tasks = _ref3.tasks,\n    setTasks = _ref3.setTasks;\n  cacheFonts([FontAwesome.font]);\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    input = _useState6[0],\n    setInput = _useState6[1];\n  var updateTask = function () {\n    var _ref4 = _asyncToGenerator(function* (task) {\n      console.log(task);\n      task.completed = !task.completed;\n      setTasks(_toConsumableArray(tasks));\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(tasks));\n    });\n    return function updateTask(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var addTask = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      var maxKey = 0;\n      tasks.forEach(function (task) {\n        if (task.key > maxKey) {\n          maxKey = task.key;\n        }\n      });\n      var newTasks = [].concat(_toConsumableArray(tasks), [{\n        description: input,\n        completed: false,\n        key: maxKey + 1\n      }]);\n      setTasks(newTasks);\n      console.log(newTasks);\n      yield AsyncStorage.setItem('@tasks', JSON.stringify(newTasks));\n      setInput(\"\");\n    });\n    return function addTask() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var renderItem = function renderItem(_ref6) {\n    var item = _ref6.item;\n    return _jsxs(View, {\n      style: styles.horizontal,\n      children: [_jsx(CheckBox, {\n        textStyle: item.completed ? {\n          textDecorationLine: \"line-through\",\n          textDecorationStyle: \"solid\"\n        } : undefined,\n        title: item.description,\n        checked: item.completed,\n        onPress: function onPress() {\n          return updateTask(item);\n        }\n      }), _jsx(Button, {\n        title: \"Details\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Details\", {\n            item: item\n          });\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: [styles.container],\n    children: [_jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(FlatList, {\n      data: tasks,\n      renderItem: renderItem\n    }), _jsxs(View, {\n      style: [styles.horizontal],\n      children: [_jsx(Input, {\n        onChangeText: setInput,\n        value: input,\n        placeholder: \"New task...\"\n      }), _jsx(Button, {\n        title: \"Add Task\",\n        onPress: addTask\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  horizontal: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  button: {\n    alignItems: 'center',\n    backgroundColor: '#DDDDDD',\n    padding: 10\n  },\n  space: {\n    height: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","FlatList","Button","CheckBox","Input","Text","Font","FontAwesome","useEffect","useState","NavigationContainer","createNativeStackNavigator","StackActions","AsyncStorage","createBottomTabNavigator","React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tab","Stack","cacheFonts","_x","_cacheFonts","apply","arguments","_asyncToGenerator","fonts","map","_ref7","font","loadAsync","_x3","initTasks","description","key","completed","relatedTasks","loginInfo","AsyncLocalStorage","_AsyncLocalStorage","username","password","storedData","getItem","data","JSON","parse","authenticated","some","info","navigation","navigate","name","console","log","error","App","children","Navigator","Screen","component","LoginScreen","RegisterScreen","TodoHomeScreen","options","headerShown","_ref","testID","placeholder","onChangeText","setUnInput","value","unInput","setPInput","pInput","title","style","styles","button","onPress","space","_useState","_useState2","_slicedToArray","checkNews","setCheckNews","input","validate","test","firstName","setLastNameError","setFirstNameError","lastName","setPasswordError","email","setEmailError","phoneNumber","setPhoneError","zipCode","setZipError","onBLur","errorMessage","checked","disabled","_useState3","_useState4","tasks","setTasks","getValue","_getValue","stringify","setItem","parsedValue","initialRouteName","props","TodoScreen","_objectSpread","DetailsScreen","_ref2","route","_route$params$item","params","item","setOptions","flex","alignItems","justifyContent","undefined","length","filter","task","includes","cTask","dispatch","push","_ref3","_useState5","_useState6","setInput","updateTask","_ref4","_toConsumableArray","_x2","addTask","_ref5","maxKey","forEach","newTasks","concat","renderItem","_ref6","horizontal","textStyle","textDecorationLine","textDecorationStyle","container","create","backgroundColor","flexDirection","padding","height"],"sources":["C:/Users/5duck/github-classroom/UCF-GaiM/dig4639-s23-main-Lianalp1212/lab8/App.js"],"sourcesContent":["// phone number regex reference https://stackoverflow.com/questions/18375929/validate-phone-number-using-javascript\r\n// used ex7 solution as a base\r\n\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View, FlatList } from 'react-native';\r\nimport { Button, CheckBox, Input, Text } from '@rneui/themed';\r\nimport * as Font from 'expo-font';\r\nimport FontAwesome from '@expo/vector-icons/FontAwesome';\r\nimport { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StackActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport * as React from 'react';\r\n\r\nconst Tab = createBottomTabNavigator()\r\nconst Stack = createNativeStackNavigator()\r\n\r\nasync function cacheFonts(fonts) {\r\n  return fonts.map(async (font) => await Font.loadAsync(font))\r\n}\r\n\r\nlet initTasks = [\r\n  {description: \"Dishes\", key: \"1\", completed: true, relatedTasks: [2]},\r\n  {description: \"Homework\", key: \"2\", completed: true, relatedTasks: [3]},\r\n  {description: \"Walk dog\", key: \"3\", completed: true, relatedTasks: [1]}\r\n]\r\n\r\nlet loginInfo = []\r\n\r\nasync function AsyncLocalStorage() {\r\n  const key = \"loginData\"\r\n  loginInfo = [\r\n  {username: \"test\", password: \"Test1@\"},\r\n  {username: \"aussieaussie\", password: \"0Ioi@1\"}\r\n  ]\r\n\r\ntry {\r\n  const storedData = await AsyncStorage.getItem(key)\r\n  const data = JSON.parse(storedData)\r\n\r\n  if (data) {\r\n    const { username, password } = data\r\n    const authenticated = loginInfo.some((info) =>\r\n    info.username === username && info.password === password)\r\n\r\n  if (authenticated) {\r\n    navigation.navigate(\"Todo\", {name: \"Todo\"})\r\n    } else {\r\n      console.log (\"Error: username or password not found\")\r\n    }\r\n    } else {\r\n      console.log (\"Error: missing input\")\r\n    }\r\n  } catch (error) {\r\n      console.log (\"Error\")\r\n}\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>{\r\n      <Tab.Navigator>\r\n        <Tab.Screen name=\"Login\" component={LoginScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Register\" component={RegisterScreen}></Tab.Screen>\r\n        <Tab.Screen name=\"Todo\" component={TodoHomeScreen} options={{ headerShown: false }}></Tab.Screen>\r\n      </Tab.Navigator>\r\n    }</NavigationContainer>\r\n  );\r\n}\r\n\r\nfunction LoginScreen({navigation}) {\r\n\r\n  return (\r\n    <View>\r\n      <Text>Sample</Text>\r\n      <Input\r\n        testID=\"login-username\"\r\n        placeholder=\"Username\"\r\n        onChangeText={setUnInput}\r\n        value={unInput}>\r\n      </Input>\r\n      <Input\r\n        testID=\"login-password\"\r\n        placeholder=\"Password\"\r\n        onChangeText={setPInput}\r\n        value={pInput}>\r\n      </Input>\r\n      <Button testID=\"login-button\" title=\"Login\" style={styles.button}\r\n      onPress={AsyncLocalStorage}/>\r\n      <View style={styles.space} />\r\n      <Button testID=\"register-button\" title=\"Register\" style={styles.button}\r\n      onPress={() => navigation.navigate(\"Register\", {name: \"Register\"})} />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction RegisterScreen() {\r\n  let [checkNews, setCheckNews] = useState(false)\r\n  let input= \"hello\"\r\n  function validate() {\r\n    switch (input) {\r\n      case 'firstName':\r\n        console.log(\"Validating first name...\")\r\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(firstName)) {\r\n          setLastNameError(\"Invalid last name\")\r\n        } else {\r\n          setFirstNameError(\"\")\r\n        }\r\n      break\r\n      case 'lastName':\r\n        console.log(\"Validating last name...\")\r\n        if (!/^[^\\d=?\\\\/@#%^&*()]+$/.test(lastName)) {\r\n          setLastNameError(\"Invalid last name\")\r\n        } else {\r\n          setLastNameError(\"\")\r\n        }\r\n      break\r\n      case 'passWord':\r\n        console.log(\"Validating password...\")\r\n          if (!/^([a-zA-Z\\d\\W]){5,}/.test(password)) {\r\n          setPasswordError(\"Invalid password\")\r\n        } else {\r\n          setPasswordError(\"\")\r\n        }\r\n      break\r\n      case 'eMail':\r\n        console.log(\"Validating email...\")\r\n          if (!/.+@.+\\..{2,3}/.test(email)) {\r\n          setEmailError(\"Invalid email\")\r\n        } else {\r\n          setEmailError(\"\")\r\n        }\r\n      break\r\n      case 'phone':\r\n        console.log(\"Validating phone number...\")\r\n          if (!/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}/.test(phoneNumber)) {\r\n          setPhoneError(\"Invalid phone number\")\r\n        } else {\r\n          setPhoneError(\"\")\r\n        }\r\n      break\r\n      case 'zipCode':\r\n        console.log(\"Validating zip code...\")\r\n          if (!/^\\d{5}/.test(zipCode)) {\r\n          setEmailError(\"Invalid zip code\")\r\n        } else {\r\n          setZipError(\"\")\r\n        }\r\n      break\r\n      default:\r\n        console.log(\"Error\")\r\n    }\r\n  }\r\n  return (\r\n    <View>\r\n      <Text>Sample2</Text>\r\n      <Input\r\n        name=\"firstName\"\r\n        testID=\"firstname\"\r\n        placeholder=\"First Name\"\r\n        onBLur={validate}\r\n        errorMessage=\"Error: first name must include letters or symbols only\">\r\n      </Input>\r\n      <Input\r\n        name=\"lastName\"\r\n        testID=\"lastname\"\r\n        placeholder=\"Last Name\"\r\n        errorMessage=\"Error: last name must include letters or symbols only\">\r\n      </Input>\r\n      <Input\r\n        name=\"userName\"\r\n        testID=\"username\"\r\n        placeholder=\"Username\">\r\n      </Input>\r\n      <Input\r\n        name=\"passWord\"\r\n        testID=\"password\"\r\n        placeholder=\"Password\">\r\n      </Input>\r\n      <Input\r\n        name=\"passWord\"\r\n        testID=\"confirmpassword\"\r\n        placeholder=\"Confirm Password\"\r\n        errorMessage=\"Error: password must include an upper case and lower case character, one number, and one symbol\">\r\n      </Input>\r\n      <Input\r\n        name=\"eMail\"\r\n        testID=\"email\"\r\n        placeholder=\"Email\"\r\n        errorMessage=\"Error: email must include an @ and a .\">\r\n      </Input>\r\n      <Input\r\n        name=\"phone\"\r\n        testID=\"phonenumber\"\r\n        placeholder=\"Phone Number\"\r\n        errorMessage=\"Error: phone number must be in the (xxx) xxx-xxxx format using digits only\">\r\n      </Input>\r\n      <Input\r\n        name=\"zipCode\"\r\n        testID=\"zip\"\r\n        placeholder=\"Zip Code\"\r\n        errorMessage=\"Error: zip code must be five digits\">\r\n      </Input>\r\n      <CheckBox\r\n        testID=\"newsletter\"\r\n        title=\"Sign up for our newsletter\"\r\n        checked={checkNews}\r\n        onPress={() => setCheckNews(!checkNews)}>\r\n      </CheckBox>\r\n      <Button testID=\"register\" title=\"Register\" \r\n      style={styles.button} disabled={true} />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TodoHomeScreen() {\r\n  let [tasks, setTasks] = useState(initTasks)\r\n  useEffect(() => {\r\n    async function getValue() {\r\n      const value = await AsyncStorage.getItem(\"@tasks\")\r\n      if (value === null) {\r\n        console.log(\"Sorting tasks\" + JSON.stringify(tasks))\r\n        await AsyncStorage.setItem(\"@tasks\", JSON.stringify(tasks))\r\n      } else {\r\n        let parsedValue = JSON.parse(value)\r\n        console.log(\"Retrieving tasks\")\r\n        console.log(parsedValue)\r\n        setTasks(JSON.parse(value))\r\n      }\r\n    }\r\n    getValue()\r\n  }, [])\r\n\r\n  return <Stack.Navigator initialRouteName=\"Todo List\">\r\n    <Stack.Screen name=\"Todo List\">\r\n      {(props) => (\r\n        <TodoScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n    <Stack.Screen name=\"Details\">\r\n        {(props) => (\r\n        <DetailsScreen {...props} tasks={tasks} setTasks={setTasks} />\r\n      )}\r\n    </Stack.Screen>\r\n  </Stack.Navigator>\r\n}\r\n\r\nfunction DetailsScreen({navigation, route, setTasks, tasks}) {\r\n  let {description, completed, key, relatedTasks} = route.params.item\r\n  useEffect(() => {\r\n    navigation.setOptions({\r\n      title: description === \"\" ? \"No title\" : description,\r\n    })\r\n  }, [navigation])\r\n  return (\r\n    <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <Text>Details Screen</Text>\r\n      <Text>{description}</Text>\r\n      {\r\n        relatedTasks !== undefined && relatedTasks.length > 0 ?\r\n        <>\r\n        <Text>Related Tasks:</Text>\r\n        {tasks.filter(task => relatedTasks.includes(task.key))\r\n        .map(cTask => <Button key={cTask.key} title={cTask.description} \r\n          onPress={() => {\r\n            navigation.dispatch(StackActions.push('Details', {item:cTask}));\r\n          }}\r\n          />)\r\n          }\r\n        </>\r\n      : undefined}\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TodoScreen({navigation, tasks, setTasks}) {\r\n  cacheFonts([FontAwesome.font])\r\n  let [input, setInput] = useState(\"\")\r\n  let updateTask = async (task) => {\r\n    console.log(task)\r\n    task.completed = !task.completed\r\n    setTasks([...tasks])\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(tasks))\r\n  }\r\n  let addTask = async () => {\r\n    let maxKey = 0\r\n    tasks.forEach(task => {\r\n      if(task.key > maxKey) {\r\n        maxKey = task.key\r\n      }\r\n    })\r\n    let newTasks = [\r\n      ...tasks,\r\n      {\r\n        description: input,\r\n        completed: false,\r\n        key: maxKey + 1,\r\n      },\r\n    ]\r\n    setTasks(newTasks)\r\n    console.log(newTasks)\r\n    await AsyncStorage.setItem('@tasks', JSON.stringify(newTasks))\r\n    setInput(\"\")\r\n  }\r\n  let renderItem = ({item}) => {\r\n    return (\r\n      <View style={styles.horizontal}>\r\n        <CheckBox textStyle={item.completed ? {\r\n          textDecorationLine: \"line-through\",\r\n          textDecorationStyle: \"solid\",\r\n        } : undefined}\r\n        title={item.description}\r\n        checked={item.completed}\r\n        onPress={() => updateTask(item)}/>\r\n        <Button title=\"Details\" onPress={() => navigation.navigate(\"Details\", {item})}/>\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n    <View style={[styles.container]}>\r\n      <StatusBar style=\"auto\" />\r\n        <FlatList data={tasks} renderItem={renderItem} />\r\n        <View style={[styles.horizontal]}>\r\n          <Input\r\n            onChangeText={setInput}\r\n            value={input}\r\n            placeholder=\"New task...\">\r\n          </Input>\r\n          <Button title=\"Add Task\" onPress={addTask} />\r\n        </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1, \r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  horizontal: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    backgroundColor: '#DDDDDD',\r\n    padding: 10,\r\n  },\r\n  space: {\r\n    height: 10\r\n  },\r\n})\r\n"],"mappings":";;;;;;AAGA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAE5C,SAASC,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AAC7D,OAAO,KAAKC,IAAI,MAAM,WAAW;AACjC,OAAOC,WAAW,MAAM,gCAAgC;AACxD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,YAAY,QAAQ,0BAA0B;AACvD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,IAAMC,GAAG,GAAGR,wBAAwB,EAAE;AACtC,IAAMS,KAAK,GAAGZ,0BAA0B,EAAE;AAAA,SAE3Ba,UAAUA,CAAAC,EAAA;EAAA,OAAAC,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,YAAA;EAAAA,WAAA,GAAAG,iBAAA,CAAzB,WAA0BC,KAAK,EAAE;IAC/B,OAAOA,KAAK,CAACC,GAAG;MAAA,IAAAC,KAAA,GAAAH,iBAAA,CAAC,WAAOI,IAAI;QAAA,aAAW3B,IAAI,CAAC4B,SAAS,CAACD,IAAI,CAAC;MAAA;MAAA,iBAAAE,GAAA;QAAA,OAAAH,KAAA,CAAAL,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC;EAC9D,CAAC;EAAA,OAAAF,WAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,IAAIQ,SAAS,GAAG,CACd;EAACC,WAAW,EAAE,QAAQ;EAAEC,GAAG,EAAE,GAAG;EAAEC,SAAS,EAAE,IAAI;EAAEC,YAAY,EAAE,CAAC,CAAC;AAAC,CAAC,EACrE;EAACH,WAAW,EAAE,UAAU;EAAEC,GAAG,EAAE,GAAG;EAAEC,SAAS,EAAE,IAAI;EAAEC,YAAY,EAAE,CAAC,CAAC;AAAC,CAAC,EACvE;EAACH,WAAW,EAAE,UAAU;EAAEC,GAAG,EAAE,GAAG;EAAEC,SAAS,EAAE,IAAI;EAAEC,YAAY,EAAE,CAAC,CAAC;AAAC,CAAC,CACxE;AAED,IAAIC,SAAS,GAAG,EAAE;AAAA,SAEHC,iBAAiBA,CAAA;EAAA,OAAAC,kBAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAe,mBAAA;EAAAA,kBAAA,GAAAd,iBAAA,CAAhC,aAAmC;IACjC,IAAMS,GAAG,GAAG,WAAW;IACvBG,SAAS,GAAG,CACZ;MAACG,QAAQ,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAQ,CAAC,EACtC;MAACD,QAAQ,EAAE,cAAc;MAAEC,QAAQ,EAAE;IAAQ,CAAC,CAC7C;IAEH,IAAI;MACF,IAAMC,UAAU,SAASjC,YAAY,CAACkC,OAAO,CAACT,GAAG,CAAC;MAClD,IAAMU,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC;MAEnC,IAAIE,IAAI,EAAE;QACR,IAAQJ,QAAQ,GAAeI,IAAI,CAA3BJ,QAAQ;UAAEC,SAAQ,GAAKG,IAAI,CAAjBH,QAAQ;QAC1B,IAAMM,aAAa,GAAGV,SAAS,CAACW,IAAI,CAAC,UAACC,IAAI;UAAA,OAC1CA,IAAI,CAACT,QAAQ,KAAKA,QAAQ,IAAIS,IAAI,CAACR,QAAQ,KAAKA,SAAQ;QAAA,EAAC;QAE3D,IAAIM,aAAa,EAAE;UACjBG,UAAU,CAACC,QAAQ,CAAC,MAAM,EAAE;YAACC,IAAI,EAAE;UAAM,CAAC,CAAC;QAC3C,CAAC,MAAM;UACLC,OAAO,CAACC,GAAG,CAAE,uCAAuC,CAAC;QACvD;MACA,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAE,sBAAsB,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACC,GAAG,CAAE,OAAO,CAAC;IAC3B;EACA,CAAC;EAAA,OAAAf,kBAAA,CAAAhB,KAAA,OAAAC,SAAA;AAAA;AAED,eAAe,SAASgC,GAAGA,CAAA,EAAG;EAC5B,OACE3C,IAAA,CAACP,mBAAmB;IAAAmD,QAAA,EAClB1C,KAAA,CAACG,GAAG,CAACwC,SAAS;MAAAD,QAAA,GACZ5C,IAAA,CAACK,GAAG,CAACyC,MAAM;QAACP,IAAI,EAAC,OAAO;QAACQ,SAAS,EAAEC;MAAY,EAAc,EAC9DhD,IAAA,CAACK,GAAG,CAACyC,MAAM;QAACP,IAAI,EAAC,UAAU;QAACQ,SAAS,EAAEE;MAAe,EAAc,EACpEjD,IAAA,CAACK,GAAG,CAACyC,MAAM;QAACP,IAAI,EAAC,MAAM;QAACQ,SAAS,EAAEG,cAAe;QAACC,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,EAAc;IAAA;EACnF,EACK;AAE3B;AAEA,SAASJ,WAAWA,CAAAK,IAAA,EAAe;EAAA,IAAbhB,UAAU,GAAAgB,IAAA,CAAVhB,UAAU;EAE9B,OACEnC,KAAA,CAACnB,IAAI;IAAA6D,QAAA,GACH5C,IAAA,CAACZ,IAAI;MAAAwD,QAAA,EAAC;IAAM,EAAO,EACnB5C,IAAA,CAACb,KAAK;MACJmE,MAAM,EAAC,gBAAgB;MACvBC,WAAW,EAAC,UAAU;MACtBC,YAAY,EAAEC,UAAW;MACzBC,KAAK,EAAEC;IAAQ,EACT,EACR3D,IAAA,CAACb,KAAK;MACJmE,MAAM,EAAC,gBAAgB;MACvBC,WAAW,EAAC,UAAU;MACtBC,YAAY,EAAEI,SAAU;MACxBF,KAAK,EAAEG;IAAO,EACR,EACR7D,IAAA,CAACf,MAAM;MAACqE,MAAM,EAAC,cAAc;MAACQ,KAAK,EAAC,OAAO;MAACC,KAAK,EAAEC,MAAM,CAACC,MAAO;MACjEC,OAAO,EAAEzC;IAAkB,EAAE,EAC7BzB,IAAA,CAACjB,IAAI;MAACgF,KAAK,EAAEC,MAAM,CAACG;IAAM,EAAG,EAC7BnE,IAAA,CAACf,MAAM;MAACqE,MAAM,EAAC,iBAAiB;MAACQ,KAAK,EAAC,UAAU;MAACC,KAAK,EAAEC,MAAM,CAACC,MAAO;MACvEC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAM7B,UAAU,CAACC,QAAQ,CAAC,UAAU,EAAE;UAACC,IAAI,EAAE;QAAU,CAAC,CAAC;MAAA;IAAC,EAAG;EAAA,EACjE;AAEX;AAEA,SAASU,cAAcA,CAAA,EAAG;EACxB,IAAAmB,SAAA,GAAgC5E,QAAQ,CAAC,KAAK,CAAC;IAAA6E,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC5B,IAAII,KAAK,GAAE,OAAO;EAClB,SAASC,QAAQA,CAAA,EAAG;IAClB,QAAQD,KAAK;MACX,KAAK,WAAW;QACdjC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;QACvC,IAAI,CAAC,uBAAuB,CAACkC,IAAI,CAACC,SAAS,CAAC,EAAE;UAC5CC,gBAAgB,CAAC,mBAAmB,CAAC;QACvC,CAAC,MAAM;UACLC,iBAAiB,CAAC,EAAE,CAAC;QACvB;QACF;MACA,KAAK,UAAU;QACbtC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtC,IAAI,CAAC,uBAAuB,CAACkC,IAAI,CAACI,QAAQ,CAAC,EAAE;UAC3CF,gBAAgB,CAAC,mBAAmB,CAAC;QACvC,CAAC,MAAM;UACLA,gBAAgB,CAAC,EAAE,CAAC;QACtB;QACF;MACA,KAAK,UAAU;QACbrC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACnC,IAAI,CAAC,qBAAqB,CAACkC,IAAI,CAAC/C,QAAQ,CAAC,EAAE;UAC3CoD,gBAAgB,CAAC,kBAAkB,CAAC;QACtC,CAAC,MAAM;UACLA,gBAAgB,CAAC,EAAE,CAAC;QACtB;QACF;MACA,KAAK,OAAO;QACVxC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAChC,IAAI,CAAC,eAAe,CAACkC,IAAI,CAACM,KAAK,CAAC,EAAE;UAClCC,aAAa,CAAC,eAAe,CAAC;QAChC,CAAC,MAAM;UACLA,aAAa,CAAC,EAAE,CAAC;QACnB;QACF;MACA,KAAK,OAAO;QACV1C,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QACvC,IAAI,CAAC,6CAA6C,CAACkC,IAAI,CAACQ,WAAW,CAAC,EAAE;UACtEC,aAAa,CAAC,sBAAsB,CAAC;QACvC,CAAC,MAAM;UACLA,aAAa,CAAC,EAAE,CAAC;QACnB;QACF;MACA,KAAK,SAAS;QACZ5C,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACnC,IAAI,CAAC,QAAQ,CAACkC,IAAI,CAACU,OAAO,CAAC,EAAE;UAC7BH,aAAa,CAAC,kBAAkB,CAAC;QACnC,CAAC,MAAM;UACLI,WAAW,CAAC,EAAE,CAAC;QACjB;QACF;MACA;QACE9C,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IAAA;EAE1B;EACA,OACEvC,KAAA,CAACnB,IAAI;IAAA6D,QAAA,GACH5C,IAAA,CAACZ,IAAI;MAAAwD,QAAA,EAAC;IAAO,EAAO,EACpB5C,IAAA,CAACb,KAAK;MACJoD,IAAI,EAAC,WAAW;MAChBe,MAAM,EAAC,WAAW;MAClBC,WAAW,EAAC,YAAY;MACxBgC,MAAM,EAAEb,QAAS;MACjBc,YAAY,EAAC;IAAwD,EAC/D,EACRxF,IAAA,CAACb,KAAK;MACJoD,IAAI,EAAC,UAAU;MACfe,MAAM,EAAC,UAAU;MACjBC,WAAW,EAAC,WAAW;MACvBiC,YAAY,EAAC;IAAuD,EAC9D,EACRxF,IAAA,CAACb,KAAK;MACJoD,IAAI,EAAC,UAAU;MACfe,MAAM,EAAC,UAAU;MACjBC,WAAW,EAAC;IAAU,EAChB,EACRvD,IAAA,CAACb,KAAK;MACJoD,IAAI,EAAC,UAAU;MACfe,MAAM,EAAC,UAAU;MACjBC,WAAW,EAAC;IAAU,EAChB,EACRvD,IAAA,CAACb,KAAK;MACJoD,IAAI,EAAC,UAAU;MACfe,MAAM,EAAC,iBAAiB;MACxBC,WAAW,EAAC,kBAAkB;MAC9BiC,YAAY,EAAC;IAAiG,EACxG,EACRxF,IAAA,CAACb,KAAK;MACJoD,IAAI,EAAC,OAAO;MACZe,MAAM,EAAC,OAAO;MACdC,WAAW,EAAC,OAAO;MACnBiC,YAAY,EAAC;IAAwC,EAC/C,EACRxF,IAAA,CAACb,KAAK;MACJoD,IAAI,EAAC,OAAO;MACZe,MAAM,EAAC,aAAa;MACpBC,WAAW,EAAC,cAAc;MAC1BiC,YAAY,EAAC;IAA4E,EACnF,EACRxF,IAAA,CAACb,KAAK;MACJoD,IAAI,EAAC,SAAS;MACde,MAAM,EAAC,KAAK;MACZC,WAAW,EAAC,UAAU;MACtBiC,YAAY,EAAC;IAAqC,EAC5C,EACRxF,IAAA,CAACd,QAAQ;MACPoE,MAAM,EAAC,YAAY;MACnBQ,KAAK,EAAC,4BAA4B;MAClC2B,OAAO,EAAElB,SAAU;MACnBL,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMM,YAAY,CAAC,CAACD,SAAS,CAAC;MAAA;IAAC,EAC/B,EACXvE,IAAA,CAACf,MAAM;MAACqE,MAAM,EAAC,UAAU;MAACQ,KAAK,EAAC,UAAU;MAC1CC,KAAK,EAAEC,MAAM,CAACC,MAAO;MAACyB,QAAQ,EAAE;IAAK,EAAG;EAAA,EACnC;AAEX;AAEA,SAASxC,cAAcA,CAAA,EAAG;EACxB,IAAAyC,UAAA,GAAwBnG,QAAQ,CAAC2B,SAAS,CAAC;IAAAyE,UAAA,GAAAtB,cAAA,CAAAqB,UAAA;IAAtCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACpBrG,SAAS,CAAC,YAAM;IAAA,SACCwG,QAAQA,CAAA;MAAA,OAAAC,SAAA,CAAAtF,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAqF,UAAA;MAAAA,SAAA,GAAApF,iBAAA,CAAvB,aAA0B;QACxB,IAAM8C,KAAK,SAAS9D,YAAY,CAACkC,OAAO,CAAC,QAAQ,CAAC;QAClD,IAAI4B,KAAK,KAAK,IAAI,EAAE;UAClBlB,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGT,IAAI,CAACiE,SAAS,CAACJ,KAAK,CAAC,CAAC;UACpD,MAAMjG,YAAY,CAACsG,OAAO,CAAC,QAAQ,EAAElE,IAAI,CAACiE,SAAS,CAACJ,KAAK,CAAC,CAAC;QAC7D,CAAC,MAAM;UACL,IAAIM,WAAW,GAAGnE,IAAI,CAACC,KAAK,CAACyB,KAAK,CAAC;UACnClB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UAC/BD,OAAO,CAACC,GAAG,CAAC0D,WAAW,CAAC;UACxBL,QAAQ,CAAC9D,IAAI,CAACC,KAAK,CAACyB,KAAK,CAAC,CAAC;QAC7B;MACF,CAAC;MAAA,OAAAsC,SAAA,CAAAtF,KAAA,OAAAC,SAAA;IAAA;IACDoF,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO7F,KAAA,CAACI,KAAK,CAACuC,SAAS;IAACuD,gBAAgB,EAAC,WAAW;IAAAxD,QAAA,GAClD5C,IAAA,CAACM,KAAK,CAACwC,MAAM;MAACP,IAAI,EAAC,WAAW;MAAAK,QAAA,EAC3B,SAAAA,SAACyD,KAAK;QAAA,OACLrG,IAAA,CAACsG,UAAU,EAAAC,aAAA,CAAAA,aAAA,KAAKF,KAAK;UAAER,KAAK,EAAEA,KAAM;UAACC,QAAQ,EAAEA;QAAS,GAAG;MAAA;IAC5D,EACY,EACf9F,IAAA,CAACM,KAAK,CAACwC,MAAM;MAACP,IAAI,EAAC,SAAS;MAAAK,QAAA,EACvB,SAAAA,SAACyD,KAAK;QAAA,OACPrG,IAAA,CAACwG,aAAa,EAAAD,aAAA,CAAAA,aAAA,KAAKF,KAAK;UAAER,KAAK,EAAEA,KAAM;UAACC,QAAQ,EAAEA;QAAS,GAAG;MAAA;IAC/D,EACY;EAAA,EACC;AACpB;AAEA,SAASU,aAAaA,CAAAC,KAAA,EAAuC;EAAA,IAArCpE,UAAU,GAAAoE,KAAA,CAAVpE,UAAU;IAAEqE,KAAK,GAAAD,KAAA,CAALC,KAAK;IAAEZ,QAAQ,GAAAW,KAAA,CAARX,QAAQ;IAAED,KAAK,GAAAY,KAAA,CAALZ,KAAK;EACxD,IAAAc,kBAAA,GAAkDD,KAAK,CAACE,MAAM,CAACC,IAAI;IAA9DzF,WAAW,GAAAuF,kBAAA,CAAXvF,WAAW;IAAEE,SAAS,GAAAqF,kBAAA,CAATrF,SAAS;IAAED,GAAG,GAAAsF,kBAAA,CAAHtF,GAAG;IAAEE,YAAY,GAAAoF,kBAAA,CAAZpF,YAAY;EAC9ChC,SAAS,CAAC,YAAM;IACd8C,UAAU,CAACyE,UAAU,CAAC;MACpBhD,KAAK,EAAE1C,WAAW,KAAK,EAAE,GAAG,UAAU,GAAGA;IAC3C,CAAC,CAAC;EACJ,CAAC,EAAE,CAACiB,UAAU,CAAC,CAAC;EAChB,OACEnC,KAAA,CAACnB,IAAI;IAACgF,KAAK,EAAE;MAAEgD,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAQ,CAAE;IAAArE,QAAA,GACtE5C,IAAA,CAACZ,IAAI;MAAAwD,QAAA,EAAC;IAAc,EAAO,EAC3B5C,IAAA,CAACZ,IAAI;MAAAwD,QAAA,EAAExB;IAAW,EAAQ,EAExBG,YAAY,KAAK2F,SAAS,IAAI3F,YAAY,CAAC4F,MAAM,GAAG,CAAC,GACrDjH,KAAA,CAAAE,SAAA;MAAAwC,QAAA,GACA5C,IAAA,CAACZ,IAAI;QAAAwD,QAAA,EAAC;MAAc,EAAO,EAC1BiD,KAAK,CAACuB,MAAM,CAAC,UAAAC,IAAI;QAAA,OAAI9F,YAAY,CAAC+F,QAAQ,CAACD,IAAI,CAAChG,GAAG,CAAC;MAAA,EAAC,CACrDP,GAAG,CAAC,UAAAyG,KAAK;QAAA,OAAIvH,IAAA,CAACf,MAAM;UAAiB6E,KAAK,EAAEyD,KAAK,CAACnG,WAAY;UAC7D8C,OAAO,EAAE,SAAAA,QAAA,EAAM;YACb7B,UAAU,CAACmF,QAAQ,CAAC7H,YAAY,CAAC8H,IAAI,CAAC,SAAS,EAAE;cAACZ,IAAI,EAACU;YAAK,CAAC,CAAC,CAAC;UACjE;QAAE,GAHuBA,KAAK,CAAClG,GAAG,CAIhC;MAAA,EAAC;IAAA,EAEF,GACH6F,SAAS;EAAA,EACN;AAEX;AAEA,SAASZ,UAAUA,CAAAoB,KAAA,EAAgC;EAAA,IAA9BrF,UAAU,GAAAqF,KAAA,CAAVrF,UAAU;IAAEwD,KAAK,GAAA6B,KAAA,CAAL7B,KAAK;IAAEC,QAAQ,GAAA4B,KAAA,CAAR5B,QAAQ;EAC9CvF,UAAU,CAAC,CAACjB,WAAW,CAAC0B,IAAI,CAAC,CAAC;EAC9B,IAAA2G,UAAA,GAAwBnI,QAAQ,CAAC,EAAE,CAAC;IAAAoI,UAAA,GAAAtD,cAAA,CAAAqD,UAAA;IAA/BlD,KAAK,GAAAmD,UAAA;IAAEC,QAAQ,GAAAD,UAAA;EACpB,IAAIE,UAAU;IAAA,IAAAC,KAAA,GAAAnH,iBAAA,CAAG,WAAOyG,IAAI,EAAK;MAC/B7E,OAAO,CAACC,GAAG,CAAC4E,IAAI,CAAC;MACjBA,IAAI,CAAC/F,SAAS,GAAG,CAAC+F,IAAI,CAAC/F,SAAS;MAChCwE,QAAQ,CAAAkC,kBAAA,CAAKnC,KAAK,EAAE;MACpB,MAAMjG,YAAY,CAACsG,OAAO,CAAC,QAAQ,EAAElE,IAAI,CAACiE,SAAS,CAACJ,KAAK,CAAC,CAAC;IAC7D,CAAC;IAAA,gBALGiC,UAAUA,CAAAG,GAAA;MAAA,OAAAF,KAAA,CAAArH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAKb;EACD,IAAIuH,OAAO;IAAA,IAAAC,KAAA,GAAAvH,iBAAA,CAAG,aAAY;MACxB,IAAIwH,MAAM,GAAG,CAAC;MACdvC,KAAK,CAACwC,OAAO,CAAC,UAAAhB,IAAI,EAAI;QACpB,IAAGA,IAAI,CAAChG,GAAG,GAAG+G,MAAM,EAAE;UACpBA,MAAM,GAAGf,IAAI,CAAChG,GAAG;QACnB;MACF,CAAC,CAAC;MACF,IAAIiH,QAAQ,MAAAC,MAAA,CAAAP,kBAAA,CACPnC,KAAK,IACR;QACEzE,WAAW,EAAEqD,KAAK;QAClBnD,SAAS,EAAE,KAAK;QAChBD,GAAG,EAAE+G,MAAM,GAAG;MAChB,CAAC,EACF;MACDtC,QAAQ,CAACwC,QAAQ,CAAC;MAClB9F,OAAO,CAACC,GAAG,CAAC6F,QAAQ,CAAC;MACrB,MAAM1I,YAAY,CAACsG,OAAO,CAAC,QAAQ,EAAElE,IAAI,CAACiE,SAAS,CAACqC,QAAQ,CAAC,CAAC;MAC9DT,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC;IAAA,gBAnBGK,OAAOA,CAAA;MAAA,OAAAC,KAAA,CAAAzH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAmBV;EACD,IAAI6H,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA,EAAe;IAAA,IAAV5B,IAAI,GAAA4B,KAAA,CAAJ5B,IAAI;IACrB,OACE3G,KAAA,CAACnB,IAAI;MAACgF,KAAK,EAAEC,MAAM,CAAC0E,UAAW;MAAA9F,QAAA,GAC7B5C,IAAA,CAACd,QAAQ;QAACyJ,SAAS,EAAE9B,IAAI,CAACvF,SAAS,GAAG;UACpCsH,kBAAkB,EAAE,cAAc;UAClCC,mBAAmB,EAAE;QACvB,CAAC,GAAG3B,SAAU;QACdpD,KAAK,EAAE+C,IAAI,CAACzF,WAAY;QACxBqE,OAAO,EAAEoB,IAAI,CAACvF,SAAU;QACxB4C,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM4D,UAAU,CAACjB,IAAI,CAAC;QAAA;MAAC,EAAE,EAClC7G,IAAA,CAACf,MAAM;QAAC6E,KAAK,EAAC,SAAS;QAACI,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAM7B,UAAU,CAACC,QAAQ,CAAC,SAAS,EAAE;YAACuE,IAAI,EAAJA;UAAI,CAAC,CAAC;QAAA;MAAC,EAAE;IAAA,EAC3E;EAEX,CAAC;EACD,OACE3G,KAAA,CAACnB,IAAI;IAACgF,KAAK,EAAE,CAACC,MAAM,CAAC8E,SAAS,CAAE;IAAAlG,QAAA,GAC9B5C,IAAA,CAACnB,SAAS;MAACkF,KAAK,EAAC;IAAM,EAAG,EACxB/D,IAAA,CAAChB,QAAQ;MAAC+C,IAAI,EAAE8D,KAAM;MAAC2C,UAAU,EAAEA;IAAW,EAAG,EACjDtI,KAAA,CAACnB,IAAI;MAACgF,KAAK,EAAE,CAACC,MAAM,CAAC0E,UAAU,CAAE;MAAA9F,QAAA,GAC/B5C,IAAA,CAACb,KAAK;QACJqE,YAAY,EAAEqE,QAAS;QACvBnE,KAAK,EAAEe,KAAM;QACblB,WAAW,EAAC;MAAa,EACnB,EACRvD,IAAA,CAACf,MAAM;QAAC6E,KAAK,EAAC,UAAU;QAACI,OAAO,EAAEgE;MAAQ,EAAG;IAAA,EACxC;EAAA,EACJ;AAEX;AAEA,IAAMlE,MAAM,GAAGlF,UAAU,CAACiK,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACT/B,IAAI,EAAE,CAAC;IACPiC,eAAe,EAAE,MAAM;IACvBhC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDyB,UAAU,EAAE;IACVO,aAAa,EAAE,KAAK;IACpBhC,cAAc,EAAE,cAAc;IAC9BiC,OAAO,EAAE;EACX,CAAC;EACDjF,MAAM,EAAE;IACN+C,UAAU,EAAE,QAAQ;IACpBgC,eAAe,EAAE,SAAS;IAC1BE,OAAO,EAAE;EACX,CAAC;EACD/E,KAAK,EAAE;IACLgF,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}